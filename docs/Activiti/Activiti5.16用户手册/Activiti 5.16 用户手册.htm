<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>Activiti 5.16 用户手册</title><link href="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/style.css" rel="stylesheet" type="text/css">
				<script type="text/javascript" src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/prettify.js"></script><meta content="DocBook XSL Stylesheets V1.75.2" name="generator"></head><body onload="prettyPrint()" bgcolor="white" text="black" vlink="#840084" alink="#0000FF" link="#0000FF"><div class="book" title="Activiti 5.16 用户手册"><div class="titlepage"><div><div><h1 class="title"><a name="N10001"></a>Activiti 5.16 用户手册</h1></div></div><hr></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="chapter"><a href="#N10007">1. 简介</a></span></dt><dd><dl><dt><span class="section"><a href="#license">协议</a></span></dt><dt><span class="section"><a href="#download">下载</a></span></dt><dt><span class="section"><a href="#sources">源码</a></span></dt><dt><span class="section"><a href="#required.software">必要的软件</a></span></dt><dd><dl><dt><span class="section"><a href="#N1002A">JDK 6+</a></span></dt><dt><span class="section"><a href="#N10036">Eclipse Indigo 和 Juno</a></span></dt></dl></dd><dt><span class="section"><a href="#reporting.problems">报告问题</a></span></dt><dt><span class="section"><a href="#experimental">试验性功能</a></span></dt><dt><span class="section"><a href="#internal">内部实现类</a></span></dt></dl></dd><dt><span class="chapter"><a href="#N1007D">2. 开始学习</a></span></dt><dd><dl><dt><span class="section"><a href="#demo.setup.one.minute.version">一分钟入门</a></span></dt><dt><span class="section"><a href="#activiti.setup">安装Activiti</a></span></dt><dt><span class="section"><a href="#activiti.setup.database">安装Activiti数据库</a></span></dt><dt><span class="section"><a href="#getting.started.including.libs">引入Activiti jar和依赖</a></span></dt><dt><span class="section"><a href="#getting.started.next.steps">下一步</a></span></dt></dl></dd><dt><span class="chapter"><a href="#N10156">3. 配置</a></span></dt><dd><dl><dt><span class="section"><a href="#configuration">创建ProcessEngine</a></span></dt><dt><span class="section"><a href="#configurationRoot">ProcessEngineConfiguration bean</a></span></dt><dt><span class="section"><a href="#databaseConfiguration">数据库配置</a></span></dt><dt><span class="section"><a href="#jndiDatasourceConfig">JNDI数据库配置</a></span></dt><dd><dl><dt><span class="section"><a href="#jndi_usage">使用</a></span></dt><dt><span class="section"><a href="#jndi_configuration">配置</a></span></dt></dl></dd><dt><span class="section"><a href="#supporteddatabases">支持的数据库</a></span></dt><dt><span class="section"><a href="#creatingDatabaseTable">创建数据库表</a></span></dt><dt><span class="section"><a href="#database.tables.explained">理解数据库表的命名</a></span></dt><dt><span class="section"><a href="#databaseUpgrade">数据库升级</a></span></dt><dt><span class="section"><a href="#jobExecutorConfiguration">启用Job执行器</a></span></dt><dt><span class="section"><a href="#mailServerConfiguration">配置邮件服务器</a></span></dt><dt><span class="section"><a href="#historyConfiguration">配置历史</a></span></dt><dt><span class="section"><a href="#exposingConfigurationBeans">为表达式和脚本暴露配置</a></span></dt><dt><span class="section"><a href="#processDefinitionCacheConfiguration">配置部署缓存</a></span></dt><dt><span class="section"><a href="#loggingConfiguration">日志</a></span></dt><dt><span class="section"><a href="#MDC">映射诊断上下文</a></span></dt><dt><span class="section"><a href="#eventDispatcher">事件处理</a></span></dt><dd><dl><dt><span class="section"><a href="#eventDispatcherListener">事件监听器实现</a></span></dt><dt><span class="section"><a href="#eventDispatcherConfiguration">配置与安装</a></span></dt><dt><span class="section"><a href="#eventDispatcherConfigurationRuntime">在运行阶段添加监听器</a></span></dt><dt><span class="section"><a href="#eventDispatcherConfigurationProcessDefinition">为流程定义添加监听器</a></span></dt><dt><span class="section"><a href="#eventDispatcherCustomEvents">通过API分发事件</a></span></dt><dt><span class="section"><a href="#eventDispatcherEventTypes">支持的事件类型</a></span></dt><dt><span class="section"><a href="#eventDispatcherRemarks">附加信息</a></span></dt></dl></dd></dl></dd><dt><span class="chapter"><a href="#chapterApi">4. Activiti API</a></span></dt><dd><dl><dt><span class="section"><a href="#apiEngine">流程引擎的API和服务</a></span></dt><dt><span class="section"><a href="#N10786">异常策略</a></span></dt><dt><span class="section"><a href="#api.services">使用Activiti的服务</a></span></dt><dd><dl><dt><span class="section"><a href="#api.services.deployment">发布流程</a></span></dt><dt><span class="section"><a href="#api.services.start.processinstance">启动一个流程实例</a></span></dt><dt><span class="section"><a href="#api.services.tasls">完成任务</a></span></dt><dt><span class="section"><a href="#api.services.suspend">挂起，激活一个流程</a></span></dt><dt><span class="section"><a href="#api.services">更多知识</a></span></dt></dl></dd><dt><span class="section"><a href="#queryAPI">查询API</a></span></dt><dt><span class="section"><a href="#apiExpressions">表达式</a></span></dt><dt><span class="section"><a href="#apiUnitTesting">单元测试</a></span></dt><dt><span class="section"><a href="#apiDebuggingUnitTest">调试单元测试</a></span></dt><dt><span class="section"><a href="#apiProcessEngineInWebApp">web应用中的流程引擎</a></span></dt></dl></dd><dt><span class="chapter"><a href="#springintegration">5. Spring集成</a></span></dt><dd><dl><dt><span class="section"><a href="#N10980">ProcessEngineFactoryBean</a></span></dt><dt><span class="section"><a href="#N10998">事务</a></span></dt><dt><span class="section"><a href="#springExpressions">表达式</a></span></dt><dt><span class="section"><a href="#N109F6">资源的自动部署</a></span></dt><dt><span class="section"><a href="#springUnitTest">单元测试</a></span></dt><dt><span class="section"><a href="#spring.enable.activiti.annotation">基于注解的配置</a></span></dt><dt><span class="section"><a href="#N10A86">JPA 和 Hibernate 4.2.x</a></span></dt></dl></dd><dt><span class="chapter"><a href="#chDeployment">6. 部署</a></span></dt><dd><dl><dt><span class="section"><a href="#N10A92">业务文档</a></span></dt><dd><dl><dt><span class="section"><a href="#N10AA6">编程式部署</a></span></dt><dt><span class="section"><a href="#deploymentWithExplorer">通过Activiti Explorer控制台部署</a></span></dt></dl></dd><dt><span class="section"><a href="#N10ACA">外部资源</a></span></dt><dd><dl><dt><span class="section"><a href="#N10ACF">Java类</a></span></dt><dt><span class="section"><a href="#N10ADB">在流程中使用Spring beans</a></span></dt><dt><span class="section"><a href="#N10AED">创建独立应用</a></span></dt></dl></dd><dt><span class="section"><a href="#versioningOfProcessDefinitions">流程定义的版本</a></span></dt><dt><span class="section"><a href="#providingProcessDiagram">提供流程图片</a></span></dt><dt><span class="section"><a href="#generatingProcessDiagram">自动生成流程图片</a></span></dt><dt><span class="section"><a href="#deploymentCategory">类别</a></span></dt></dl></dd><dt><span class="chapter"><a href="#bpmn20">7. BPMN 2.0介绍</a></span></dt><dd><dl><dt><span class="section"><a href="#whatIsBpmn">啥是BPMN？</a></span></dt><dt><span class="section"><a href="#bpmnDefiningProcess">定义一个流程</a></span></dt><dt><span class="section"><a href="#10minutetutorial">快速起步：10分钟教程</a></span></dt><dd><dl><dt><span class="section"><a href="#bpmn10MinuteTutorialPrerequisites">前提</a></span></dt><dt><span class="section"><a href="#bpmn10MinuteTutorialGoal">目标</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleUseCase">用例</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleDiagram">流程图</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleXml">XML内容</a></span></dt><dt><span class="section"><a href="#bpmnFirstExamplStartProcess">启动一个流程实例</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleCandidateList">任务列表</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleClaimTask">领取任务</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleCompleteTask">完成任务</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleEndingProcess">结束流程</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleCode">代码总结</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleFutureEnhancements">更多思考</a></span></dt></dl></dd></dl></dd><dt><span class="chapter"><a href="#bpmnConstructs">8. BPMN 2.0结构</a></span></dt><dd><dl><dt><span class="section"><a href="#bpmnCustomExtensions">自定义扩展</a></span></dt><dt><span class="section"><a href="#bpmnEvents">事件（Event）</a></span></dt><dd><dl><dt><span class="section"><a href="#eventDefinitions">事件定义</a></span></dt><dt><span class="section"><a href="#timerEventDefinitions">定时器事件定义</a></span></dt><dt><span class="section"><a href="#bpmnErrorEventDefinition">错误事件定义</a></span></dt><dt><span class="section"><a href="#bpmnSignalEventDefinition">信号事件定义</a></span></dt><dt><span class="section"><a href="#bpmnMessageEventDefinition">消息事件定义</a></span></dt><dt><span class="section"><a href="#bpmnStartEvents">开始事件</a></span></dt><dt><span class="section"><a href="#bpmnNoneStartEvent">空开始事件</a></span></dt><dt><span class="section"><a href="#bpmnTimerStartEvent">定时开始事件</a></span></dt><dt><span class="section"><a href="#bpmnMessageStartEvent">消息开始事件</a></span></dt><dt><span class="section"><a href="#bpmnSignalStartEvent">信号开始事件</a></span></dt><dt><span class="section"><a href="#bpmnErrorStartEvent">错误开始事件</a></span></dt><dt><span class="section"><a href="#bpmnEndEvent">结束事件</a></span></dt><dt><span class="section"><a href="#bpmnNoneEndEvent">空结束事件</a></span></dt><dt><span class="section"><a href="#bpmnErrorEndEvent">错误结束事件</a></span></dt><dt><span class="section"><a href="#bpmnCancelEndEvent">取消结束事件</a></span></dt><dt><span class="section"><a href="#bpmnBoundaryEvent">边界事件</a></span></dt><dt><span class="section"><a href="#bpmnTimerBoundaryEvent">定时边界事件</a></span></dt><dt><span class="section"><a href="#bpmnBoundaryErrorEvent">错误边界事件</a></span></dt><dt><span class="section"><a href="#bpmnBoundarySignalEvent">信号边界事件</a></span></dt><dt><span class="section"><a href="#bpmnBoundaryMessageEvent">消息边界事件</a></span></dt><dt><span class="section"><a href="#bpmnBoundaryCancelEvent">取消边界事件</a></span></dt><dt><span class="section"><a href="#bpmnBoundaryCompensationEvent">补偿边界事件</a></span></dt><dt><span class="section"><a href="#bpmnIntermediateCatchingEvent">中间捕获事件</a></span></dt><dt><span class="section"><a href="#bpmnTimerIntermediateEvent">定时中间捕获事件</a></span></dt><dt><span class="section"><a href="#bpmnIntermediateSignalEvent">信号中间捕获事件</a></span></dt><dt><span class="section"><a href="#bpmnIntermediateMessageEvent">消息中间捕获事件</a></span></dt><dt><span class="section"><a href="#bpmnIntermediateThrowEvent">内部触发事件</a></span></dt><dt><span class="section"><a href="#bpmnIntermediateThrowNoneEvent">中间触发空事件</a></span></dt><dt><span class="section"><a href="#bpmnIntermediateThrowSignalEvent">信号中间触发事件</a></span></dt><dt><span class="section"><a href="#bpmnIntermediateThrowCompensationEvent">补偿中间触发事件</a></span></dt></dl></dd><dt><span class="section"><a href="#bpmnSequenceFlow">顺序流</a></span></dt><dd><dl><dt><span class="section"><a href="#sequenceFlowDescription">描述</a></span></dt><dt><span class="section"><a href="#sequenceFlowGraphicalNotation">图形标记</a></span></dt><dt><span class="section"><a href="#sequenceFlowXml">XML内容</a></span></dt><dt><span class="section"><a href="#bpmnConditionalSequenceFlow">条件顺序流</a></span></dt><dt><span class="section"><a href="#bpmnDefaultSequenceFlow">默认顺序流</a></span></dt></dl></dd><dt><span class="section"><a href="#bpmnGateways">网关</a></span></dt><dd><dl><dt><span class="section"><a href="#bpmnExclusiveGateway">排他网关</a></span></dt><dt><span class="section"><a href="#bpmnParallelGateway">并行网关</a></span></dt><dt><span class="section"><a href="#bpmnInclusiveGateway">包含网关</a></span></dt><dt><span class="section"><a href="#bpmnEventbasedGateway">基于事件网关</a></span></dt></dl></dd><dt><span class="section"><a href="#bpmnTask"> 任务</a></span></dt><dd><dl><dt><span class="section"><a href="#bpmnUserTask">用户任务</a></span></dt><dt><span class="section"><a href="#bpmnScriptTask">脚本任务</a></span></dt><dt><span class="section"><a href="#bpmnJavaServiceTask">Java服务任务</a></span></dt><dt><span class="section"><a href="#bpmnWebserviceTask">Web Service任务</a></span></dt><dt><span class="section"><a href="#bpmnBusinessRuleTask">业务规则任务</a></span></dt><dt><span class="section"><a href="#bpmnEmailTask">邮件任务</a></span></dt><dt><span class="section"><a href="#bpmnMuleTask">Mule任务</a></span></dt><dt><span class="section"><a href="#bpmnCamelTask">Camel任务</a></span></dt><dt><span class="section"><a href="#bpmnManualTask">手工任务</a></span></dt><dt><span class="section"><a href="#bpmnReceiveTask">Java接收任务</a></span></dt><dt><span class="section"><a href="#bpmnShellTask">Shell任务</a></span></dt><dt><span class="section"><a href="#executionListeners">执行监听器</a></span></dt><dt><span class="section"><a href="#taskListeners">任务监听器</a></span></dt><dt><span class="section"><a href="#bpmnMultiInstance">多实例（循环）</a></span></dt><dt><span class="section"><a href="#bpmnCompensationHandlers">补偿处理器</a></span></dt></dl></dd><dt><span class="section"><a href="#bpmnSubprocessAndCallActivity">子流程和调用节点</a></span></dt><dd><dl><dt><span class="section"><a href="#bpmnSubProcess">子流程</a></span></dt><dt><span class="section"><a href="#bpmnEventSubprocess">事件子流程</a></span></dt><dt><span class="section"><a href="#bpmnTransactionSubprocess">事务子流程</a></span></dt><dt><span class="section"><a href="#bpmnCallActivity">调用活动（子流程）</a></span></dt></dl></dd><dt><span class="section"><a href="#bpmnConcurrencyAndTransactions">事务和并发</a></span></dt><dd><dl><dt><span class="section"><a href="#asyncContinuations">异步操作</a></span></dt><dt><span class="section"><a href="#exclusiveJobs">排他任务</a></span></dt></dl></dd><dt><span class="section"><a href="#security">流程实例授权</a></span></dt><dt><span class="section"><a href="#dataobjects">数据对象</a></span></dt></dl></dd><dt><span class="chapter"><a href="#forms">9. 表单</a></span></dt><dd><dl><dt><span class="section"><a href="#formProperties">表单属性</a></span></dt><dt><span class="section"><a href="#externalFormRendering">外置表单的渲染</a></span></dt></dl></dd><dt><span class="chapter"><a href="#N125E9">10. JPA</a></span></dt><dd><dl><dt><span class="section"><a href="#N125FC">要求</a></span></dt><dt><span class="section"><a href="#jpaconfiguration">配置</a></span></dt><dt><span class="section"><a href="#N1268C">用法</a></span></dt><dd><dl><dt><span class="section"><a href="#N1268F">简单例子</a></span></dt><dt><span class="section"><a href="#N126D6">查询JPA流程变量</a></span></dt><dt><span class="section"><a href="#N12703">使用Spring beans和JPA结合的高级例子</a></span></dt></dl></dd></dl></dd><dt><span class="chapter"><a href="#history">11. 历史</a></span></dt><dd><dl><dt><span class="section"><a href="#historyQuery">查询历史</a></span></dt><dd><dl><dt><span class="section"><a href="#historyQueryProcessInstance">HistoricProcessInstanceQuery</a></span></dt><dt><span class="section"><a href="#historyQueryVariableInstance">HistoricVariableInstanceQuery</a></span></dt><dt><span class="section"><a href="#historyQueryActivityInstance">HistoricActivityInstanceQuery</a></span></dt><dt><span class="section"><a href="#historyQueryDetail">HistoricDetailQuery</a></span></dt><dt><span class="section"><a href="#historyQueryTaskInstance">HistoricTaskInstanceQuery</a></span></dt></dl></dd><dt><span class="section"><a href="#historyConfig">历史配置</a></span></dt><dt><span class="section"><a href="#historyFormAuditPurposes">审计目的的历史</a></span></dt></dl></dd><dt><span class="chapter"><a href="#activitiDesigner">12. Eclipse Designer</a></span></dt><dd><dl><dt><span class="section"><a href="#eclipseDesignerInstallation">Installation</a></span></dt><dt><span class="section"><a href="#eclipseDesignerEditorFeatures">Activiti Designer 编辑器的特性</a></span></dt><dt><span class="section"><a href="#eclipseDesignerBPMNFeatures">Activiti Designer 的BPMN 特性</a></span></dt><dt><span class="section"><a href="#eclipseDesignerDeployment">Activiti Designer 部署特性</a></span></dt><dt><span class="section"><a href="#eclipseDesignerExtending">扩展Activiti Designer</a></span></dt><dd><dl><dt><span class="section"><a href="#eclipseDesignerCustomizingPalette">定制画板</a></span></dt><dt><span class="section"><a href="#N12CBC">校验图形和导出到自定义的输出格式</a></span></dt></dl></dd></dl></dd><dt><span class="chapter"><a href="#activitiExplorer">13. Activiti Explorer</a></span></dt><dd><dl><dt><span class="section"><a href="#N12DF2">流程图</a></span></dt><dt><span class="section"><a href="#N12E0E">任务</a></span></dt><dt><span class="section"><a href="#N12E3E">启动流程实例</a></span></dt><dt><span class="section"><a href="#N12E51">我的流程实例</a></span></dt><dt><span class="section"><a href="#N12E60">管理</a></span></dt><dt><span class="section"><a href="#explorer.reporting">报表</a></span></dt><dd><dl><dt><span class="section"><a href="#explorer.reporting.json">报告数据JSON</a></span></dt><dt><span class="section"><a href="#explorer.reporting.example">实例流程</a></span></dt><dt><span class="section"><a href="#explorer.reporting.start.form">报告开始表单</a></span></dt><dt><span class="section"><a href="#explorer.reporting.examples">流程例子</a></span></dt></dl></dd><dt><span class="section"><a href="#explorer.change.database">修改数据库</a></span></dt></dl></dd><dt><span class="chapter"><a href="#activitiModeler">14. Activiti Modeler</a></span></dt><dd><dl><dt><span class="section"><a href="#N12FC5">编辑模型</a></span></dt><dt><span class="section"><a href="#N12FD0">导入模型</a></span></dt><dt><span class="section"><a href="#N12FDB">把发布的流程定义转换成可编辑的模型</a></span></dt><dt><span class="section"><a href="#N12FE6">把模型导出成BPMN XML</a></span></dt><dt><span class="section"><a href="#N12FF1">把模型部署到Activiti引擎中</a></span></dt></dl></dd><dt><span class="chapter"><a href="#N12FFD">15. REST API</a></span></dt><dd><dl><dt><span class="section"><a href="#N13000">通用Activiti REST原则</a></span></dt><dd><dl><dt><span class="section"><a href="#N13003">安装与认证</a></span></dt><dt><span class="section"><a href="#restUsageInTomcat">使用Tomcat</a></span></dt><dt><span class="section"><a href="#N1304F">方法和返回值</a></span></dt><dt><span class="section"><a href="#N130D2">错误响应体</a></span></dt><dt><span class="section"><a href="#N130D9">请求参数</a></span></dt></dl></dd><dt><span class="section"><a href="#N13300">部署</a></span></dt><dd><dl><dt><span class="section"><a href="#N1330B">部署列表</a></span></dt><dt><span class="section"><a href="#N133A6">获得一个部署</a></span></dt><dt><span class="section"><a href="#N133EC">创建新部署</a></span></dt><dt><span class="section"><a href="#N1342C">删除部署</a></span></dt><dt><span class="section"><a href="#N13469">列出部署内的资源</a></span></dt><dt><span class="section"><a href="#N134D3">获取部署资源</a></span></dt><dt><span class="section"><a href="#N13544">获取部署资源的内容</a></span></dt></dl></dd><dt><span class="section"><a href="#N13595">流程定义</a></span></dt><dd><dl><dt><span class="section"><a href="#N13598">流程定义列表</a></span></dt><dt><span class="section"><a href="#N1367D">获得一个流程定义</a></span></dt><dt><span class="section"><a href="#N136D4">更新流程定义的分类</a></span></dt><dt><span class="section"><a href="#N1370C">获得一个流程定义的资源内容</a></span></dt><dt><span class="section"><a href="#N1373B">获得流程定义的BPMN模型</a></span></dt><dt><span class="section"><a href="#N13786">暂停流程定义</a></span></dt><dt><span class="section"><a href="#N137E9">激活流程定义</a></span></dt><dt><span class="section"><a href="#N13825">获得流程定义的所有候选启动者</a></span></dt><dt><span class="section"><a href="#N1386B">为流程定义添加一个候选启动者</a></span></dt><dt><span class="section"><a href="#N138C3">删除流程定义的候选启动者</a></span></dt><dt><span class="section"><a href="#N13920">获得流程定义的一个候选启动者</a></span></dt></dl></dd><dt><span class="section"><a href="#N1397D">模型</a></span></dt><dd><dl><dt><span class="section"><a href="#N13980">获得模型列表</a></span></dt><dt><span class="section"><a href="#N13A6C">获得一个模型</a></span></dt><dt><span class="section"><a href="#N13AB2">更新模型</a></span></dt><dt><span class="section"><a href="#N13AE8">新建模型</a></span></dt><dt><span class="section"><a href="#N13B16">删除模型</a></span></dt><dt><span class="section"><a href="#N13B53">获得模型的可编译源码</a></span></dt><dt><span class="section"><a href="#N13B99">设置模型的可编辑源码</a></span></dt><dt><span class="section"><a href="#N13BE8">获得模型的附加可编辑源码</a></span></dt><dt><span class="section"><a href="#N13C2E">设置模型的附加可编辑源码</a></span></dt></dl></dd><dt><span class="section"><a href="#N13C7D">流程实例</a></span></dt><dd><dl><dt><span class="section"><a href="#N13C80">获得流程实例</a></span></dt><dt><span class="section"><a href="#N13CC6">删除流程实例</a></span></dt><dt><span class="section"><a href="#N13D03">激活或挂起流程实例</a></span></dt><dt><span class="section"><a href="#N13D5C">启动流程实例</a></span></dt><dt><span class="section"><a href="#restProcessInstancesGet">显示流程实例列表</a></span></dt><dt><span class="section"><a href="#N13E9D">查询流程实例</a></span></dt><dt><span class="section"><a href="#N13EDE">获得流程实例的流程图</a></span></dt><dt><span class="section"><a href="#N13F29">获得流程实例的参与者</a></span></dt><dt><span class="section"><a href="#N13F72">为流程实例添加一个参与者</a></span></dt><dt><span class="section"><a href="#N13FCF">删除一个流程实例的参与者</a></span></dt><dt><span class="section"><a href="#N1402A">列出流程实例的变量</a></span></dt><dt><span class="section"><a href="#N14079">获得流程实例的一个变量</a></span></dt><dt><span class="section"><a href="#N140D6">创建（或更新）流程实例变量</a></span></dt><dt><span class="section"><a href="#N1413F">更新一个流程实例变量</a></span></dt><dt><span class="section"><a href="#N141A7">创建一个新的二进制流程变量</a></span></dt><dt><span class="section"><a href="#N14212">更新一个二进制的流程实例变量</a></span></dt></dl></dd><dt><span class="section"><a href="#N14278">分支</a></span></dt><dd><dl><dt><span class="section"><a href="#N1427B">获取一个分支</a></span></dt><dt><span class="section"><a href="#N142C1">对分支执行操作</a></span></dt><dt><span class="section"><a href="#N14338">获得一个分支的所有活动节点</a></span></dt><dt><span class="section"><a href="#restExecutionsGet">获取分支列表</a></span></dt><dt><span class="section"><a href="#N14449">查询分支</a></span></dt><dt><span class="section"><a href="#N14490">获取分支的变量列表</a></span></dt><dt><span class="section"><a href="#N144E7">获得分支的一个变量</a></span></dt><dt><span class="section"><a href="#N1454C">新建（或更新）分支变量</a></span></dt><dt><span class="section"><a href="#N145B9">更新分支变量</a></span></dt><dt><span class="section"><a href="#N14618">创建一个二进制变量</a></span></dt><dt><span class="section"><a href="#N14683">更新已经已存在的二进制分支变量</a></span></dt></dl></dd><dt><span class="section"><a href="#N146FA">任务</a></span></dt><dd><dl><dt><span class="section"><a href="#N146FD">获取任务</a></span></dt><dt><span class="section"><a href="#restTasksGet">任务列表</a></span></dt><dt><span class="section"><a href="#N14924">查询任务</a></span></dt><dt><span class="section"><a href="#N14967">更新任务</a></span></dt><dt><span class="section"><a href="#N149A2">操作任务</a></span></dt><dt><span class="section"><a href="#N14A0A">删除任务</a></span></dt><dt><span class="section"><a href="#N14A61">获得任务的变量</a></span></dt><dt><span class="section"><a href="#N14ABA">获取任务的一个变量</a></span></dt><dt><span class="section"><a href="#N14B1C">获取变量的二进制数据</a></span></dt><dt><span class="section"><a href="#N14B8C">创建任务变量</a></span></dt><dt><span class="section"><a href="#N14C03">创建二进制任务变量</a></span></dt><dt><span class="section"><a href="#N14C79">更新任务的一个已有变量</a></span></dt><dt><span class="section"><a href="#N14CF4">更新一个二进制任务变量</a></span></dt><dt><span class="section"><a href="#N14D6E">删除任务变量</a></span></dt><dt><span class="section"><a href="#N14DC6">删除任务的所有局部变量</a></span></dt><dt><span class="section"><a href="#N14E03">获得任务的所有IdentityLink</a></span></dt><dt><span class="section"><a href="#N14E49">获得一个任务的所有组或用户的IdentityLink</a></span></dt><dt><span class="section"><a href="#N14E53">获得一个任务的一个IdentityLink</a></span></dt><dt><span class="section"><a href="#N14EB9">为任务创建一个IdentityLink</a></span></dt><dt><span class="section"><a href="#N14F11">删除任务的一个IdentityLink</a></span></dt><dt><span class="section"><a href="#N14F6E">为任务创建评论</a></span></dt><dt><span class="section"><a href="#N14FC8">获得任务的所有评论</a></span></dt><dt><span class="section"><a href="#N1500C">获得任务的一个评论</a></span></dt><dt><span class="section"><a href="#N15059">删除任务的一条评论</a></span></dt><dt><span class="section"><a href="#N1509C">获得任务的所有事件</a></span></dt><dt><span class="section"><a href="#N150E0">获得任务的一个事件</a></span></dt><dt><span class="section"><a href="#N1512D">为任务创建一个附件，包含外部资源的链接</a></span></dt><dt><span class="section"><a href="#N1517F">为任务创建一个附件，包含附件文件</a></span></dt><dt><span class="section"><a href="#N151E5">获得任务的所有附件</a></span></dt><dt><span class="section"><a href="#N15229">获得任务的一个附件</a></span></dt><dt><span class="section"><a href="#N1528C">获取附件的内容</a></span></dt><dt><span class="section"><a href="#N152DE">删除任务的一个附件</a></span></dt></dl></dd><dt><span class="section"><a href="#N15321">历史</a></span></dt><dd><dl><dt><span class="section"><a href="#N15324">获得历史流程实例</a></span></dt><dt><span class="section"><a href="#restHistoricProcessInstancesGet">历史流程实例列表</a></span></dt><dt><span class="section"><a href="#N15438">查询历史流程实例</a></span></dt><dt><span class="section"><a href="#N15478">删除历史流程实例</a></span></dt><dt><span class="section"><a href="#N15499">获取历史流程实例的IdentityLink</a></span></dt><dt><span class="section"><a href="#N154C3">获取历史流程实例变量的二进制数据</a></span></dt><dt><span class="section"><a href="#N154F6">为历史流程实例创建一条新评论</a></span></dt><dt><span class="section"><a href="#N15550">获得一个历史流程实例的所有评论</a></span></dt><dt><span class="section"><a href="#N15594">获得历史流程实例的一条评论</a></span></dt><dt><span class="section"><a href="#N155E1">删除历史流程实例的一条评论</a></span></dt><dt><span class="section"><a href="#N15624">获得单独历史任务实例</a></span></dt><dt><span class="section"><a href="#restHistoricTaskInstancesGet">获取历史任务实例</a></span></dt><dt><span class="section"><a href="#N1581C">查询历史任务实例</a></span></dt><dt><span class="section"><a href="#N1585F">删除历史任务实例</a></span></dt><dt><span class="section"><a href="#N15880">获得历史任务实例的IdentityLink</a></span></dt><dt><span class="section"><a href="#N158AA">获取历史任务实例变量的二进制值</a></span></dt><dt><span class="section"><a href="#restHistoricActivityInstancesGet">获取历史活动实例</a></span></dt><dt><span class="section"><a href="#N1599A">查询历史活动实例</a></span></dt><dt><span class="section"><a href="#restHistoricVariableInstancesGet">列出历史变量实例</a></span></dt><dt><span class="section"><a href="#N15A48">查询历史变量实例</a></span></dt><dt><span class="section"><a href="#N15A88">获取历史任务实例变量的二进制值</a></span></dt><dt><span class="section"><a href="#restHistoricDetailGet">获取历史细节</a></span></dt><dt><span class="section"><a href="#N15B42">查询历史细节</a></span></dt><dt><span class="section"><a href="#N15B7B">获取历史细节变量的二进制数据</a></span></dt></dl></dd><dt><span class="section"><a href="#N15BAE">表单</a></span></dt><dd><dl><dt><span class="section"><a href="#N15BB1">获取表单数据</a></span></dt><dt><span class="section"><a href="#N15C00">提交任务表单数据</a></span></dt></dl></dd><dt><span class="section"><a href="#N15C3C">数据库表</a></span></dt><dd><dl><dt><span class="section"><a href="#N15C3F">表列表</a></span></dt><dt><span class="section"><a href="#N15C64">获得一张表</a></span></dt><dt><span class="section"><a href="#N15CA8">获得表的列信息</a></span></dt><dt><span class="section"><a href="#N15CEC">获得表的行数据</a></span></dt></dl></dd><dt><span class="section"><a href="#N15D6A">引擎</a></span></dt><dd><dl><dt><span class="section"><a href="#N15D6D">获得引擎属性</a></span></dt><dt><span class="section"><a href="#N15D92">获得引擎信息</a></span></dt></dl></dd><dt><span class="section"><a href="#N15DB7">运行时</a></span></dt><dd><dl><dt><span class="section"><a href="#N15DBA">接收信号事件</a></span></dt></dl></dd><dt><span class="section"><a href="#N15E2F">作业</a></span></dt><dd><dl><dt><span class="section"><a href="#N15E32">获取一个作业</a></span></dt><dt><span class="section"><a href="#N15E76">删除作业</a></span></dt><dt><span class="section"><a href="#N15EB3">执行作业</a></span></dt><dt><span class="section"><a href="#N15EFB">获得作业的异常堆栈</a></span></dt><dt><span class="section"><a href="#N15F37">获得作业列表</a></span></dt></dl></dd><dt><span class="section"><a href="#N16026">用户</a></span></dt><dd><dl><dt><span class="section"><a href="#N16029">获得一个用户</a></span></dt><dt><span class="section"><a href="#N1606D">获取用户列表</a></span></dt><dt><span class="section"><a href="#N16106">更新用户</a></span></dt><dt><span class="section"><a href="#N16141">创建用户</a></span></dt><dt><span class="section"><a href="#N16174">删除用户</a></span></dt><dt><span class="section"><a href="#N161B1">获取用户图片</a></span></dt><dt><span class="section"><a href="#N161F2">更新用户图片</a></span></dt><dt><span class="section"><a href="#N16242">列出用户列表</a></span></dt><dt><span class="section"><a href="#N16286">获取用户信息</a></span></dt><dt><span class="section"><a href="#N162D3">更新用户的信息</a></span></dt><dt><span class="section"><a href="#N1632E">创建用户信息条目</a></span></dt><dt><span class="section"><a href="#N16388">删除用户的信息</a></span></dt></dl></dd><dt><span class="section"><a href="#N163CE">群组</a></span></dt><dd><dl><dt><span class="section"><a href="#N163D1">获得群组</a></span></dt><dt><span class="section"><a href="#N16415">获取群组列表</a></span></dt><dt><span class="section"><a href="#N16490">更新群组</a></span></dt><dt><span class="section"><a href="#N164C8">创建群组</a></span></dt><dt><span class="section"><a href="#N164FB">删除群组</a></span></dt><dt><span class="section"><a href="#N16538">获取群组的成员</a></span></dt><dt><span class="section"><a href="#N16543">为群组添加一个成员</a></span></dt><dt><span class="section"><a href="#N1659C">删除群组的成员</a></span></dt></dl></dd><dt><span class="section"><a href="#N165EC">传统REST - 通用方法</a></span></dt><dt><span class="section"><a href="#N16604">资源</a></span></dt><dd><dl><dt><span class="section"><a href="#N16608">上传发布</a></span></dt><dt><span class="section"><a href="#N1662C">获取发布</a></span></dt><dt><span class="section"><a href="#N16650">获取发布资源</a></span></dt><dt><span class="section"><a href="#N16674">获取发布的一个资源</a></span></dt><dt><span class="section"><a href="#N16698">删除发布</a></span></dt><dt><span class="section"><a href="#N166BC">删除发布</a></span></dt></dl></dd><dt><span class="section"><a href="#N166E4">引擎</a></span></dt><dd><dl><dt><span class="section"><a href="#N166E7">获取流程引擎</a></span></dt></dl></dd><dt><span class="section"><a href="#N1670C">流程</a></span></dt><dd><dl><dt><span class="section"><a href="#N1670F">流程定义列表</a></span></dt><dt><span class="section"><a href="#N16733">获得流程定义表单属性</a></span></dt><dt><span class="section"><a href="#N16757">获得流程定义表单资源</a></span></dt><dt><span class="section"><a href="#N1677B">获取流程定义图</a></span></dt><dt><span class="section"><a href="#N1679F">启动流程实例</a></span></dt><dt><span class="section"><a href="#N167C6">流程实例列表</a></span></dt><dt><span class="section"><a href="#N167EA">获得流程实例细节</a></span></dt><dt><span class="section"><a href="#N1680E">获得流程实例图</a></span></dt><dt><span class="section"><a href="#N16832">获得流程实例的任务</a></span></dt><dt><span class="section"><a href="#N16856">继续特定流程实例的活动（receiveTask）</a></span></dt><dt><span class="section"><a href="#N1687D">触发特定流程实例的信号</a></span></dt></dl></dd><dt><span class="section"><a href="#N168A5">任务</a></span></dt><dd><dl><dt><span class="section"><a href="#N168A8">获得任务简介</a></span></dt><dt><span class="section"><a href="#N168CC">任务列表</a></span></dt><dt><span class="section"><a href="#N168FA">获取任务</a></span></dt><dt><span class="section"><a href="#N1691E">获取任务表单</a></span></dt><dt><span class="section"><a href="#N16942">执行任务操作</a></span></dt><dt><span class="section"><a href="#N1696A">表单属性列表</a></span></dt><dt><span class="section"><a href="#N1698E">为任务添加一个附件</a></span></dt><dt><span class="section"><a href="#N169B3">获得任务附件</a></span></dt><dt><span class="section"><a href="#N169D7">为任务添加一个url</a></span></dt></dl></dd><dt><span class="section"><a href="#N169FD">身份</a></span></dt><dd><dl><dt><span class="section"><a href="#N16A00">登录</a></span></dt><dt><span class="section"><a href="#N16A27">获得用户</a></span></dt><dt><span class="section"><a href="#N16A4B">列出用户的群组</a></span></dt><dt><span class="section"><a href="#N16A6D">查询用户</a></span></dt><dt><span class="section"><a href="#N16A92">创建用户</a></span></dt><dt><span class="section"><a href="#N16ABC">为群组添加用户</a></span></dt><dt><span class="section"><a href="#N16AE3">从群组删除用户</a></span></dt><dt><span class="section"><a href="#N16B07">获得用户图片</a></span></dt><dt><span class="section"><a href="#N16B2B">获得群组</a></span></dt><dt><span class="section"><a href="#N16B4F">群组用户列表</a></span></dt><dt><span class="section"><a href="#N16B71">查询群组</a></span></dt><dt><span class="section"><a href="#N16B93">创建群组</a></span></dt><dt><span class="section"><a href="#N16BBD">为群组添加用户</a></span></dt><dt><span class="section"><a href="#N16BE4">为群组删除用户</a></span></dt></dl></dd><dt><span class="section"><a href="#N16C09">管理</a></span></dt><dd><dl><dt><span class="section"><a href="#N16C0C">作业列表</a></span></dt><dt><span class="section"><a href="#N16C30">获得作业</a></span></dt><dt><span class="section"><a href="#N16C54">执行一个作业</a></span></dt><dt><span class="section"><a href="#N16C78">执行多个作业</a></span></dt><dt><span class="section"><a href="#N16C9F">数据库表列表</a></span></dt><dt><span class="section"><a href="#N16CC3">获得表元数据</a></span></dt><dt><span class="section"><a href="#N16CE5">获得表数据</a></span></dt></dl></dd></dl></dd><dt><span class="chapter"><a href="#cdiintegration">16. 集成CDI</a></span></dt><dd><dl><dt><span class="section"><a href="#N16D25">设置activiti-cdi</a></span></dt><dd><dl><dt><span class="section"><a href="#N16D2A">查找流程引擎</a></span></dt><dt><span class="section"><a href="#N16D4E">配置Process Engine</a></span></dt><dt><span class="section"><a href="#N16D6C">发布流程</a></span></dt></dl></dd><dt><span class="section"><a href="#N16D7A">基于CDI环境的流程执行</a></span></dt><dd><dl><dt><span class="section"><a href="#N16D7F">与流程实例进行关联交互</a></span></dt><dt><span class="section"><a href="#N16DA9">声明式流程控制</a></span></dt><dt><span class="section"><a href="#N16DC0">在流程中引用bean</a></span></dt><dt><span class="section"><a href="#N16DD4">使用@BusinessProcessScoped beans</a></span></dt><dt><span class="section"><a href="#N16DDE">注入流程变量</a></span></dt><dt><span class="section"><a href="#N16E00">接收流程事件</a></span></dt><dt><span class="section"><a href="#N16E38">更多功能</a></span></dt></dl></dd><dt><span class="section"><a href="#N16E50">已知的问题</a></span></dt></dl></dd><dt><span class="chapter"><a href="#chapter_ldap">17. 集成LDAP</a></span></dt><dd><dl><dt><span class="section"><a href="#ldap_usage">用法</a></span></dt><dt><span class="section"><a href="#ldap_usecases">用例</a></span></dt><dt><span class="section"><a href="#ldap_configuration">配置</a></span></dt><dt><span class="section"><a href="#ldap_properties">属性</a></span></dt><dt><span class="section"><a href="#lda-explorer">为Explorer集成LDAP</a></span></dt></dl></dd><dt><span class="chapter"><a href="#N16FAF">18. 高级功能</a></span></dt><dd><dl><dt><span class="section"><a href="#advanced_parseHandlers">监听流程解析</a></span></dt><dt><span class="section"><a href="#advanced.uuid.generator">支持高并发的UUID id生成器</a></span></dt><dt><span class="section"><a href="#advanced.tenancy">多租户</a></span></dt><dt><span class="section"><a href="#advanced.custom.sql.queries">执行自定义SQL</a></span></dt><dt><span class="section"><a href="#advanced.process.engine.configurators">使用ProcessEngineConfigurator实现高级流程引擎配置</a></span></dt><dt><span class="section"><a href="#advanced.safe.bpmn.xml">启用安全的BPMN 2.0 xml</a></span></dt><dt><span class="section"><a href="#advanced.event.logging">事件日志（实验）</a></span></dt></dl></dd><dt><span class="chapter"><a href="#N17141">19. 使用Activiti-Crystalball进行流程仿真（实验）</a></span></dt><dd><dl><dt><span class="section"><a href="#crb-introduction">介绍</a></span></dt><dd><dl><dt><span class="section"><a href="#crb-overview">简介</a></span></dt><dt><span class="section"><a href="#crb-unique">CrystalBall是独立的</a></span></dt></dl></dd><dt><span class="section"><a href="#crb-inside">CrystalBall内部</a></span></dt><dt><span class="section"><a href="#crb-history-analysis">历史分析</a></span></dt><dd><dl><dt><span class="section"><a href="#crb-collectEvents">历史的事件</a></span></dt><dt><span class="section"><a href="#crb-playback">回放</a></span></dt><dt><span class="section"><a href="#crb-debug">调试流程引擎</a></span></dt><dt><span class="section"><a href="#crb-replay">重播</a></span></dt></dl></dd></dl></dd></dl></div><div class="list-of-tables"><p><b>List of Tables</b></p><dl><dt>2.1. <a href="#N100BD">示例用户</a></dt><dt>2.2. <a href="#N100E2">webapp工具</a></dt><dt>3.1. <a href="#databaseTypes">支持的数据库</a></dt><dt>3.2. <a href="#eventTypes">支持的事件</a></dt><dt>6.1. <a href="#N10B2D"></a></dt><dt>6.2. <a href="#N10B49"></a></dt><dt>6.3. <a href="#N10B74"></a></dt><dt>8.1. <a href="#N11CAE">邮件服务器配置</a></dt><dt>8.2. <a href="#N11D11">邮件服务器配置</a></dt><dt>8.3. <a href="#N11DB4">Mule服务器配置</a></dt><dt>8.4. <a href="#N11E25">终端URL：</a></dt><dt>8.5. <a href="#N11E63">已有的camel行为：</a></dt><dt>8.6. <a href="#N11E87">已有的camel行为：</a></dt><dt>8.7. <a href="#N11F45">Shell任务参数配置</a></dt><dt>15.1. <a href="#N13052">HTTP方法和对应操作</a></dt><dt>15.2. <a href="#N13076">HTTP方法响应代码</a></dt><dt>15.3. <a href="#N130F0">URL查询参数类型</a></dt><dt>15.4. <a href="#N13135">JSON参数类型</a></dt><dt>15.5. <a href="#N1317D">查询JSON参数</a></dt><dt>15.6. <a href="#N131B1">查询JSON参数</a></dt><dt>15.7. <a href="#N131F8">默认查询JSON类型</a></dt><dt>15.8. <a href="#N13246">变量JSON属性</a></dt><dt>15.9. <a href="#N13299">变量类型</a></dt><dt>15.10. <a href="#N13315">URL查询参数</a></dt><dt>15.11. <a href="#N1338B">REST响应码</a></dt><dt>15.12. <a href="#N133B0">获得一个部署 - URL参数</a></dt><dt>15.13. <a href="#N133CC">获得一个部署 - 响应码</a></dt><dt>15.14. <a href="#N1340C">创建新部署 - 响应码</a></dt><dt>15.15. <a href="#N13436">删除部署 - URL参数</a></dt><dt>15.16. <a href="#N13452">删除部署 - 响应码</a></dt><dt>15.17. <a href="#N13473">列出部署内的资源 - URL参数</a></dt><dt>15.18. <a href="#N1348F">列出部署内的资源 - 响应码</a></dt><dt>15.19. <a href="#N134DD">获取部署资源 - URL参数</a></dt><dt>15.20. <a href="#N13505">获取部署资源 - 响应码</a></dt><dt>15.21. <a href="#N1354E">获取部署资源的内容 - URL参数</a></dt><dt>15.22. <a href="#N13576">获取部署资源的内容 - 响应码</a></dt><dt>15.23. <a href="#N135A2">流程定义列表 - URL参数</a></dt><dt>15.24. <a href="#N1364C">流程定义列表 - 响应码</a></dt><dt>15.25. <a href="#N13687">获得一个流程定义 - URL参数</a></dt><dt>15.26. <a href="#N136A3">获得一个流程定义 - 响应码</a></dt><dt>15.27. <a href="#N136E7">更新流程定义的分类 - 响应码</a></dt><dt>15.28. <a href="#N13716">获得一个流程定义的资源内容 - URL参数</a></dt><dt>15.29. <a href="#N13745">获得流程定义的BPMN模型 - URL参数</a></dt><dt>15.30. <a href="#N13761">获得流程定义的BPMN模型 - 响应码</a></dt><dt>15.31. <a href="#processDefinitionActionBodyParameters">暂停流程定义 - 请求的JSON参数</a></dt><dt>15.32. <a href="#N137C4">暂停流程定义 - 响应码</a></dt><dt>15.33. <a href="#N13800">激活流程定义 - 响应码</a></dt><dt>15.34. <a href="#N1382F">获得流程定义的所有候选启动者 - URL参数</a></dt><dt>15.35. <a href="#N1384B">获得流程定义的所有候选启动者 - 响应码</a></dt><dt>15.36. <a href="#N13875">为流程定义添加一个候选启动者 - URL参数</a></dt><dt>15.37. <a href="#N138A3">为流程定义添加一个候选启动者 - 响应码</a></dt><dt>15.38. <a href="#N138CD">删除流程定义的候选启动者 - URL参数</a></dt><dt>15.39. <a href="#N13900">删除流程定义的候选启动者 - 响应码</a></dt><dt>15.40. <a href="#N1392A">获得流程定义的一个候选启动者 - URL参数</a></dt><dt>15.41. <a href="#N1395D">获得流程定义的一个候选启动者 - 响应码</a></dt><dt>15.42. <a href="#N1398A">获得模型列表 - URL参数</a></dt><dt>15.43. <a href="#N13A4C">获得模型列表 - 响应码</a></dt><dt>15.44. <a href="#N13A76">获得一个模型 - URL参数</a></dt><dt>15.45. <a href="#N13A92">获得一个模型 - 响应码</a></dt><dt>15.46. <a href="#N13AC8">更新模型 - 响应码</a></dt><dt>15.47. <a href="#N13AFB">新建模型 - 响应码</a></dt><dt>15.48. <a href="#N13B20">删除模型 - URL参数</a></dt><dt>15.49. <a href="#N13B3C">删除模型 - 响应码</a></dt><dt>15.50. <a href="#N13B5D">获得模型的可编译源码 - URL参数</a></dt><dt>15.51. <a href="#N13B79">获得模型的可编译源码 - 响应码</a></dt><dt>15.52. <a href="#N13BA3">设置模型的可编辑源码 - URL参数</a></dt><dt>15.53. <a href="#N13BC8">设置模型的可编辑源码 - 响应码</a></dt><dt>15.54. <a href="#N13BF2">获得模型的附加可编辑源码 - URL参数</a></dt><dt>15.55. <a href="#N13C0E">获得模型的附加可编辑源码 - 响应码</a></dt><dt>15.56. <a href="#N13C38">设置模型的附加可编辑源码 - URL参数</a></dt><dt>15.57. <a href="#N13C5D">设置模型的附加可编辑源码 - 响应码</a></dt><dt>15.58. <a href="#N13C8A">获得流程实例 - URL参数</a></dt><dt>15.59. <a href="#N13CA6">获得流程实例 - 响应码</a></dt><dt>15.60. <a href="#N13CD0">删除流程实例 - URL参数</a></dt><dt>15.61. <a href="#N13CEC">删除流程实例 - 响应码</a></dt><dt>15.62. <a href="#N13D0D">激活或挂起流程实例 - URL参数</a></dt><dt>15.63. <a href="#N13D3B">激活或挂起流程实例 - 响应码</a></dt><dt>15.64. <a href="#N13D9C">启动流程实例 - 响应码</a></dt><dt>15.65. <a href="#N13DC7">显示流程实例列表 - URL参数</a></dt><dt>15.66. <a href="#N13E7D">显示流程实例列表 - 响应码</a></dt><dt>15.67. <a href="#N13EBE">查询流程实例 - 响应码</a></dt><dt>15.68. <a href="#N13EE8">获得流程实例的流程图 - URL参数</a></dt><dt>15.69. <a href="#N13F04">获得流程实例的流程图 - 响应码</a></dt><dt>15.70. <a href="#N13F33">获得流程实例的参与者 - URL参数</a></dt><dt>15.71. <a href="#N13F4F">获得流程实例的参与者 - 响应码</a></dt><dt>15.72. <a href="#N13F7C">为流程实例添加一个参与者 - URL参数</a></dt><dt>15.73. <a href="#N13FA7">为流程实例添加一个参与者 - 响应码</a></dt><dt>15.74. <a href="#N13FD9">删除一个流程实例的参与者 - URL参数</a></dt><dt>15.75. <a href="#N14007">删除一个流程实例的参与者 - 响应码</a></dt><dt>15.76. <a href="#N14034">列出流程实例的变量 - URL参数</a></dt><dt>15.77. <a href="#N14050">列出流程实例的变量 - 响应码</a></dt><dt>15.78. <a href="#N14083">获得流程实例的一个变量 - URL参数</a></dt><dt>15.79. <a href="#N140A8">获得流程实例的一个变量 - 响应码</a></dt><dt>15.80. <a href="#N140E9">创建（或更新）流程实例变量 - URL参数</a></dt><dt>15.81. <a href="#N14115">创建（或更新）流程实例变量 - 响应码</a></dt><dt>15.82. <a href="#N14149">更新一个流程实例变量 - URL参数</a></dt><dt>15.83. <a href="#N1417E">更新一个流程实例变量 - 响应码</a></dt><dt>15.84. <a href="#N141B1">创建一个新的二进制流程变量 - URL参数</a></dt><dt>15.85. <a href="#N141EC">创建一个新的二进制流程变量 - 响应码</a></dt><dt>15.86. <a href="#N1421C">更新一个二进制的流程实例变量 - URL参数</a></dt><dt>15.87. <a href="#N14257">更新一个二进制的流程实例变量 - 响应码</a></dt><dt>15.88. <a href="#N14285">获取一个分支 - URL参数</a></dt><dt>15.89. <a href="#N142A1">获取一个分支 - 响应码</a></dt><dt>15.90. <a href="#N142CB">对分支执行操作 - URL参数</a></dt><dt>15.91. <a href="#N1430E">对分支执行操作 - 响应码</a></dt><dt>15.92. <a href="#N14344">获得一个分支的所有活动节点 - URL参数</a></dt><dt>15.93. <a href="#N14360">获得一个分支的所有活动节点 - 响应码</a></dt><dt>15.94. <a href="#N1438B">获取分支列表 - URL参数</a></dt><dt>15.95. <a href="#N14429">获取分支列表 - 响应码</a></dt><dt>15.96. <a href="#N14470">查询分支 - 响应码</a></dt><dt>15.97. <a href="#N1449A">获取分支的变量列表 - URL参数</a></dt><dt>15.98. <a href="#N144C4">获取分支的变量列表 - 响应码</a></dt><dt>15.99. <a href="#N144F1">获得分支的一个变量 - URL参数</a></dt><dt>15.100. <a href="#N14524">获得分支的一个变量 - 响应码</a></dt><dt>15.101. <a href="#N1455F">新建（或更新）分支变量 - URL参数</a></dt><dt>15.102. <a href="#N1458F">新建（或更新）分支变量 - 响应码</a></dt><dt>15.103. <a href="#N145C3">更新分支变量 - URL参数</a></dt><dt>15.104. <a href="#N145F5">更新分支变量 - 响应码</a></dt><dt>15.105. <a href="#N14622">创建一个二进制变量 - URL参数</a></dt><dt>15.106. <a href="#N1465D">创建一个二进制变量 - 响应码</a></dt><dt>15.107. <a href="#N1468D">更新已经已存在的二进制分支变量 - URL参数</a></dt><dt>15.108. <a href="#N146D9">更新已经已存在的二进制分支变量 - 响应码</a></dt><dt>15.109. <a href="#N14707">获取任务 - URL参数</a></dt><dt>15.110. <a href="#N14723">获取任务 - 响应码</a></dt><dt>15.111. <a href="#N1475E">任务列表 - URL参数</a></dt><dt>15.112. <a href="#N14904">任务列表 - 响应码</a></dt><dt>15.113. <a href="#N14947">查询任务 - 响应码</a></dt><dt>15.114. <a href="#N1497D">更新任务 - 响应码</a></dt><dt>15.115. <a href="#N149DD">操作任务 - 响应码</a></dt><dt>15.116. <a href="#N14A14">&gt;删除任务 - URL参数</a></dt><dt>15.117. <a href="#N14A45">&gt;删除任务 - 响应码</a></dt><dt>15.118. <a href="#N14A6B">获得任务的变量 - URL参数</a></dt><dt>15.119. <a href="#N14A96">获得任务的变量 - 响应码</a></dt><dt>15.120. <a href="#N14AC4">获取任务的一个变量 - URL参数</a></dt><dt>15.121. <a href="#N14AF8">获取任务的一个变量 - 响应码</a></dt><dt>15.122. <a href="#N14B26">获取变量的二进制数据 - URL参数</a></dt><dt>15.123. <a href="#N14B63">获取变量的二进制数据 - 响应码</a></dt><dt>15.124. <a href="#N14B96">创建任务变量 - URL参数</a></dt><dt>15.125. <a href="#N14BDF">创建任务变量 - 响应码</a></dt><dt>15.126. <a href="#N14C0D">创建二进制任务变量 - URL参数</a></dt><dt>15.127. <a href="#N14C50">创建二进制任务变量 - 响应码</a></dt><dt>15.128. <a href="#N14C83">更新任务的一个已有变量 - URL参数</a></dt><dt>15.129. <a href="#N14CD5">更新任务的一个已有变量 - 响应码</a></dt><dt>15.130. <a href="#N14CFE">更新一个二进制任务变量 - URL参数</a></dt><dt>15.131. <a href="#N14D4A">更新一个二进制任务变量 - 响应码</a></dt><dt>15.132. <a href="#N14D78">删除任务变量 - URL参数</a></dt><dt>15.133. <a href="#N14DAF">删除任务变量 - 响应码</a></dt><dt>15.134. <a href="#N14DD0">删除任务的所有局部变量 - URL参数</a></dt><dt>15.135. <a href="#N14DEC">删除任务的所有局部变量 - 响应码</a></dt><dt>15.136. <a href="#N14E0D">获得任务的所有IdentityLink - URL参数</a></dt><dt>15.137. <a href="#N14E29">获得任务的所有IdentityLink - 响应码</a></dt><dt>15.138. <a href="#N14E5D">获得一个任务的所有组或用户的IdentityLink - URL参数</a></dt><dt>15.139. <a href="#N14E99">获得一个任务的所有组或用户的IdentityLink - 响应码</a></dt><dt>15.140. <a href="#N14EC3">为任务创建一个IdentityLink - URL参数</a></dt><dt>15.141. <a href="#N14EF1">为任务创建一个IdentityLink - 响应码</a></dt><dt>15.142. <a href="#N14F1B">删除任务的一个IdentityLink - URL参数</a></dt><dt>15.143. <a href="#N14F57">删除任务的一个IdentityLink - 响应码</a></dt><dt>15.144. <a href="#N14F78">为任务创建评论 - URL参数</a></dt><dt>15.145. <a href="#N14FAC">为任务创建评论 - 响应码</a></dt><dt>15.146. <a href="#N14FD2">获得任务的所有评论 - URL参数</a></dt><dt>15.147. <a href="#N14FF5">获得任务的所有评论 - 响应码</a></dt><dt>15.148. <a href="#N15016">获得任务的一个评论 - URL参数</a></dt><dt>15.149. <a href="#N15042">获得任务的一个评论 - 响应码</a></dt><dt>15.150. <a href="#N15063">删除任务的一条评论 - URL参数</a></dt><dt>15.151. <a href="#N15086">删除任务的一条评论 - 响应码</a></dt><dt>15.152. <a href="#N150A6">获得任务的所有事件 - URL参数</a></dt><dt>15.153. <a href="#N150C9">获得任务的所有事件 - 响应码</a></dt><dt>15.154. <a href="#N150EA">获得任务的一个事件 - URL参数</a></dt><dt>15.155. <a href="#N15116">获得任务的一个事件 - 响应码</a></dt><dt>15.156. <a href="#N15137">为任务创建一个附件，包含外部资源的链接 - URL参数</a></dt><dt>15.157. <a href="#N15163">为任务创建一个附件，包含外部资源的链接 - 响应码</a></dt><dt>15.158. <a href="#N15189">为任务创建一个附件，包含附件文件 - URL参数</a></dt><dt>15.159. <a href="#N151C9">为任务创建一个附件，包含附件文件 - 响应码</a></dt><dt>15.160. <a href="#N151EF">获得任务的所有附件 - URL参数</a></dt><dt>15.161. <a href="#N15212">获得任务的所有附件 - 响应码</a></dt><dt>15.162. <a href="#N15233">获得任务的一个附件 - URL参数</a></dt><dt>15.163. <a href="#N15275">获得任务的一个附件 - 响应码</a></dt><dt>15.164. <a href="#N15296">获取附件的内容 - URL参数</a></dt><dt>15.165. <a href="#N152BE">获取附件的内容 - 响应码</a></dt><dt>15.166. <a href="#N152E8">删除任务的一个附件 - URL参数</a></dt><dt>15.167. <a href="#N1530B">删除任务的一个附件 - 响应码</a></dt><dt>15.168. <a href="#N1532E">获得历史流程实例 - 响应码</a></dt><dt>15.169. <a href="#N15359">历史流程实例列表 - URL参数</a></dt><dt>15.170. <a href="#N15418">历史流程实例列表 - 响应码</a></dt><dt>15.171. <a href="#N15458">查询历史流程实例 - 响应码</a></dt><dt>15.172. <a href="#N15482">响应码</a></dt><dt>15.173. <a href="#N154A3">响应码</a></dt><dt>15.174. <a href="#N154CD">获取历史流程实例变量的二进制数据 - 响应码</a></dt><dt>15.175. <a href="#N15500">为历史流程实例创建一条新评论 - URL参数</a></dt><dt>15.176. <a href="#N15534">为历史流程实例创建一条新评论 - 响应码</a></dt><dt>15.177. <a href="#N1555A">获得流程实例的所有评论 - URL参数</a></dt><dt>15.178. <a href="#N1557D">获得流程实例的所有评论 - 响应码</a></dt><dt>15.179. <a href="#N1559E">获得历史流程的一条评论 - URL参数</a></dt><dt>15.180. <a href="#N155CA">获得历史流程的一条评论 - 响应码</a></dt><dt>15.181. <a href="#N155EB">删除历史流程实例的一条评论 - URL参数</a></dt><dt>15.182. <a href="#N1560E">删除历史流程实例的一条评论 - 响应码</a></dt><dt>15.183. <a href="#N1562E">获得单独历史任务实例 - 响应码</a></dt><dt>15.184. <a href="#N15659">获取历史任务实例 - URL参数</a></dt><dt>15.185. <a href="#N157FC">获取历史任务实例 - 响应码</a></dt><dt>15.186. <a href="#N1583F">查询历史任务实例 - 响应码</a></dt><dt>15.187. <a href="#N15869">响应码</a></dt><dt>15.188. <a href="#N1588A">响应码</a></dt><dt>15.189. <a href="#N158B4">获取历史任务实例变量的二进制值 - 响应码</a></dt><dt>15.190. <a href="#N158E8">获取历史活动实例 - URL参数</a></dt><dt>15.191. <a href="#N1597A">获取历史活动实例 - 响应码</a></dt><dt>15.192. <a href="#N159B3">查询历史活动实例 - 响应码</a></dt><dt>15.193. <a href="#N159DE">列出历史变量实例 - URL参数</a></dt><dt>15.194. <a href="#N15A28">列出历史变量实例 - 响应码</a></dt><dt>15.195. <a href="#N15A68">查询历史变量实例 - 响应码</a></dt><dt>15.196. <a href="#N15A92">获取历史任务实例变量的二进制值 - 响应码</a></dt><dt>15.197. <a href="#N15AC6">获取历史细节 - URL参数</a></dt><dt>15.198. <a href="#N15B22">获取历史细节 - 响应码</a></dt><dt>15.199. <a href="#N15B5B">查询历史细节 - 响应码</a></dt><dt>15.200. <a href="#N15B85">获取历史细节变量的二进制数据 - 响应码</a></dt><dt>15.201. <a href="#N15BBB">获取表单数据 - URL参数</a></dt><dt>15.202. <a href="#N15BE0">获取表单数据 - 响应码</a></dt><dt>15.203. <a href="#N15C1C">提交任务表单数据 - 响应码</a></dt><dt>15.204. <a href="#N15C49">表列表 - 响应码</a></dt><dt>15.205. <a href="#N15C6E">获得一张表 - URL参数</a></dt><dt>15.206. <a href="#N15C91">获得一张表 - 响应码</a></dt><dt>15.207. <a href="#N15CB2">获得表的列信息 - URL参数</a></dt><dt>15.208. <a href="#N15CD5">获得表的列信息 - 响应码</a></dt><dt>15.209. <a href="#N15CF6">获得表的行数据 - URL参数</a></dt><dt>15.210. <a href="#N15D12">获得表的行数据 - URL参数</a></dt><dt>15.211. <a href="#N15D53">获得表的行数据 - 响应码</a></dt><dt>15.212. <a href="#N15D80">获得引擎属性 - 响应码</a></dt><dt>15.213. <a href="#N15DA5">获得引擎信息 - 响应码</a></dt><dt>15.214. <a href="#N15DCD">接收信号事件 - JSON体参数</a></dt><dt>15.215. <a href="#N15E13">接收信号事件 - 响应码</a></dt><dt>15.216. <a href="#N15E3C">获取一个作业 - URL参数</a></dt><dt>15.217. <a href="#N15E5F">获取一个作业 - 响应码</a></dt><dt>15.218. <a href="#N15E80">删除作业 - URL参数</a></dt><dt>15.219. <a href="#N15E9C">删除作业 - 响应码</a></dt><dt>15.220. <a href="#N15EC4">执行作业 - 请求的JSON参数</a></dt><dt>15.221. <a href="#N15EDF">执行作业 - 响应码</a></dt><dt>15.222. <a href="#N15F05">获得作业的异常堆栈 - URL参数</a></dt><dt>15.223. <a href="#N15F1D">获得作业的异常堆栈 - 响应码</a></dt><dt>15.224. <a href="#N15F41">获得作业列表 - URL参数</a></dt><dt>15.225. <a href="#N16009">获得作业列表 - 响应码</a></dt><dt>15.226. <a href="#N16033">获得一个用户 - URL参数</a></dt><dt>15.227. <a href="#N16056">获得一个用户 - 响应码</a></dt><dt>15.228. <a href="#N16077">获取用户列表 - URL参数</a></dt><dt>15.229. <a href="#N160F4">获取用户列表 - 响应码</a></dt><dt>15.230. <a href="#N1611C">更新用户 - 响应码</a></dt><dt>15.231. <a href="#N16154">创建用户 - 响应码</a></dt><dt>15.232. <a href="#N1617E">删除用户 - URL参数</a></dt><dt>15.233. <a href="#N1619A">删除用户 - 响应码</a></dt><dt>15.234. <a href="#N161BB">获取用户图片 - URL参数</a></dt><dt>15.235. <a href="#N161DB">获取用户图片 - 响应码</a></dt><dt>15.236. <a href="#N161FC">更新用户图片 - URL参数</a></dt><dt>15.237. <a href="#N1622B">更新用户图片 - 响应码</a></dt><dt>15.238. <a href="#N1624C">列出用户列表 - URL参数</a></dt><dt>15.239. <a href="#N1626F">列出用户列表 - 响应码</a></dt><dt>15.240. <a href="#N16290">获取用户信息 - URL参数</a></dt><dt>15.241. <a href="#N162BC">获取用户信息 - 响应码</a></dt><dt>15.242. <a href="#N162DD">更新用户的信息 - URL参数</a></dt><dt>15.243. <a href="#N16312">更新用户的信息 - 响应码</a></dt><dt>15.244. <a href="#N16338">创建用户信息条目 - URL参数</a></dt><dt>15.245. <a href="#N16364">创建用户信息条目 - 响应码</a></dt><dt>15.246. <a href="#N16392">删除用户的信息 - URL参数</a></dt><dt>15.247. <a href="#N163B7">删除用户的信息 - 响应码</a></dt><dt>15.248. <a href="#N163DB">获得群组 - URL参数</a></dt><dt>15.249. <a href="#N163FE">获得群组 - 响应码</a></dt><dt>15.250. <a href="#N1641F">获取群组列表 - URL参数</a></dt><dt>15.251. <a href="#N1647E">获取群组列表 - 响应码</a></dt><dt>15.252. <a href="#N164A3">更新群组 - 响应码</a></dt><dt>15.253. <a href="#N164DB">创建群组 - 响应码</a></dt><dt>15.254. <a href="#N16505">删除群组 - URL参数</a></dt><dt>15.255. <a href="#N16521">删除群组 - 响应码</a></dt><dt>15.256. <a href="#N1654D">为群组添加一个成员 - URL参数</a></dt><dt>15.257. <a href="#N16572">为群组添加一个成员 - 响应码</a></dt><dt>15.258. <a href="#N165A6">删除群组的成员 - URL参数</a></dt><dt>15.259. <a href="#N165CB">删除群组的成员 - 响应码</a></dt><dt>17.1. <a href="#N16E8E">LDAP配置属性</a></dt><dt>17.2. <a href="#N16F44">高级属性</a></dt></dl></div><div class="chapter" title="Chapter&nbsp;1.&nbsp;简介"><div class="titlepage"><div><div><h2 class="title"><a name="N10007"></a>Chapter&nbsp;1.&nbsp;简介</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#license">协议</a></span></dt><dt><span class="section"><a href="#download">下载</a></span></dt><dt><span class="section"><a href="#sources">源码</a></span></dt><dt><span class="section"><a href="#required.software">必要的软件</a></span></dt><dd><dl><dt><span class="section"><a href="#N1002A">JDK 6+</a></span></dt><dt><span class="section"><a href="#N10036">Eclipse Indigo 和 Juno</a></span></dt></dl></dd><dt><span class="section"><a href="#reporting.problems">报告问题</a></span></dt><dt><span class="section"><a href="#experimental">试验性功能</a></span></dt><dt><span class="section"><a href="#internal">内部实现类</a></span></dt></dl></div><div class="section" title="协议"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="license"></a>协议</h2></div></div></div><p>Activiti是基于<a class="ulink" href="http://www.mossle.com/license.txt" target="_top">Apache V2协议</a>发布的。</p></div><div class="section" title="下载"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="download"></a>下载</h2></div></div></div><p><a class="ulink" href="http://activiti.org/download.html" target="_top">http://activiti.org/download.html</a></p></div><div class="section" title="源码"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="sources"></a>源码</h2></div></div></div><p>发布包里包含大部分的已经打好jar包的源码。
  如果想找到并构建完整的源码库，请参考
  <a class="ulink" href="http://docs.codehaus.org/display/ACT/Developers+Guide#DevelopersGuide-Buildingthedistribution" target="_top">wiki “构建发布包”</a>。
  </p></div><div class="section" title="必要的软件"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="required.software"></a>必要的软件</h2></div></div></div><div class="section" title="JDK 6+"><div class="titlepage"><div><div><h3 class="title"><a name="N1002A"></a>JDK 6+</h3></div></div></div><p>Activiti需要运行在JDK 6或以上版本上。
    进入 <a class="ulink" href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_top">Oracle Java SE 下载页面</a>
    点击 "下载 JDK"按钮。页面上也提供了安装的方法。
    为了验证是否安装成功，可以在命令行中执行 <code class="literal">java -version</code>。
	它将会打印出安装的JDK的版本。
    </p></div><div class="section" title="Eclipse Indigo 和 Juno"><div class="titlepage"><div><div><h3 class="title"><a name="N10036"></a>Eclipse Indigo 和 Juno</h3></div></div></div><p>
	（译者注：Eclipse 3.7 版本代号 Indigo 靛青，
    Eclipse 4.2 版本代号 Juno 朱诺）。
	在<a class="ulink" href="http://www.eclipse.org/downloads/" target="_top">Eclipse下载页面</a>下载你选择的eclipse发布包。
	解压下载文件，你就可以通过<code class="literal">eclipse</code>目录下的eclipse文件启动它。
	此外，在该用户指南后面，专门有一章介绍<a class="link" href="#eclipseDesignerInstallation" title="Installation">安装eclipse设计器插件</a>。
    </p></div></div><div class="section" title="报告问题"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="reporting.problems"></a>报告问题</h2></div></div></div><p>任何一个自觉的开发者都应该看看
  <a class="ulink" href="http://www.catb.org/%7Eesr/faqs/smart-questions.html" target="_top">如何聪明的提出问题</a>。
  </p><p>看完之后，你可以在<a class="ulink" href="http://forums.activiti.org/en/viewforum.php?f=3" target="_top">用户论坛</a>上进行提问和评论，
  或者在<a class="ulink" href="http://jira.codehaus.org/browse/ACT" target="_top">JIRA问题跟踪系统</a>中创建问题。
    </p><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>
	    虽然Activiti已经托管在GitHub上了，但是问题不应该提交到GitHub的问题跟踪系统上。如果你想报告一个问题，
		不要创建一个GitHub的问题，而是应该使用<a class="ulink" href="http://jira.codehaus.org/browse/ACT" target="_top">JIRA</a>。
      </p></div><p>
  </p></div><div class="section" title="试验性功能"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="experimental"></a>试验性功能</h2></div></div></div><p>那些标记着 <span class="bold"><strong>[EXPERIMENTAL]</strong></span> 的章节表示功能尚未稳定。

  </p><p>所有包名中包含 <code class="literal">.impl.</code> 的类都是内部实现类，都是不保证稳定的。
  不过，如果用户指南把哪些类列为配置项，那么它们可以认为是稳定不变的。

  </p></div><div class="section" title="内部实现类"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="internal"></a>内部实现类</h2></div></div></div><p>在jar包中，所有包名中包含<code class="literal">.impl.</code>（比如：<code class="literal">org.activiti.engine.impl.pvm.delegate</code>）的类都是实现类，
  它们应该被视为流程引擎内部的类。对于这些类和接口都不能够保证其稳定性。
  </p></div></div><div class="chapter" title="Chapter&nbsp;2.&nbsp;开始学习"><div class="titlepage"><div><div><h2 class="title"><a name="N1007D"></a>Chapter&nbsp;2.&nbsp;开始学习</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#demo.setup.one.minute.version">一分钟入门</a></span></dt><dt><span class="section"><a href="#activiti.setup">安装Activiti</a></span></dt><dt><span class="section"><a href="#activiti.setup.database">安装Activiti数据库</a></span></dt><dt><span class="section"><a href="#getting.started.including.libs">引入Activiti jar和依赖</a></span></dt><dt><span class="section"><a href="#getting.started.next.steps">下一步</a></span></dt></dl></div><div class="section" title="一分钟入门"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="demo.setup.one.minute.version"></a>一分钟入门</h2></div></div></div><p>
	  从<a class="ulink" href="http://www.activiti.org/" target="_top">Activiti网站</a>下载Activiti Explorer的WAR文件后，
	  可以按照下列步骤以默认配置运行样例。
	  你需要一个<a class="ulink" href="http://java.sun.com/javase/downloads/index.jsp" target="_top">Java 运行环境</a>和
	  <a class="ulink" href="http://tomcat.apache.org/download-70.cgi" target="_top">Apache Tomcat</a>
	  （其实，任何提供了servlet功能的web容器都可以正常运行。但是我们主要是使用tomcat进行的测试）。
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>把下载的activiti-explorer.war复制到Tomcat的webapps目录下。</p></li><li class="listitem"><p>执行Tomcat的bin目录下的startup.bat或startup.sh启动服务器。</p></li><li class="listitem"><p>
		    Tomcat启动后，打开浏览器访问<a class="ulink" href="http://localhost:8080/activiti-explorer" target="_top">http://localhost:8080/activiti-explorer</a>。
			使用kermit/kermit登录。
          </p></li></ul></div><p>
	  这样就好了！Activiti Explorer默认使用H2内存数据库，如果你想使用其他数据库
	  请参考<a class="link" href="#activiti.setup" title="安装Activiti">这里</a>。
    </p></div><div class="section" title="安装Activiti"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="activiti.setup"></a>安装Activiti</h2></div></div></div><p>要安装Activiti你需要一个
    <a class="ulink" href="http://java.sun.com/javase/downloads/index.jsp" target="_top">Java运行环境</a> 和
    <a class="ulink" href="http://tomcat.apache.org/download-70.cgi" target="_top">Apache Tomcat</a>。
    还要确认设置好<span class="emphasis"><em>JAVA_HOME</em></span>系统变量。
	不同的操作系统下的设置方法是不同的。
    </p><p>要运行Activiti Explorer和REST web应用，你要从Activiti的下载页下载WAR文件，
	复制到Tomcat安装目录下<code class="literal">webapps</code>目录下。
	默认Explorer应用使用的内存数据库已经包含了示例流程，用户和群组信息。
    </p><p>下面是示例中可以使用的用户：</p><div class="table"><a name="N100BD"></a><p class="title"><b>Table&nbsp;2.1.&nbsp;示例用户</b></p><div class="table-contents"><table summary="示例用户" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>账号</th><th>密码</th><th>角色</th></tr></thead><tbody><tr><td>kermit</td><td>kermit</td><td>admin</td></tr><tr><td>gonzo</td><td>gonzo</td><td>manager</td></tr><tr><td>fozzie</td><td>fozzie</td><td>user</td></tr></tbody></table></div></div><br class="table-break"><p>现在，你可以访问下列web应用：</p><div class="table"><a name="N100E2"></a><p class="title"><b>Table&nbsp;2.2.&nbsp;webapp工具</b></p><div class="table-contents"><table summary="webapp工具" border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th>Webapp名称</th><th>URL</th><th>描述</th><td class="auto-generated">&nbsp;</td></tr></thead><tbody><tr><td>Activiti Explorer</td><td><a class="ulink" href="http://localhost:8080/activiti-explorer" target="_top">http://localhost:8080/activiti-explorer</a> </td><td>流程引擎的用户控制台。使用它来启动新流程，分配任务，
			查看并认领任务，等等。这个工具也可以用来管理Activiti引擎。
            </td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><br class="table-break"><p>
	  注意Activiti Explorer演示实例只是一种简单快速展示Activiti的功能的方式。
	  但是并不是说只能使用这种方式使用Activiti。
	  Activiti只是一个jar，
	  可以内嵌到任何Java环境中：swing或者Tomcat, JBoss, WebSphere等等。
	  也可以把Activiti作为一个典型的单独运行的BPM服务器运行。
	  只要java可以做的，Activiti也可以。
    </p></div><div class="section" title="安装Activiti数据库"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="activiti.setup.database"></a>安装Activiti数据库</h2></div></div></div><p>就像在一分钟入门里说过的，Activiti Explorer默认使用H2内存数据库。
	要让Activiti使用独立运行的H2数据库或者其他数据库，
	可以修改Activiti Explorer web应用WEB-INF/classes目录下的db.properties。
    </p><p>另外，注意Activiti Explorer自动生成了演示用的默认用户和群组，流程定义，数据模型。
	要想禁用这个功能，要修改WEB-INF目录下的activiti-standalone-context.xml。
	可以使用下面的<code class="literal">demoDataGenerator</code> bean定义代码完全禁用安装默认数据。从代码中也可以看出，我们可以单独启用或禁用每一项功能。
    </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"demoDataGenerator"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.explorer.demo.DemoDataGenerator"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"processEngine"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"processEngine"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"createDemoUsersAndGroups"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"createDemoProcessDefinitions"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"createDemoModels"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span></pre></div><div class="section" title="引入Activiti jar和依赖"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="getting.started.including.libs"></a>引入Activiti jar和依赖</h2></div></div></div><p>
	    为了引用Activiti jar和依赖，我们推荐使用
		<a class="ulink" href="http://maven.apache.org/" target="_top">Maven</a>（或<a class="ulink" href="http://ant.apache.org/ivy/" target="_top">Ivy</a>），
		它简化了我们之间的依赖管理。
		参考<a class="ulink" href="http://www.activiti.org/community.html#maven.repository" target="_top">http://www.activiti.org/community.html#maven.repository</a>
		来为你的项目引入必须的jar包。
    </p><p>
	    如果不想用Maven，你也可以自己把这些jar引入到你的项目中。
		Activiti下载zip包包含了一个<code class="literal">libs</code>目录，
		包含了所有Activiti的jar包（和源代码jar包）。依赖没有用这种方式发布。
		Activiti引擎必须的依赖如下所示（通过<code class="literal">mvn dependency:tree</code>生成）：
       </p><pre class="prettyprint"><span class="pln">org</span><span class="pun">.</span><span class="pln">activiti</span><span class="pun">:</span><span class="pln">activiti</span><span class="pun">-</span><span class="pln">engine</span><span class="pun">:</span><span class="pln">jar</span><span class="pun">:</span><span class="lit">5.12</span><span class="pun">.</span><span class="lit">1</span><span class="pln"><br></span><span class="pun">+-</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">apache</span><span class="pun">.</span><span class="pln">commons</span><span class="pun">:</span><span class="pln">commons</span><span class="pun">-</span><span class="pln">email</span><span class="pun">:</span><span class="pln">jar</span><span class="pun">:</span><span class="lit">1.2</span><span class="pun">:</span><span class="pln">compile<br></span><span class="pun">|</span><span class="pln"> &nbsp;</span><span class="pun">+-</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">mail</span><span class="pun">:</span><span class="pln">mail</span><span class="pun">:</span><span class="pln">jar</span><span class="pun">:</span><span class="lit">1.4</span><span class="pun">.</span><span class="lit">1</span><span class="pun">:</span><span class="pln">compile<br></span><span class="pun">|</span><span class="pln"> &nbsp;</span><span class="pun">\-</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">activation</span><span class="pun">:</span><span class="pln">activation</span><span class="pun">:</span><span class="pln">jar</span><span class="pun">:</span><span class="lit">1.1</span><span class="pun">:</span><span class="pln">compile<br></span><span class="pun">+-</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">apache</span><span class="pun">.</span><span class="pln">commons</span><span class="pun">:</span><span class="pln">commons</span><span class="pun">-</span><span class="pln">lang3</span><span class="pun">:</span><span class="pln">jar</span><span class="pun">:</span><span class="lit">3.1</span><span class="pun">:</span><span class="pln">compile<br></span><span class="pun">+-</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">mybatis</span><span class="pun">:</span><span class="pln">mybatis</span><span class="pun">:</span><span class="pln">jar</span><span class="pun">:</span><span class="lit">3.1</span><span class="pun">.</span><span class="lit">1</span><span class="pun">:</span><span class="pln">compile<br></span><span class="pun">+-</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">springframework</span><span class="pun">:</span><span class="pln">spring</span><span class="pun">-</span><span class="pln">beans</span><span class="pun">:</span><span class="pln">jar</span><span class="pun">:</span><span class="lit">3.1</span><span class="pun">.</span><span class="lit">2.RELEASE</span><span class="pun">:</span><span class="pln">compile<br></span><span class="pun">|</span><span class="pln"> &nbsp;</span><span class="pun">\-</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">springframework</span><span class="pun">:</span><span class="pln">spring</span><span class="pun">-</span><span class="pln">core</span><span class="pun">:</span><span class="pln">jar</span><span class="pun">:</span><span class="lit">3.1</span><span class="pun">.</span><span class="lit">2.RELEASE</span><span class="pun">:</span><span class="pln">compile<br></span><span class="pun">|</span><span class="pln"> &nbsp; &nbsp; </span><span class="pun">+-</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">springframework</span><span class="pun">:</span><span class="pln">spring</span><span class="pun">-</span><span class="kwd">asm</span><span class="pun">:</span><span class="pln">jar</span><span class="pun">:</span><span class="lit">3.1</span><span class="pun">.</span><span class="lit">2.RELEASE</span><span class="pun">:</span><span class="pln">compile<br></span><span class="pun">|</span><span class="pln"> &nbsp; &nbsp; </span><span class="pun">\-</span><span class="pln"> commons</span><span class="pun">-</span><span class="pln">logging</span><span class="pun">:</span><span class="pln">commons</span><span class="pun">-</span><span class="pln">logging</span><span class="pun">:</span><span class="pln">jar</span><span class="pun">:</span><span class="lit">1.1</span><span class="pun">.</span><span class="lit">1</span><span class="pun">:</span><span class="pln">compile<br></span><span class="pun">\-</span><span class="pln"> joda</span><span class="pun">-</span><span class="pln">time</span><span class="pun">:</span><span class="pln">joda</span><span class="pun">-</span><span class="pln">time</span><span class="pun">:</span><span class="pln">jar</span><span class="pun">:</span><span class="lit">2.1</span><span class="pun">:</span><span class="pln">compile<br>&nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
       注意：只有使用了<a class="link" href="#bpmnEmailTask" title="邮件任务">mail service task</a>才必须引入mail依赖jar。
    </p><p>
	    所有依赖可以在<a class="ulink" href="https://github.com/Activiti/Activiti" target="_top">Activiti 源码</a>的模块中，
		通过<code class="literal">mvn dependency:copy-dependencies</code>下载。
    </p></div><div class="section" title="下一步"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="getting.started.next.steps"></a>下一步</h2></div></div></div><p>
	    使用<a class="link" href="#activitiExplorer" title="Chapter&nbsp;13.&nbsp;Activiti Explorer">Activiti Explorer</a> web应用
		是一个熟悉Activiti概念和功能的好办法。但是，
		Activiti的主要目标是为你自己的应用添加强大的BPM和工作流功能。
		下面的章节会帮助你熟悉
		如何在你的环境中使用Activiti进行编程：
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                    <a class="link" href="#configuration" title="创建ProcessEngine">配置章节</a> 会教你如何设置Activiti，
					如何获得<code class="literal">ProcessEngine</code>类的实例，
					它是所有Activiti引擎功能的中心入口。
                </p></li><li class="listitem"><p>
					<a class="link" href="#chapterApi" title="Chapter&nbsp;4.&nbsp;Activiti API">API章节</a>会带领你了解建立Activiti API的服务。
					这些服务用简便的方法提供了Activiti引擎的强大功能，
					它们可以使用在任何Java环境下。

                </p></li><li class="listitem"><p>
					对深入了解BPMN 2.0，Activiti引擎中流程的编写结构感兴趣吗？
					请继续浏览<a class="link" href="#bpmn20" title="Chapter&nbsp;7.&nbsp;BPMN 2.0介绍">BPMN 2.0 章节</a>。
                </p></li></ul></div><p>
    </p></div></div><div class="chapter" title="Chapter&nbsp;3.&nbsp;配置"><div class="titlepage"><div><div><h2 class="title"><a name="N10156"></a>Chapter&nbsp;3.&nbsp;配置</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#configuration">创建ProcessEngine</a></span></dt><dt><span class="section"><a href="#configurationRoot">ProcessEngineConfiguration bean</a></span></dt><dt><span class="section"><a href="#databaseConfiguration">数据库配置</a></span></dt><dt><span class="section"><a href="#jndiDatasourceConfig">JNDI数据库配置</a></span></dt><dd><dl><dt><span class="section"><a href="#jndi_usage">使用</a></span></dt><dt><span class="section"><a href="#jndi_configuration">配置</a></span></dt></dl></dd><dt><span class="section"><a href="#supporteddatabases">支持的数据库</a></span></dt><dt><span class="section"><a href="#creatingDatabaseTable">创建数据库表</a></span></dt><dt><span class="section"><a href="#database.tables.explained">理解数据库表的命名</a></span></dt><dt><span class="section"><a href="#databaseUpgrade">数据库升级</a></span></dt><dt><span class="section"><a href="#jobExecutorConfiguration">启用Job执行器</a></span></dt><dt><span class="section"><a href="#mailServerConfiguration">配置邮件服务器</a></span></dt><dt><span class="section"><a href="#historyConfiguration">配置历史</a></span></dt><dt><span class="section"><a href="#exposingConfigurationBeans">为表达式和脚本暴露配置</a></span></dt><dt><span class="section"><a href="#processDefinitionCacheConfiguration">配置部署缓存</a></span></dt><dt><span class="section"><a href="#loggingConfiguration">日志</a></span></dt><dt><span class="section"><a href="#MDC">映射诊断上下文</a></span></dt><dt><span class="section"><a href="#eventDispatcher">事件处理</a></span></dt><dd><dl><dt><span class="section"><a href="#eventDispatcherListener">事件监听器实现</a></span></dt><dt><span class="section"><a href="#eventDispatcherConfiguration">配置与安装</a></span></dt><dt><span class="section"><a href="#eventDispatcherConfigurationRuntime">在运行阶段添加监听器</a></span></dt><dt><span class="section"><a href="#eventDispatcherConfigurationProcessDefinition">为流程定义添加监听器</a></span></dt><dt><span class="section"><a href="#eventDispatcherCustomEvents">通过API分发事件</a></span></dt><dt><span class="section"><a href="#eventDispatcherEventTypes">支持的事件类型</a></span></dt><dt><span class="section"><a href="#eventDispatcherRemarks">附加信息</a></span></dt></dl></dd></dl></div><div class="section" title="创建ProcessEngine"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="configuration"></a>创建ProcessEngine</h2></div></div></div><p>
    Activiti流程引擎的配置文件是名为<code class="literal">activiti.cfg.xml</code>的XML文件。
    注意这与使用<a class="link" href="#springintegration" title="Chapter&nbsp;5.&nbsp;Spring集成">Spring方式创建流程引擎</a>
    是<span class="bold"><strong>不</strong></span>一样的。
    </p><p>
    获得<code class="literal">ProcessEngine</code>最简单的办法是
    使用<code class="literal">org.activiti.engine.ProcessEngines</code>类：
    </p><pre class="prettyprint"><span class="typ">ProcessEngine</span><span class="pln"> processEngine </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ProcessEngines</span><span class="pun">.</span><span class="pln">getDefaultProcessEngine</span><span class="pun">()</span></pre><p>
    它会在classpath下搜索<code class="literal">activiti.cfg.xml</code>，
    并基于这个文件中的配置构建引擎。
    下面代码展示了实例配置。
    后面的章节会给出配置参数的详细介绍。
    </p><pre class="prettyprint"><span class="tag">&lt;beans</span><span class="pln"> </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://www.springframework.org/schema/beans"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">xmlns:xsi</span><span class="pun">=</span><span class="atv">"http://www.w3.org/2001/XMLSchema-instance"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">xsi:schemaLocation</span><span class="pun">=</span><span class="atv">"http://www.springframework.org/schema/beans &nbsp; http://www.springframework.org/schema/beans/spring-beans.xsd"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jdbcUrl"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"jdbc:h2:mem:activiti;DB_CLOSE_DELAY=1000"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jdbcDriver"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"org.h2.Driver"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jdbcUsername"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"sa"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jdbcPassword"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">""</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"databaseSchemaUpdate"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jobExecutorActivate"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"mailServerHost"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"mail.my-corp.com"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"mailServerPort"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"5025"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/beans&gt;</span></pre><p>
    </p><p>
      注意配置XML文件其实是一个spring的配置文件。
      <span class="bold"><strong>但不是说Activiti只能用在Spring环境中！</strong></span>
      我们只是利用了Spring的解析和依赖注入功能
      来构建引擎。
    </p><p>
      配置文件中使用的ProcessEngineConfiguration可以通过编程方式创建。
      可以配置不同的bean id（比如，第三行）。
      </p><pre class="prettyprint"><span class="typ">ProcessEngineConfiguration</span><span class="pun">.</span><span class="pln">createProcessEngineConfigurationFromResourceDefault</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">ProcessEngineConfiguration</span><span class="pun">.</span><span class="pln">createProcessEngineConfigurationFromResource</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> resource</span><span class="pun">);</span><span class="pln"><br></span><span class="typ">ProcessEngineConfiguration</span><span class="pun">.</span><span class="pln">createProcessEngineConfigurationFromResource</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> resource</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> beanName</span><span class="pun">);</span><span class="pln"><br></span><span class="typ">ProcessEngineConfiguration</span><span class="pun">.</span><span class="pln">createProcessEngineConfigurationFromInputStream</span><span class="pun">(</span><span class="typ">InputStream</span><span class="pln"> inputStream</span><span class="pun">);</span><span class="pln"><br></span><span class="typ">ProcessEngineConfiguration</span><span class="pun">.</span><span class="pln">createProcessEngineConfigurationFromInputStream</span><span class="pun">(</span><span class="typ">InputStream</span><span class="pln"> inputStream</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> beanName</span><span class="pun">);</span></pre><p>
   也可以不使用配置文件，基于默认创建配置
   （参考<a class="link" href="#configurationClasses">各种支持类</a>）
   </p><pre class="prettyprint"><span class="typ">ProcessEngineConfiguration</span><span class="pun">.</span><span class="pln">createStandaloneProcessEngineConfiguration</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">ProcessEngineConfiguration</span><span class="pun">.</span><span class="pln">createStandaloneInMemProcessEngineConfiguration</span><span class="pun">();</span></pre><p>
   所有这些<code class="literal">ProcessEngineConfiguration.createXXX()</code>方法都返回
   <code class="literal">ProcessEngineConfiguration</code>，后续可以调整成所需的对象。
   在调用<code class="literal">buildProcessEngine()</code>后，
   就会创建一个<code class="literal">ProcessEngine</code>：
   </p><pre class="prettyprint"><span class="typ">ProcessEngine</span><span class="pln"> processEngine </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ProcessEngineConfiguration</span><span class="pun">.</span><span class="pln">createStandaloneInMemProcessEngineConfiguration</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">setDatabaseSchemaUpdate</span><span class="pun">(</span><span class="typ">ProcessEngineConfiguration</span><span class="pun">.</span><span class="pln">DB_SCHEMA_UPDATE_FALSE</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">setJdbcUrl</span><span class="pun">(</span><span class="str">"jdbc:h2:mem:my-own-db;DB_CLOSE_DELAY=1000"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">setJobExecutorActivate</span><span class="pun">(</span><span class="kwd">true</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">buildProcessEngine</span><span class="pun">();</span></pre><p>
    </p></div><div class="section" title="ProcessEngineConfiguration bean"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="configurationRoot"></a>ProcessEngineConfiguration bean</h2></div></div></div><p>
      <code class="literal">activiti.cfg.xml</code>必须包含一个id为<code class="literal">'processEngineConfiguration'</code>的bean。
      </p><pre class="prettyprint"><span class="pln">&nbsp;</span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration"</span><span class="tag">&gt;</span></pre><p>
      这个bean会用来构建<code class="literal">ProcessEngine</code>。
      有多个类可以用来定义<code class="literal">processEngineConfiguration</code>。
      这些类对应不同的环境，并设置了对应的默认值。
      最好选择（最）适用于你的环境的类，
      这样可以少配置几个引擎的参数。
      下面是目前可以使用的类（以后会包含更多）：
      </p><div class="itemizedlist"><a name="configurationClasses"></a><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration</strong></span>:
            单独运行的流程引擎。Activiti会自己处理事务。
            默认，数据库只在引擎启动时检测
            （如果没有Activiti的表或者表结构不正确就会抛出异常）。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>org.activiti.engine.impl.cfg.StandaloneInMemProcessEngineConfiguration</strong></span>:
            单元测试时的辅助类。Activiti会自己控制事务。
            默认使用H2内存数据库。数据库表会在引擎启动时创建，关闭时删除。
            使用它时，不需要其他配置（除非使用job执行器或邮件功能）。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>org.activiti.spring.SpringProcessEngineConfiguration</strong></span>:
            在Spring环境下使用流程引擎。
            参考<a class="link" href="#springintegration" title="Chapter&nbsp;5.&nbsp;Spring集成">Spring集成章节</a>。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>org.activiti.engine.impl.cfg.JtaProcessEngineConfiguration</strong></span>:
            单独运行流程引擎，并使用JTA事务。
          </p></li></ul></div><p>
    </p></div><div class="section" title="数据库配置"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="databaseConfiguration"></a>数据库配置</h2></div></div></div><p>
      Activiti可能使用两种方式配置数据库。
      第一种方式是定义数据库配置参数：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>jdbcUrl</strong></span>: 数据库的JDBC URL。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>jdbcDriver</strong></span>: 对应不同数据库类型的驱动。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>jdbcUsername</strong></span>: 连接数据库的用户名。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>jdbcPassword</strong></span>: 连接数据库的密码。
          </p></li></ul></div><p>
    </p><p>
      基于JDBC参数配置的数据库连接
      会使用默认的<a class="ulink" href="http://www.mybatis.org/" target="_top">MyBatis</a>连接池。
      下面的参数可以用来配置连接池（来自MyBatis参数）：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>jdbcMaxActiveConnections</strong></span>:
            连接池中处于被使用状态的连接的最大值。默认为10。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>jdbcMaxIdleConnections</strong></span>:
            连接池中处于空闲状态的连接的最大值。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>jdbcMaxCheckoutTime</strong></span>:
            连接被取出使用的最长时间，超过时间会被强制回收。
            默认为20000（20秒）。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>jdbcMaxWaitTime</strong></span>:
            这是一个底层配置，让连接池可以在长时间无法获得连接时，
            打印一条日志，并重新尝试获取一个连接。（避免因为错误配置导致沉默的操作失败）。
            默认为20000（20秒）。
          </p></li></ul></div><p>
    </p><p>
      示例数据库配置：
      </p><pre class="prettyprint"><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jdbcUrl"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"jdbc:h2:mem:activiti;DB_CLOSE_DELAY=1000"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jdbcDriver"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"org.h2.Driver"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jdbcUsername"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"sa"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jdbcPassword"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">""</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><p>
    </p><p>
      也可以使用<code class="literal">javax.sql.DataSource</code>。
      （比如，<a class="ulink" href="http://commons.apache.org/dbcp/" target="_top">Apache Commons</a>的DBCP）：
      </p><pre class="prettyprint"><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"dataSource"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.apache.commons.dbcp.BasicDataSource"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"driverClassName"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"com.mysql.jdbc.Driver"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"url"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"jdbc:mysql://localhost:3306/activiti"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"username"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"activiti"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"password"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"activiti"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"defaultAutoCommit"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"dataSource"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"dataSource"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; ...<br>&nbsp; &nbsp; &nbsp; </span></pre><p>
      注意，Activiti的发布包中没有这些类。
      你要自己把对应的类（比如，从DBCP里）放到你的classpath下。
    </p><p>
      无论你使用JDBC还是DataSource的方式，都可以设置下面的配置：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>databaseType</strong></span>:
            一般不用设置，因为可以自动通过数据库连接的元数据获取。
            只有自动检测失败时才需要设置。
            可能的值有：{h2, mysql, oracle, postgres, mssql, db2}。
            <span class="bold"><strong>如果没使用默认的H2数据库就必须设置这项</strong></span>。
            这个配置会决定使用哪些创建/删除脚本和查询语句。
            参考<a class="link" href="#supporteddatabases" title="支持的数据库">支持数据库章节</a>
            了解支持哪些类型。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>databaseSchemaUpdate</strong></span>:
            设置流程引擎启动和关闭时如何处理数据库表。
            </p><div class="itemizedlist"><ul class="itemizedlist" type="circle"><li class="listitem"><p>
                  <code class="literal">false</code>（默认）：检查数据库表的版本和依赖库的版本，
                  如果版本不匹配就抛出异常。

                </p></li><li class="listitem"><p>
                  <code class="literal">true</code>: 构建流程引擎时，执行检查，如果需要就执行更新。
                  如果表不存在，就创建。

                </p></li><li class="listitem"><p>
                  <code class="literal">create-drop</code>: 构建流程引擎时创建数据库表，
                  关闭流程引擎时删除这些表。
                </p></li></ul></div><p>
          </p></li></ul></div><p>
    </p></div><div class="section" title="JNDI数据库配置"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="jndiDatasourceConfig"></a>JNDI数据库配置</h2></div></div></div><p>
		默认，Activiti的数据库配置会放在web应用的WEB-INF/classes目录下的db.properties文件中。
		这样做比较繁琐，
		因为要用户在每次发布时，都修改Activiti源码中的db.properties并重新编译war文件，
		或者解压缩war文件，修改其中的db.properties。
    </p><p>
		使用JNDI（Java命名和目录接口）来获取数据库连接，
		连接是由servlet容器管理的，可以在war部署外边管理配置。
		与db.properties相比，
		它也允许对连接进行更多的配置。
    </p><div class="section" title="使用"><div class="titlepage"><div><div><h3 class="title"><a name="jndi_usage"></a>使用</h3></div></div></div><p>
			要想把Activiti Explorer和Activiti Rest应用从db.properties转换为使用
			JNDI数据库配置，需要打开原始的Spring配置文件
			（activiti-webapp-explorer2/src/main/webapp/WEB-INF/activiti-standalone-context.xml
			和activiti-webapp-rest2/src/main/resources/activiti-context.xml），
			删除"dbProperties"和"dataSource"两个bean，然后添加如下bean：
            </p><pre class="prettyprint"><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"dataSource"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.springframework.jndi.JndiObjectFactoryBean"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jndiName"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"java:comp/env/jdbc/activitiDB"</span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p> 
        </p><p>
			接下来，我们需要添加包含了默认的H2配置的context.xml文件。
			如果已经有了JNDI配置，会覆盖这些配置。
			对Activiti Explorer来说，对应的配置文件activiti-webapp-explorer2/src/main/webapp/META-INF/context.xml
			如下所示：
            </p><pre class="prettyprint"><span class="tag">&lt;Context</span><span class="pln"> </span><span class="atn">antiJARLocking</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="atn">path</span><span class="pun">=</span><span class="atv">"/activiti-explorer2"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;Resource</span><span class="pln"> </span><span class="atn">auth</span><span class="pun">=</span><span class="atv">"Container"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jdbc/activitiDB"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"javax.sql.DataSource"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">scope</span><span class="pun">=</span><span class="atv">"Shareable"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">description</span><span class="pun">=</span><span class="atv">"JDBC DataSource"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">url</span><span class="pun">=</span><span class="atv">"jdbc:h2:mem:activiti;DB_CLOSE_DELAY=1000"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">driverClassName</span><span class="pun">=</span><span class="atv">"org.h2.Driver"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">username</span><span class="pun">=</span><span class="atv">"sa"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">password</span><span class="pun">=</span><span class="atv">""</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">defaultAutoCommit</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">initialSize</span><span class="pun">=</span><span class="atv">"5"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">maxWait</span><span class="pun">=</span><span class="atv">"5000"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">maxActive</span><span class="pun">=</span><span class="atv">"120"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">maxIdle</span><span class="pun">=</span><span class="atv">"5"</span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/Context&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
            
            对于Activiti REST应用，添加的activiti-webapp-rest2/src/main/webapp/META-INF/context.xml
			如下所示：
            </p><pre class="prettyprint"><span class="pun">&lt;?</span><span class="pln">xml version</span><span class="pun">=</span><span class="str">"1.0"</span><span class="pln"> encoding</span><span class="pun">=</span><span class="str">"UTF-8"</span><span class="pun">?&gt;</span><span class="pln"><br></span><span class="tag">&lt;Context</span><span class="pln"> </span><span class="atn">antiJARLocking</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="atn">path</span><span class="pun">=</span><span class="atv">"/activiti-rest2"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;Resource</span><span class="pln"> </span><span class="atn">auth</span><span class="pun">=</span><span class="atv">"Container"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jdbc/activitiDB"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"javax.sql.DataSource"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">scope</span><span class="pun">=</span><span class="atv">"Shareable"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">description</span><span class="pun">=</span><span class="atv">"JDBC DataSource"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">url</span><span class="pun">=</span><span class="atv">"jdbc:h2:mem:activiti;DB_CLOSE_DELAY=-1"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">driverClassName</span><span class="pun">=</span><span class="atv">"org.h2.Driver"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">username</span><span class="pun">=</span><span class="atv">"sa"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">password</span><span class="pun">=</span><span class="atv">""</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">defaultAutoCommit</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">initialSize</span><span class="pun">=</span><span class="atv">"5"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">maxWait</span><span class="pun">=</span><span class="atv">"5000"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">maxActive</span><span class="pun">=</span><span class="atv">"120"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">maxIdle</span><span class="pun">=</span><span class="atv">"5"</span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/Context&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p><p>
			可选的一步，现在可以删除Activiti Explorer和Activiti Rest两个应用中
			不再使用的db.properties文件了。
        </p></div><div class="section" title="配置"><div class="titlepage"><div><div><h3 class="title"><a name="jndi_configuration"></a>配置</h3></div></div></div><p>
            JNDI数据库配置会因为你使用的Servlet container不同而不同。
			下面的配置可以在tomcat中使用，但是对其他容易，
			请引用你使用的容器的文档。
        </p><p>
			如果使用tomcat，JNDI资源配置在
            $CATALINA_BASE/conf/[enginename]/[hostname]/[warname].xml
			（对于Activiti Explorer来说，通常是在$CATALINA_BASE/conf/Catalina/localhost/activiti-explorer.war）。
			当应用第一次发布时，会把这个文件从war中复制出来。
			所以如果这个文件已经存在了，你需要替换它。要想修改JNDI资源让应用连接mysql而不是H2，
			可以像下面这样修改：
            </p><pre class="prettyprint"><span class="pun">&lt;?</span><span class="pln">xml version</span><span class="pun">=</span><span class="str">"1.0"</span><span class="pln"> encoding</span><span class="pun">=</span><span class="str">"UTF-8"</span><span class="pun">?&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;Context</span><span class="pln"> </span><span class="atn">antiJARLocking</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="atn">path</span><span class="pun">=</span><span class="atv">"/activiti-explorer2"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;Resource</span><span class="pln"> </span><span class="atn">auth</span><span class="pun">=</span><span class="atv">"Container"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jdbc/activitiDB"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"javax.sql.DataSource"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">description</span><span class="pun">=</span><span class="atv">"JDBC DataSource"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">url</span><span class="pun">=</span><span class="atv">"jdbc:mysql://localhost:3306/activiti"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">driverClassName</span><span class="pun">=</span><span class="atv">"com.mysql.jdbc.Driver"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">username</span><span class="pun">=</span><span class="atv">"sa"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">password</span><span class="pun">=</span><span class="atv">""</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">defaultAutoCommit</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">initialSize</span><span class="pun">=</span><span class="atv">"5"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">maxWait</span><span class="pun">=</span><span class="atv">"5000"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">maxActive</span><span class="pun">=</span><span class="atv">"120"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">maxIdle</span><span class="pun">=</span><span class="atv">"5"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/Context&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
       </p></div></div><div class="section" title="支持的数据库"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="supporteddatabases"></a>支持的数据库</h2></div></div></div><p>下面列出Activiti使用的数据库类型（大小写敏感）。</p><div class="table"><a name="databaseTypes"></a><p class="title"><b>Table&nbsp;3.1.&nbsp;支持的数据库</b></p><div class="table-contents"><table summary="支持的数据库" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>Activiti数据库类型</th><th>JDBC URL实例</th><th>备注</th></tr></thead><tbody><tr><td>h2</td><td>jdbc:h2:tcp://localhost/activiti</td><td>默认配置的数据库</td></tr><tr><td>mysql</td><td>jdbc:mysql://localhost:3306/activiti?autoReconnect=true</td><td>使用mysql-connector-java驱动测试</td></tr><tr><td>oracle</td><td>jdbc:oracle:thin:@localhost:1521:xe</td><td>&nbsp;</td></tr><tr><td>postgres</td><td>jdbc:postgresql://localhost:5432/activiti</td><td>&nbsp;</td></tr><tr><td>db2</td><td>jdbc:db2://localhost:50000/activiti</td><td>&nbsp;</td></tr><tr><td>mssql</td><td>jdbc:sqlserver://localhost:1433/activiti</td><td>&nbsp;</td></tr></tbody></table></div></div><br class="table-break"></div><div class="section" title="创建数据库表"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="creatingDatabaseTable"></a>创建数据库表</h2></div></div></div><p>
      下面是创建数据库表最简单的办法：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>把activiti-engine的jar放到classpath下</p></li><li class="listitem"><p>添加对应的数据库驱动</p></li><li class="listitem"><p>把Activiti配置文件 (<span class="emphasis"><em>activiti.cfg.xml</em></span>) 放到 classpath下，
          指向你的数据库（参考<a class="link" href="#databaseConfiguration" title="数据库配置">数据库配置章节</a>）</p></li><li class="listitem"><p>执行 <span class="emphasis"><em>DbSchemaCreate</em></span> 类的main方法</p></li></ul></div><p>
    </p><p>
      不过，一般情况只有数据库管理员才能执行DDL语句。
	  在生产环境，这也是最明智的选择。
      SQL DDL语句可以从Activiti下载页或Activiti发布目录里找到，在<code class="literal">database</code>子目录下。
      脚本也包含在引擎的jar中(<span class="emphasis"><em>activiti-engine-x.jar</em></span>)，
      在<span class="emphasis"><em>org/activiti/db/create</em></span>包下（<span class="emphasis"><em>drop</em></span>目录里是删除语句）。
      SQL文件的命名方式如下
      </p><pre class="prettyprint"><span class="pln">activiti</span><span class="pun">.{</span><span class="pln">db</span><span class="pun">}.{</span><span class="pln">create</span><span class="pun">|</span><span class="pln">drop</span><span class="pun">}.{</span><span class="pln">type</span><span class="pun">}.</span><span class="pln">sql</span></pre><p>
      其中 <span class="emphasis"><em>db</em></span> 是 <a class="link" href="#supporteddatabases" title="支持的数据库">支持的数据库</a>，
       <span class="emphasis"><em>type</em></span> 是
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><span class="bold"><strong>engine:</strong></span> 引擎执行的表。必须。</p></li><li class="listitem"><p><span class="bold"><strong>identity:</strong></span> 包含用户，群组，用户与组之间的关系的表。
          这些表是可选的，只有使用引擎自带的默认身份管理时才需要。</p></li><li class="listitem"><p><span class="bold"><strong>history:</strong></span> 包含历史和审计信息的表。可选的：历史级别设为<span class="emphasis"><em>none</em></span>时不会使用。
          注意这也会引用一些需要把数据保存到历史表中的功能（比如任务的评论）。</p></li></ul></div><p>
    </p><p>
        <span class="bold"><strong>MySQL用户需要注意：</strong></span> 版本低于5.6.4的MySQL不支持毫秒精度的timstamp或date类型。
		更严重的是，有些版本会在尝试创建这样一列时抛出异常，而有些版本则不会。
		在执行自动创建/更新时，引擎会在执行过程中修改DDL。
		当使用DDL时，可以选择通用版本和名为<span class="emphasis"><em>mysql55</em></span>的文件。
		（它适合所有版本低于5.6.4的情况）。
		后一个文件会将列的类型设置为没有毫秒的情况。
    </p><p>
        总结一下，对于MySQL版本会执行如下操作
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><span class="bold"><strong>&lt;5.6:</strong></span> 不支持毫秒精度。可以使用DDL文件（包含<span class="emphasis"><em>mysql55</em></span>的文件）。可以实现自动创建/更新。</p></li><li class="listitem"><p><span class="bold"><strong>5.6.0 - 5.6.3:</strong></span> 不支持毫秒精度。无法自动创建/更新。建议更新到新的数据库版本。如果真的需要的话，也可以使用<span class="emphasis"><em>mysql 5.5</em></span>。</p></li><li class="listitem"><p><span class="bold"><strong>5.6.4+:</strong></span>支持毫秒精度。可以使用DDL文件（默认包含<span class="emphasis"><em>mysql</em></span>的文件）。可以实现自动创建、更新。</p></li></ul></div><p>
    </p><p>
		注意对于已经更新了MySQL数据库，而且Activiti表已经创建/更新的情况，
		必须手工修改列的类型。
    </p></div><div class="section" title="理解数据库表的命名"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="database.tables.explained"></a>理解数据库表的命名</h2></div></div></div><p>
      Activiti的表都以<span class="bold"><strong>ACT_</strong></span>开头。
      第二部分是表示表的用途的两个字母标识。
      用途也和服务的API对应。
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>ACT_RE_*</strong></span>: 'RE'表示<code class="literal">repository</code>。
            这个前缀的表包含了流程定义和流程静态资源
            （图片，规则，等等）。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>ACT_RU_*</strong></span>: 'RU'表示<code class="literal">runtime</code>。
            这些运行时的表，包含流程实例，任务，变量，异步任务，等运行中的数据。
            Activiti只在流程实例执行过程中保存这些数据，
            在流程结束时就会删除这些记录。
            这样运行时表可以一直很小速度很快。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>ACT_ID_*</strong></span>: 'ID'表示<code class="literal">identity</code>。
            这些表包含身份信息，比如用户，组等等。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>ACT_HI_*</strong></span>: 'HI'表示<code class="literal">history</code>。
            这些表包含历史数据，比如历史流程实例，
            变量，任务等等。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>ACT_GE_*</strong></span>: <code class="literal">通用</code>数据，
            用于不同场景下。
          </p></li></ul></div><p>
    </p></div><div class="section" title="数据库升级"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="databaseUpgrade"></a>数据库升级</h2></div></div></div><p>在执行更新之前要先备份数据库
     （使用数据库的备份功能）
     </p><p>默认，每次构建流程引擎时都会进行版本检测。
     这一切都在应用启动或Activiti webapp启动时发生。
     如果Activiti发现数据库表的版本与依赖库的版本不同，
     就会抛出异常。
     </p><p>要升级，你要把下面的配置
     放到activiti.cfg.xml配置文件里：
     </p><pre class="prettyprint"><span class="tag">&lt;beans</span><span class="pln"> ... </span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="com">&lt;!-- ... --&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"databaseSchemaUpdate"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="com">&lt;!-- ... --&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/beans&gt;</span></pre><p> <span class="bold"><strong>然后，把对应的数据库驱动放到classpath里。</strong></span>
     升级应用的Activiti依赖。启动一个新版本的Activiti
     指向包含旧版本的数据库。将<code class="literal">databaseSchemaUpdate</code>设置为<code class="literal">true</code>，
     Activiti会自动将数据库表升级到新版本，
     当发现依赖和数据库表版本不通过时。
     </p><p> <span class="bold"><strong>也可以执行更新升级DDL语句。</strong></span>
     也可以执行数据库脚本，可以在Activiti下载页找到。
     </p></div><div class="section" title="启用Job执行器"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="jobExecutorConfiguration"></a>启用Job执行器</h2></div></div></div><p><code class="literal">JobExecutor</code>是管理一系列线程的组件，可以触发定时器（也包含后续的异步消息）。
    在单元测试场景下，很难使用多线程。因此API允许查询(<code class="literal">ManagementService.createJobQuery</code>)和执行job
    (<code class="literal">ManagementService.executeJob</code>)，所以job可以在单元测试中控制。
    要避免与job执行器冲突，可以关闭它。
    </p><p>
    默认，<code class="literal">JobExecutor</code>在流程引擎启动时就会激活。
    如果不想在流程引擎启动后自动激活<code class="literal">JobExecutor</code>，可以设置
   </p><pre class="prettyprint"><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jobExecutorActivate"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
    </p></div><div class="section" title="配置邮件服务器"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="mailServerConfiguration"></a>配置邮件服务器</h2></div></div></div><p>
      可以选择配置邮件服务器。Activiti支持在业务流程中发送邮件。
      想真正的发送一个email，必须配置一个真实的SMTP邮件服务器。
      参考<a class="link" href="#bpmnEmailTaskServerConfiguration" title="邮件服务器配置">e-mail任务</a>。
    </p></div><div class="section" title="配置历史"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="historyConfiguration"></a>配置历史</h2></div></div></div><p>
      可以选择定制历史存储的配置。你可以通过配置影响引擎的<a class="link" href="#history" title="Chapter&nbsp;11.&nbsp;历史">历史功能</a>。
      参考<a class="link" href="#historyConfig" title="历史配置">历史配置</a>。
      </p><pre class="prettyprint"><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"history"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"audit"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
    </p></div><div class="section" title="为表达式和脚本暴露配置"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="exposingConfigurationBeans"></a>为表达式和脚本暴露配置</h2></div></div></div><p>默认，<code class="literal">activiti.cfg.xml</code>和你自己的Spring配置文件中所有bean
    都可以在表达式和脚本中使用。
    如果你想限制配置文件中的bean的可见性，
    可以配置流程引擎配置的beans配置。
    <code class="literal">ProcessEngineConfiguration</code>的beans是一个map。当你指定了这个参数，
    只有包含这个map中的bean可以在表达式和脚本中使用。
    通过在map中指定的名称来决定暴露的bean。
    </p></div><div class="section" title="配置部署缓存"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="processDefinitionCacheConfiguration"></a>配置部署缓存</h2></div></div></div><p>所有流程定义都被缓存了（解析之后）避免每次使用前都要访问数据库，
    因为流程定义数据是不会改变的。
    默认，不会限制这个缓存。如果想限制流程定义缓存，可以添加如下配置
    </p><pre class="prettyprint"><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"processDefinitionCacheLimit"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"10"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
    这个配置会把默认的hashmap缓存替换成LRU缓存，来提供限制。
    当然，这个配置的最佳值跟流程定义的总数有关，
    实际使用中会具体使用多少流程定义也有关。</p><p>也你可以注入自己的缓存实现。这个bean必须实现
    org.activiti.engine.impl.persistence.deploy.DeploymentCache接口：
    </p><pre class="prettyprint"><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"processDefinitionCache"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.MyCache"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/property&gt;</span></pre><p>有一个类似的配置叫<code class="literal">knowledgeBaseCacheLimit</code>和<code class="literal">knowledgeBaseCache</code>，
     它们是配置规则缓存的。只有流程中使用规则任务时才会用到。</p></div><div class="section" title="日志"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="loggingConfiguration"></a>日志</h2></div></div></div><p>从Activiti 5.12开始，SLF4J被用作日志框架，替换了之前使用java.util.logging。
    所有日志（activiti, spring, mybatis等等）都转发给SLF4J
    允许使用你选择的日志实现。</p><p><span class="bold"><strong>默认activiti-engine依赖中没有提供SLF4J绑定的jar，
    需要根据你的实际需要使用日志框架。</strong></span>如果没有添加任何实现jar，SLF4J会使用NOP-logger，不使用任何日志，不会发出警告，而且什么日志都不会记录。
    可以通过<a class="ulink" href="http://www.slf4j.org/codes.html#StaticLoggerBinder" target="_top">http://www.slf4j.org/codes.html#StaticLoggerBinder</a>了解这些实现。</p><p>使用Maven，比如使用一个依赖（这里使用log4j），注意你还需要添加一个version：
    </p><pre class="prettyprint"><span class="tag">&lt;dependency&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;groupId&gt;</span><span class="pln">org.slf4j</span><span class="tag">&lt;/groupId&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;artifactId&gt;</span><span class="pln">slf4j-log4j12</span><span class="tag">&lt;/artifactId&gt;</span><span class="pln"><br></span><span class="tag">&lt;/dependency&gt;</span></pre><p>activiti-explorer和activiti-rest应用都使用了Log4j绑定。执行所有activiti-*模块的单元测试页使用了Log4j。</p><p>
      <span class="bold"><strong>特别提醒如果容器classpath中存在commons-logging：</strong></span>
	  为了把spring日志转发给SLF4J，需要使用桥接（参考<a class="ulink" href="http://www.slf4j.org/legacy.html#jclOverSLF4J" target="_top">http://www.slf4j.org/legacy.html#jclOverSLF4J</a>）。
	  如果你的容器提供了commons-logging实现，请参考下面网页：<a class="ulink" href="http://www.slf4j.org/codes.html#release" target="_top">http://www.slf4j.org/codes.html#release</a>来确保稳定性。
    </p><p>
	  使用Maven的实例（忽略版本）：
      </p><pre class="prettyprint"><span class="tag">&lt;dependency&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;groupId&gt;</span><span class="pln">org.slf4j</span><span class="tag">&lt;/groupId&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;artifactId&gt;</span><span class="pln">jcl-over-slf4j</span><span class="tag">&lt;/artifactId&gt;</span><span class="pln"><br></span><span class="tag">&lt;/dependency&gt;</span></pre><p>
    </p></div><div class="section" title="映射诊断上下文"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="MDC"></a>映射诊断上下文</h2></div></div></div><p>
		在5.13中，activiti支持slf4j的MDC功能。
		如下的基础信息会传递到日志中记录：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            流程定义Id标记为mdcProcessDefinitionID
            </p></li><li class="listitem"><p>
            流程实例Id标记为mdcProcessInstanceID
            </p></li><li class="listitem"><p>
            分支Id标记为mdcexecutionId
        </p></li></ul></div><p>


	  默认不会记录这些信息。可以配置日志使用期望的格式来显示它们，扩展通常的日志信息。
	  比如，下面的log4j配置定义会让日志显示上面提及的信息：
     </p><pre class="prettyprint"><span class="pln">&nbsp;log4j</span><span class="pun">.</span><span class="pln">appender</span><span class="pun">.</span><span class="pln">consoleAppender</span><span class="pun">.</span><span class="pln">layout</span><span class="pun">.</span><span class="typ">ConversionPattern</span><span class="pln"> </span><span class="pun">=</span><span class="typ">ProcessDefinitionId</span><span class="pun">=%</span><span class="pln">X</span><span class="pun">{</span><span class="pln">mdcProcessDefinitionID</span><span class="pun">}</span><span class="pln"><br>executionId</span><span class="pun">=%</span><span class="pln">X</span><span class="pun">{</span><span class="pln">mdcExecutionId</span><span class="pun">}</span><span class="pln"> mdcProcessInstanceID</span><span class="pun">=%</span><span class="pln">X</span><span class="pun">{</span><span class="pln">mdcProcessInstanceID</span><span class="pun">}</span><span class="pln"> mdcBusinessKey</span><span class="pun">=%</span><span class="pln">X</span><span class="pun">{</span><span class="pln">mdcBusinessKey</span><span class="pun">}</span><span class="pln"> </span><span class="pun">%</span><span class="pln">m</span><span class="pun">%</span><span class="pln">n</span><span class="str">"<br>&nbsp; &nbsp; &nbsp; </span></pre><p>
	  当系统进行高风险任务，日志必须严格检查时，这个功能就非常有用，比如要使用日志分析的情况。

    </p></div><div class="section" title="事件处理"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="eventDispatcher"></a>事件处理</h2></div></div></div><p>
      Activiti 5.15中实现了一种事件机制。它允许在引擎触发事件时获得提醒。
	  参考<a class="link" href="#eventDispatcherEventTypes" title="支持的事件类型">所有支持的事件类型</a>了解有效的事件。
    </p><p>
      可以为对应的事件类型注册监听器，在这个类型的任何时间触发时都会收到提醒。
	  你可以添加引擎范围的事件监听器<a class="link" href="#eventDispatcherConfiguration" title="配置与安装">通过配置</a>，
	  添加引擎范围的事件监听器<a class="link" href="#eventDispatcherConfigurationRuntime" title="在运行阶段添加监听器">在运行阶段使用API</a>，
	  或添加event-listener到<a class="link" href="#eventDispatcherConfigurationProcessDefinition" title="为流程定义添加监听器">特定流程定义的BPMN XML中</a>。
    </p><p>
       所有分发的事件，都是<code class="literal">org.activiti.engine.delegate.event.ActivitiEvent</code>的子类。事件包含（如果有效）<code class="literal">type</code>，<code class="literal">executionId</code>，<code class="literal">processInstanceId</code>和<code class="literal">processDefinitionId</code>。
	   对应的事件会包含事件发生时对应上下文的额外信息，
	   这些额外的载荷可以在<a class="link" href="#eventDispatcherEventTypes" title="支持的事件类型">支持的所有事件类型</a>中找到。
    </p><div class="section" title="事件监听器实现"><div class="titlepage"><div><div><h3 class="title"><a name="eventDispatcherListener"></a>事件监听器实现</h3></div></div></div><p>
          实现事件监听器的唯一要求是实现<code class="literal">org.activiti.engine.delegate.event.ActivitiEventListener</code>。
		  西面是一个实现监听器的例子，它会把所有监听到的事件打印到标准输出中，包括job执行的事件异常：
          </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">MyEventListener</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">ActivitiEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onEvent</span><span class="pun">(</span><span class="typ">ActivitiEvent</span><span class="pln"> </span><span class="kwd">event</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">switch</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">event</span><span class="pun">.</span><span class="pln">getType</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; </span><span class="kwd">case</span><span class="pln"> JOB_EXECUTION_SUCCESS</span><span class="pun">:</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"A job well done!"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">break</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; </span><span class="kwd">case</span><span class="pln"> JOB_EXECUTION_FAILURE</span><span class="pun">:</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"A job has failed..."</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">break</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; </span><span class="kwd">default</span><span class="pun">:</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Event received: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="kwd">event</span><span class="pun">.</span><span class="pln">getType</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> isFailOnException</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="com">// The logic in the onEvent method of this listener is not critical, exceptions</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="com">// can be ignored if logging fails...</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
        </p><p>
		  <code class="literal">isFailOnException()</code>方法决定了当事件分发时，<code class="literal">onEvent(..)</code>方法抛出异常时的行为。
		  这里返回的是<code class="literal">false</code>，会忽略异常。
		  当返回<code class="literal">true</code>时，异常不会忽略，继续向上传播，迅速导致当前命令失败。
		  当事件是一个API调用的一部分时（或其他事务性操作，比如job执行），
		  事务就会回滚。当事件监听器中的行为不是业务性时，建议返回<code class="literal">false</code>。
        </p><p>
           activiti提供了一些基础的实现，实现了事件监听器的常用场景。可以用来作为基类或监听器实现的样例：
           </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                  <span class="bold"><strong>org.activiti.engine.delegate.event.BaseEntityEventListener</strong></span>：
				  这个事件监听器的基类可以用来监听实体相关的事件，可以针对某一类型实体，也可以是全部实体。
				  它隐藏了类型检测，并提供了三个需要重写的方法：<code class="literal">onCreate(..)</code>, <code class="literal">onUpdate(..)</code> 和 <code class="literal">onDelete(..)</code>，当实体创建，更新，或删除时调用。对于其他实体相关的事件，会调用
				  <code class="literal">onEntityEvent(..)</code>。
                </p></li></ul></div><p>
        </p></div><div class="section" title="配置与安装"><div class="titlepage"><div><div><h3 class="title"><a name="eventDispatcherConfiguration"></a>配置与安装</h3></div></div></div><p>
          把事件监听器配置到流程引擎配置中时，会在流程引擎启动时激活，并在引擎启动启动中持续工作着。
        </p><p>
		  <code class="literal">eventListeners</code>属性需要<code class="literal">org.activiti.engine.delegate.event.ActivitiEventListener</code>的队列。
		  通常，我们可以声明一个内部的bean定义，或使用<code class="literal">ref</code>引用已定义的bean。
		  下面的代码，向配置添加了一个事件监听器，任何事件触发时都会提醒它，无论事件是什么类型：
                </p><pre class="prettyprint"><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; ...<br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"eventListeners"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;list&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.example.MyEventListener"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/list&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/property&gt;</span><span class="pln"><br></span><span class="tag">&lt;/bean&gt;</span></pre><p>
        </p><p>
		  为了监听特定类型的事件，可以使用<code class="literal">typedEventListeners</code>属性，它需要一个map参数。
		  map的key是逗号分隔的事件名（或单独的事件名）。
		  map的value是<code class="literal">org.activiti.engine.delegate.event.ActivitiEventListener</code>队列。
		  下面的代码演示了向配置中添加一个事件监听器，可以监听job执行成功或失败：
                </p><pre class="prettyprint"><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; ...<br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"typedEventListeners"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;map&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;entry</span><span class="pln"> </span><span class="atn">key</span><span class="pun">=</span><span class="atv">"JOB_EXECUTION_SUCCESS,JOB_EXECUTION_FAILURE"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;list&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.example.MyJobEventListener"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/list&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/entry&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/map&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/property&gt;</span><span class="pln"><br></span><span class="tag">&lt;/bean&gt;</span></pre><p>
        </p><p>分发事件的顺序是由监听器添加时的顺序决定的。首先，会调用所有普通的事件监听器（<code class="literal">eventListeners</code>属性），按照它们在<code class="literal">list</code>中的次序。
		然后，会调用所有对应类型的监听器（<code class="literal">typedEventListeners</code>属性），如果对应类型的事件被触发了。</p></div><div class="section" title="在运行阶段添加监听器"><div class="titlepage"><div><div><h3 class="title"><a name="eventDispatcherConfigurationRuntime"></a>在运行阶段添加监听器</h3></div></div></div><p>可以通过API（<code class="literal">RuntimeService</code>）在运行阶段添加或删除额外的事件监听器：
        </p><pre class="prettyprint"><span class="com">/**<br>&nbsp;* Adds an event-listener which will be notified of ALL events by the dispatcher.<br>&nbsp;* @param listenerToAdd the listener to add<br>&nbsp;*/</span><span class="pln"><br></span><span class="kwd">void</span><span class="pln"> addEventListener</span><span class="pun">(</span><span class="typ">ActivitiEventListener</span><span class="pln"> listenerToAdd</span><span class="pun">);</span><span class="pln"><br><br></span><span class="com">/**<br>&nbsp;* Adds an event-listener which will only be notified when an event occurs, which type is in the given types.<br>&nbsp;* @param listenerToAdd the listener to add<br>&nbsp;* @param types types of events the listener should be notified for<br>&nbsp;*/</span><span class="pln"><br></span><span class="kwd">void</span><span class="pln"> addEventListener</span><span class="pun">(</span><span class="typ">ActivitiEventListener</span><span class="pln"> listenerToAdd</span><span class="pun">,</span><span class="pln"> </span><span class="typ">ActivitiEventType</span><span class="pun">...</span><span class="pln"> types</span><span class="pun">);</span><span class="pln"><br><br></span><span class="com">/**<br>&nbsp;* Removes the given listener from this dispatcher. The listener will no longer be notified,<br>&nbsp;* regardless of the type(s) it was registered for in the first place.<br>&nbsp;* @param listenerToRemove listener to remove<br>&nbsp;*/</span><span class="pln"><br>&nbsp;</span><span class="kwd">void</span><span class="pln"> removeEventListener</span><span class="pun">(</span><span class="typ">ActivitiEventListener</span><span class="pln"> listenerToRemove</span><span class="pun">);</span></pre><p>
        </p><p>
          注意运行期添加的监听器<span class="bold"><strong>引擎重启后就消失了。</strong></span>
        </p></div><div class="section" title="为流程定义添加监听器"><div class="titlepage"><div><div><h3 class="title"><a name="eventDispatcherConfigurationProcessDefinition"></a>为流程定义添加监听器</h3></div></div></div><p>可以为特定流程定义添加监听器。监听器只会监听与这个流程定义相关的事件，以及这个流程定义上发起的所有流程实例的事件。
		监听器实现可以使用，全类名定义，引用实现了监听器接口的表达式，或配置为抛出一个message/signal/error的BPMN事件。
        </p><div class="section" title="让监听器执行用户定义的逻辑"><div class="titlepage"><div><div><h4 class="title"><a name="N104C6"></a>让监听器执行用户定义的逻辑</h4></div></div></div><p>下面代码为一个流程定义添加了两个监听器。第一个监听器会接收所有类型的事件，它是通过全类名定义的。
		第二个监听器只接收作业成功或失败的事件，它使用了定义在流程引擎配置中的<code class="literal">beans</code>属性中的一个bean。</p><pre class="prettyprint"><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"testEventListeners"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:eventListener</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.test.MyEventListener"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:eventListener</span><span class="pln"> </span><span class="atn">delegateExpression</span><span class="pun">=</span><span class="atv">"${testEventListener}"</span><span class="pln"> </span><span class="atn">events</span><span class="pun">=</span><span class="atv">"JOB_EXECUTION_SUCCESS,JOB_EXECUTION_FAILURE"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br><br>&nbsp; ...<br><br></span><span class="tag">&lt;/process&gt;</span></pre><p>对于实体相关的事件，也可以设置为针对某个流程定义的监听器，实现只监听发生在某个流程定义上的某个类型实体事件。
	  下面的代码演示了如何实现这种功能。可以用于所有实体事件（第一个例子），也可以只监听特定类型的事件（第二个例子）。</p><pre class="prettyprint"><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"testEventListeners"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:eventListener</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.test.MyEventListener"</span><span class="pln"> </span><span class="atn">entityType</span><span class="pun">=</span><span class="atv">"task"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:eventListener</span><span class="pln"> </span><span class="atn">delegateExpression</span><span class="pun">=</span><span class="atv">"${testEventListener}"</span><span class="pln"> </span><span class="atn">events</span><span class="pun">=</span><span class="atv">"ENTITY_CREATED"</span><span class="pln"> </span><span class="atn">entityType</span><span class="pun">=</span><span class="atv">"task"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br><br>&nbsp; ...<br><br></span><span class="tag">&lt;/process&gt;</span></pre><p><code class="literal">entityType</code>支持的值有：<code class="literal">attachment</code>, <code class="literal">comment</code>, <code class="literal">execution</code>,<code class="literal">identity-link</code>, <code class="literal">job</code>, <code class="literal">process-instance</code>,
<code class="literal">process-definition</code>, <code class="literal">task</code>。</p></div><div class="section" title="监听抛出BPMN事件"><div class="titlepage"><div><div><h4 class="title"><a name="N104F0"></a>监听抛出BPMN事件</h4></div></div></div><p>
          <a class="link" href="#experimental" title="试验性功能">
            <span class="bold"><strong>[试验阶段]</strong></span>
          </a>
        </p><p>另一种处理事件的方法是抛出一个BPMN事件。请注意它只针对与抛出一个activiti事件类型的BPMN事件。
		比如，抛出一个BPMN事件，在流程实例删除时，会导致一个错误。
		下面的代码演示了如何在流程实例中抛出一个signal，把signal抛出到外部流程（全局），在流程实例中抛出一个消息事件，
		在流程实例中抛出一个错误事件。除了使用<code class="literal">class</code>或<code class="literal">delegateExpression</code>，
		还使用了<code class="literal">throwEvent</code>属性，通过额外属性，指定了抛出事件的类型。</p><pre class="prettyprint"><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"testEventListeners"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:eventListener</span><span class="pln"> </span><span class="atn">throwEvent</span><span class="pun">=</span><span class="atv">"signal"</span><span class="pln"> </span><span class="atn">signalName</span><span class="pun">=</span><span class="atv">"My signal"</span><span class="pln"> </span><span class="atn">events</span><span class="pun">=</span><span class="atv">"TASK_ASSIGNED"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/process&gt;</span></pre><pre class="prettyprint"><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"testEventListeners"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:eventListener</span><span class="pln"> </span><span class="atn">throwEvent</span><span class="pun">=</span><span class="atv">"globalSignal"</span><span class="pln"> </span><span class="atn">signalName</span><span class="pun">=</span><span class="atv">"My signal"</span><span class="pln"> </span><span class="atn">events</span><span class="pun">=</span><span class="atv">"TASK_ASSIGNED"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/process&gt;</span></pre><pre class="prettyprint"><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"testEventListeners"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:eventListener</span><span class="pln"> </span><span class="atn">throwEvent</span><span class="pun">=</span><span class="atv">"message"</span><span class="pln"> </span><span class="atn">messageName</span><span class="pun">=</span><span class="atv">"My message"</span><span class="pln"> </span><span class="atn">events</span><span class="pun">=</span><span class="atv">"TASK_ASSIGNED"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/process&gt;</span></pre><pre class="prettyprint"><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"testEventListeners"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:eventListener</span><span class="pln"> </span><span class="atn">throwEvent</span><span class="pun">=</span><span class="atv">"error"</span><span class="pln"> </span><span class="atn">errorCode</span><span class="pun">=</span><span class="atv">"123"</span><span class="pln"> </span><span class="atn">events</span><span class="pun">=</span><span class="atv">"TASK_ASSIGNED"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/process&gt;</span></pre><p>如果需要声明额外的逻辑，是否抛出BPMN事件，可以扩展activiti提供的监听器类。在子类中重写<code class="literal">isValidEvent(ActivitiEvent event)</code>，
可以防止抛出BPMN事件。对应的类是<code class="literal">org.activiti.engine.test.api.event.SignalThrowingEventListenerTest</code>, <code class="literal">org.activiti.engine.impl.bpmn.helper.MessageThrowingEventListener</code> 和 <code class="literal">org.activiti.engine.impl.bpmn.helper.ErrorThrowingEventListener</code>.</p></div><div class="section" title="流程定义中监听器的注意事项"><div class="titlepage"><div><div><h4 class="title"><a name="N1051E"></a>流程定义中监听器的注意事项</h4></div></div></div><p>
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              事件监听器只能声明在<code class="literal">process</code>元素中，作为<code class="literal">extensionElements</code>的子元素。
			  监听器不能定义在流程的单个activity下。
            </p></li><li class="listitem"><p>
              <code class="literal">delegateExpression</code>中的表达式无法访问execution上下文，这与其他表达式不同（比如gateway）。
			  它只能引用定义在流程引擎配置的<code class="literal">beans</code>属性中声明的bean，或者使用spring（未使用beans属性）中所有实现了监听器接口的spring-bean。
            </p></li><li class="listitem"><p>
              在使用监听器的 <code class="literal">class</code> 属性时，只会创建一个实例。记住监听器实现不会依赖成员变量，
			  确认是多线程安全的。
            </p></li><li class="listitem"><p>
              当一个非法的事件类型用在<code class="literal">events</code>属性或<code class="literal">throwEvent</code>中时，流程定义发布时就会抛出异常。（会导致部署失败）。如果<code class="literal">class</code>或<code class="literal">delegateExecution</code>由问题（类不存在，不存在的bean引用，或代理类没有实现监听器接口），会在流程启动时抛出异常（或在第一个有效的流程定义事件被监听器接收时）。所以要保证引用的类正确的放在classpath下，表达式也要引用一个有效的实例。
            </p></li></ul></div><p>
      </p></div></div><div class="section" title="通过API分发事件"><div class="titlepage"><div><div><h3 class="title"><a name="eventDispatcherCustomEvents"></a>通过API分发事件</h3></div></div></div><p>我们提供了通过API使用事件机制的方法，允许大家触发定义在引擎中的任何自定义事件。
		建议（不强制）只触发类型为<code class="literal">CUSTOM</code>的<code class="literal">ActivitiEvents</code>。可以通过<code class="literal">RuntimeService</code>触发事件：
        </p><pre class="prettyprint"><span class="com">/**<br>&nbsp;* Dispatches the given event to any listeners that are registered.<br>&nbsp;* @param event event to dispatch.<br>&nbsp;*<br>&nbsp;* @throws ActivitiException if an exception occurs when dispatching the event or when the {@link ActivitiEventDispatcher}<br>&nbsp;* is disabled.<br>&nbsp;* @throws ActivitiIllegalArgumentException when the given event is not suitable for dispatching.<br>&nbsp;*/</span><span class="pln"><br>&nbsp;</span><span class="kwd">void</span><span class="pln"> dispatchEvent</span><span class="pun">(</span><span class="typ">ActivitiEvent</span><span class="pln"> </span><span class="kwd">event</span><span class="pun">);</span></pre><p>
        </p></div><div class="section" title="支持的事件类型"><div class="titlepage"><div><div><h3 class="title"><a name="eventDispatcherEventTypes"></a>支持的事件类型</h3></div></div></div><p>下面是引擎中可能出现的所有事件类型。每个类型都对应<code class="literal">org.activiti.engine.delegate.event.ActivitiEventType</code>中的一个枚举值。</p><div class="table"><a name="eventTypes"></a><p class="title"><b>Table&nbsp;3.2.&nbsp;支持的事件</b></p><div class="table-contents"><table summary="支持的事件" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>事件名称</th><th>描述</th><th>事件类型</th></tr></thead><tbody><tr><td>ENGINE_CREATED</td><td>监听器监听的流程引擎已经创建完毕，并准备好接受API调用。</td><td><code class="literal">org.activiti...ActivitiEvent</code></td></tr><tr><td>ENGINE_CLOSED</td><td>监听器监听的流程引擎已经关闭，不再接受API调用。</td><td><code class="literal">org.activiti...ActivitiEvent</code></td></tr><tr><td>ENTITY_CREATED</td><td>创建了一个新实体。实体包含在事件中。</td><td><code class="literal">org.activiti...ActivitiEntityEvent</code></td></tr><tr><td>ENTITY_INITIALIZED</td><td>创建了一个新实体，初始化也完成了。如果这个实体的创建会包含子实体的创建，这个事件会在子实体都创建/初始化完成后被触发，这是与<code class="literal">ENTITY_CREATED</code>的区别。</td><td><code class="literal">org.activiti...ActivitiEntityEvent</code></td></tr><tr><td>ENTITY_UPDATED</td><td>更新了已存在的实体。实体包含在事件中。</td><td><code class="literal">org.activiti...ActivitiEntityEvent</code></td></tr><tr><td>ENTITY_DELETED</td><td>删除了已存在的实体。实体包含在事件中。</td><td><code class="literal">org.activiti...ActivitiEntityEvent</code></td></tr><tr><td>ENTITY_SUSPENDED</td><td>暂停了已存在的实体。实体包含在事件中。会被ProcessDefinitions, ProcessInstances 和 Tasks抛出。</td><td><code class="literal">org.activiti...ActivitiEntityEvent</code></td></tr><tr><td>ENTITY_ACTIVATED</td><td>激活了已存在的实体，实体包含在事件中。会被ProcessDefinitions, ProcessInstances 和 Tasks抛出。</td><td><code class="literal">org.activiti...ActivitiEntityEvent</code></td></tr><tr><td>JOB_EXECUTION_SUCCESS</td><td>作业执行成功。job包含在事件中。</td><td><code class="literal">org.activiti...ActivitiEntityEvent</code></td></tr><tr><td>JOB_EXECUTION_FAILURE</td><td>作业执行失败。作业和异常信息包含在事件中。</td><td><code class="literal">org.activiti...ActivitiEntityEvent</code> and <code class="literal">org.activiti...ActivitiExceptionEvent</code></td></tr><tr><td>JOB_RETRIES_DECREMENTED</td><td>因为作业执行失败，导致重试次数减少。作业包含在事件中。</td><td><code class="literal">org.activiti...ActivitiEntityEvent</code></td></tr><tr><td>TIMER_FIRED</td><td>触发了定时器。job包含在事件中。</td><td><code class="literal">org.activiti...ActivitiEntityEvent</code></td></tr><tr><td>JOB_CANCELED</td><td>取消了一个作业。事件包含取消的作业。作业可以通过API调用取消，
				  任务完成后对应的边界定时器也会取消，在新流程定义发布时也会取消。
                </td><td>
                  <code class="literal">org.activiti...ActivitiEntityEvent</code>
                </td></tr><tr><td>ACTIVITY_STARTED</td><td>一个节点开始执行</td><td><code class="literal">org.activiti...ActivitiActivityEvent</code></td></tr><tr><td>ACTIVITY_COMPLETED</td><td>一个节点成功结束</td><td><code class="literal">org.activiti...ActivitiActivityEvent</code></td></tr><tr><td>ACTIVITY_SIGNALED</td><td>一个节点收到了一个信号</td><td><code class="literal">org.activiti...ActivitiSignalEvent</code></td></tr><tr><td>ACTIVITY_MESSAGE_RECEIVED</td><td>一个节点收到了一个消息。在节点收到消息之前触发。收到后，会触发<code class="literal">ACTIVITY_SIGNAL</code>或<code class="literal">ACTIVITY_STARTED</code>，这会根据节点的类型（边界事件，事件子流程开始事件）</td><td><code class="literal">org.activiti...ActivitiMessageEvent</code></td></tr><tr><td>ACTIVITY_ERROR_RECEIVED</td><td>一个节点收到了一个错误事件。在节点实际处理错误之前触发。
				事件的<code class="literal">activityId</code>对应着处理错误的节点。
				这个事件后续会是<code class="literal">ACTIVITY_SIGNALLED</code>或<code class="literal">ACTIVITY_COMPLETE</code>，
				如果错误发送成功的话。</td><td><code class="literal">org.activiti...ActivitiErrorEvent</code></td></tr><tr><td>UNCAUGHT_BPMN_ERROR</td><td>抛出了未捕获的BPMN错误。流程没有提供针对这个错误的处理器。
				事件的<code class="literal">activityId</code>为空。</td><td><code class="literal">org.activiti...ActivitiErrorEvent</code></td></tr><tr><td>ACTIVITY_COMPENSATE</td><td>一个节点将要被补偿。事件包含了将要执行补偿的节点id。</td><td><code class="literal">org.activiti...ActivitiActivityEvent</code></td></tr><tr><td>VARIABLE_CREATED</td><td>创建了一个变量。事件包含变量名，变量值和对应的分支或任务（如果存在）。</td><td><code class="literal">org.activiti...ActivitiVariableEvent</code></td></tr><tr><td>VARIABLE_UPDATED</td><td>更新了一个变量。事件包含变量名，变量值和对应的分支或任务（如果存在）。</td><td><code class="literal">org.activiti...ActivitiVariableEvent</code></td></tr><tr><td>VARIABLE_DELETED</td><td>删除了一个变量。事件包含变量名，变量值和对应的分支或任务（如果存在）。</td><td><code class="literal">org.activiti...ActivitiVariableEvent</code></td></tr><tr><td>TASK_ASSIGNED</td><td>任务被分配给了一个人员。事件包含任务。</td><td><code class="literal">org.activiti...ActivitiEntityEvent</code></td></tr><tr><td>TASK_CREATED</td><td>创建了新任务。它位于<code class="literal">ENTITY_CREATE</code>事件之后。当任务是由流程创建时，
				  这个事件会在TaskListener执行之前被执行。
                </td><td>
                  <code class="literal">org.activiti...ActivitiEntityEvent</code>
                </td></tr><tr><td>TASK_COMPLETED</td><td>任务被完成了。它会在<code class="literal">ENTITY_DELETE</code>事件之前触发。当任务是流程一部分时，事件会在流程继续运行之前，
				后续事件将是<code class="literal">ACTIVITY_COMPLETE</code>，对应着完成任务的节点。</td><td><code class="literal">org.activiti...ActivitiEntityEvent</code></td></tr><tr><td>TASK_TIMEOUT</td><td>任务已超时，在<code class="literal">TIMER_FIRED</code>事件之后，会触发用户任务的超时事件，
				  当这个任务分配了一个定时器的时候。
                </td><td>
                  <code class="literal">org.activiti...ActivitiEntityEvent</code>
                </td></tr><tr><td>PROCESS_COMPLETED</td><td>流程已结束。在最后一个节点的<code class="literal">ACTIVITY_COMPLETED</code>事件之后触发。
				  当流程到达的状态，没有任何后续连线时，
				  流程就会结束。
                </td><td>
                  <code class="literal">org.activiti...ActivitiEntityEvent</code>
                </td></tr><tr><td>MEMBERSHIP_CREATED</td><td>用户被添加到一个组里。事件包含了用户和组的id。</td><td><code class="literal">org.activiti...ActivitiMembershipEvent</code></td></tr><tr><td>MEMBERSHIP_DELETED</td><td>用户被从一个组中删除。事件包含了用户和组的id。</td><td><code class="literal">org.activiti...ActivitiMembershipEvent</code></td></tr><tr><td>MEMBERSHIPS_DELETED</td><td>所有成员被从一个组中删除。在成员删除之前触发这个事件，所以他们都是可以访问的。
				因为性能方面的考虑，不会为每个成员触发单独的<code class="literal">MEMBERSHIP_DELETED</code>事件。</td><td><code class="literal">org.activiti...ActivitiMembershipEvent</code></td></tr></tbody></table></div></div><br class="table-break"><p>
		  引擎内部所有<code class="literal">ENTITY_*</code>事件都是与实体相关的。下面的列表展示了实体事件与实体的对应关系：

          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><span class="bold"><strong><code class="literal">ENTITY_CREATED, ENTITY_INITIALIZED, ENTITY_DELETED</code></strong></span>: Attachment, Comment, Deployment, Execution, Group, IdentityLink, Job, Model, ProcessDefinition, ProcessInstance, Task, User.</p></li><li class="listitem"><p><span class="bold"><strong><code class="literal">ENTITY_UPDATED</code></strong></span>: Attachment, Deployment, Execution, Group, IdentityLink, Job, Model, ProcessDefinition, ProcessInstance, Task, User.</p></li><li class="listitem"><p><span class="bold"><strong><code class="literal">ENTITY_SUSPENDED, ENTITY_ACTIVATED</code></strong></span>: ProcessDefinition, ProcessInstance/Execution, Task.</p></li></ul></div><p>
        </p></div><div class="section" title="附加信息"><div class="titlepage"><div><div><h3 class="title"><a name="eventDispatcherRemarks"></a>附加信息</h3></div></div></div><p>
		  <span class="bold"><strong>只有同一个流程引擎中的事件会发送给对应的监听器。</strong></span>。的那个你有很多引擎 - 在同一个数据库运行 -
		  事件只会发送给注册到对应引擎的监听器。其他引擎发生的事件不会发送给这个监听器，无论实际上它们运行在同一个或不同的JVM中。
        </p><p>
          对应的事件类型（对应实体）都包含对应的实体。根据类型或事件，这些实体不能再进行更新（比如，当实例以被删除）。可能的话，使用事件提供的<code class="literal">EngineServices</code>来以安全的方式来操作引擎。即使如此，你需要小心的对事件对应的实体进行更新/操作。
        </p><p>
          没有对应历史的实体事件，因为它们都有运行阶段的对应实体。
        </p></div></div></div><div class="chapter" title="Chapter&nbsp;4.&nbsp;Activiti API"><div class="titlepage"><div><div><h2 class="title"><a name="chapterApi"></a>Chapter&nbsp;4.&nbsp;Activiti API</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#apiEngine">流程引擎的API和服务</a></span></dt><dt><span class="section"><a href="#N10786">异常策略</a></span></dt><dt><span class="section"><a href="#api.services">使用Activiti的服务</a></span></dt><dd><dl><dt><span class="section"><a href="#api.services.deployment">发布流程</a></span></dt><dt><span class="section"><a href="#api.services.start.processinstance">启动一个流程实例</a></span></dt><dt><span class="section"><a href="#api.services.tasls">完成任务</a></span></dt><dt><span class="section"><a href="#api.services.suspend">挂起，激活一个流程</a></span></dt><dt><span class="section"><a href="#api.services">更多知识</a></span></dt></dl></dd><dt><span class="section"><a href="#queryAPI">查询API</a></span></dt><dt><span class="section"><a href="#apiExpressions">表达式</a></span></dt><dt><span class="section"><a href="#apiUnitTesting">单元测试</a></span></dt><dt><span class="section"><a href="#apiDebuggingUnitTest">调试单元测试</a></span></dt><dt><span class="section"><a href="#apiProcessEngineInWebApp">web应用中的流程引擎</a></span></dt></dl></div><div class="section" title="流程引擎的API和服务"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="apiEngine"></a>流程引擎的API和服务</h2></div></div></div><p>引擎API是与Activiti打交道的最常用方式。
	我们从<code class="literal">ProcessEngine</code>开始，
	创建它的很多种方法都已经在
	<a class="link" href="#configuration" title="创建ProcessEngine">配置章节</a>中有所涉及。
	从ProcessEngine中，你可以获得很多囊括工作流/BPM方法的服务。
	ProcessEngine和服务类都是线程安全的。
	你可以在整个服务器中仅保持它们的一个引用就可以了。
    </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/api_006.png" align="middle"></div><pre class="prettyprint"><span class="typ">ProcessEngine</span><span class="pln"> processEngine </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ProcessEngines</span><span class="pun">.</span><span class="pln">getDefaultProcessEngine</span><span class="pun">();</span><span class="pln"><br><br></span><span class="typ">RuntimeService</span><span class="pln"> runtimeService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getRuntimeService</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">RepositoryService</span><span class="pln"> repositoryService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getRepositoryService</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">TaskService</span><span class="pln"> taskService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getTaskService</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">ManagementService</span><span class="pln"> managementService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getManagementService</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">IdentityService</span><span class="pln"> identityService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getIdentityService</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">HistoryService</span><span class="pln"> historyService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getHistoryService</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">FormService</span><span class="pln"> formService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getFormService</span><span class="pun">();</span></pre><p><code class="literal">ProcessEngines.getDefaultProcessEngine()</code>会在第一次调用时
	初始化并创建一个流程引擎，以后再调用就会返回相同的流程引擎。
	使用对应的方法可以创建和关闭所有流程引擎：<code class="literal">ProcessEngines.init()</code>
    和 <code class="literal">ProcessEngines.destroy()</code>。
    </p><p>ProcessEngines会扫描所有<code class="literal">activiti.cfg.xml</code> 和 <code class="literal">activiti-context.xml</code> 文件。
	对于<code class="literal">activiti.cfg.xml</code>文件，流程引擎会使用Activiti的经典方式构建：
    <code class="literal">ProcessEngineConfiguration.createProcessEngineConfigurationFromInputStream(inputStream).buildProcessEngine()</code>.
    对于<code class="literal">activiti-context.xml</code>文件，流程引擎会使用Spring方法构建：先创建一个Spring的环境，
	然后通过环境获得流程引擎。
    </p><p>
	    所有服务都是无状态的。这意味着可以在多节点集群环境下运行Activiti，每个节点都指向同一个数据库，
		不用担心哪个机器实际执行前端的调用。
		无论在哪里执行服务都没有问题。
    </p><p>
		<span class="bold"><strong>RepositoryService</strong></span>可能是使用Activiti引擎时最先接触的服务。
		它提供了管理和控制<code class="literal">发布包</code>和<code class="literal">流程定义</code>的操作。
		这里不涉及太多细节，流程定义是BPMN 2.0流程的java实现。
		它包含了一个流程每个环节的结构和行为。
		<code class="literal">发布包</code>是Activiti引擎的打包单位。一个发布包可以包含多个BPMN 2.0 xml文件和其他资源。
		开发者可以自由选择把任意资源包含到发布包中。
		既可以把一个单独的BPMN 2.0 xml文件放到发布包里，也可以把整个流程和相关资源都放在一起。
		（比如，'hr-processes'实例可以包含hr流程相关的任何资源）。
		可以通过<code class="literal">RepositoryService</code>来<code class="literal">部署</code>这种发布包。
		发布一个发布包，意味着把它上传到引擎中，所有流程都会在保存进数据库之前分析解析好。
		从这点来说，系统知道这个发布包的存在，发布包中包含的流程就已经可以启动了。
    </p><p>
		除此之外，服务可以
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
				查询引擎中的发布包和流程定义。
            </p></li><li class="listitem"><p>
				暂停或激活发布包，对应全部和特定流程定义。
				暂停意味着它们不能再执行任何操作了，激活是对应的反向操作。
            </p></li><li class="listitem"><p>
				获得多种资源，像是包含在发布包里的文件，
				或引擎自动生成的流程图。
            </p></li><li class="listitem"><p>
				获得流程定义的pojo版本，
				可以用来通过java解析流程，而不必通过xml。
            </p></li></ul></div><p>
    </p><p>
		正如<code class="literal">RepositoryService</code>负责静态信息（比如，不会改变的数据，至少是不怎么改变的），
		<span class="bold"><strong>RuntimeService</strong></span>正好是完全相反的。它负责启动一个流程定义的新实例。
		如上所述，<code class="literal">流程定义</code>定义了流程各个节点的结构和行为。
		流程实例就是这样一个流程定义的实例。对每个流程定义来说，同一时间会有很多实例在执行。
		<code class="literal">RuntimeService</code>也可以用来获取和保存<code class="literal">流程变量</code>。
		这些数据是特定于某个流程实例的，并会被很多流程中的节点使用
		（比如，一个排他网关常常使用流程变量来决定选择哪条路径继续流程）。
		<code class="literal">Runtimeservice</code>也能查询流程实例和执行。
		执行对应BPMN 2.0中的<code class="literal">'token'</code>。基本上执行指向流程实例当前在哪里。
		最后，<code class="literal">RuntimeService</code>可以在流程实例等待外部触发时使用，这时可以用来继续流程实例。
		流程实例可以有很多<code class="literal">暂停状态</code>，而服务提供了多种方法来'触发'实例，
		接受外部触发后，流程实例就会继续向下执行。
    </p><p>
		任务是由系统中真实人员执行的，它是Activiti这类BPMN引擎的核心功能之一。
		所有与任务有关的功能都包含在<span class="bold"><strong>TaskService</strong></span>中：
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
				查询分配给用户或组的任务
            </p></li><li class="listitem"><p>
				创建<span class="emphasis"><em>独立运行</em></span>任务。这些任务与流程实例无关。
            </p></li><li class="listitem"><p>
				手工设置任务的执行者，或者这些用户通过何种方式与任务关联。
            </p></li><li class="listitem"><p>
				认领并完成一个任务。认领意味着一个人期望成为任务的执行者，
				即这个用户会完成这个任务。完成意味着“做这个任务要求的事情”。
				通常来说会有很多种处理形式。
            </p></li></ul></div><p>
    </p><p>
		<span class="bold"><strong>IdentityService</strong></span>非常简单。它可以管理（创建，更新，删除，查询...）群组和用户。
		请注意， Activiti执行时并没有对用户进行检查。
		例如，任务可以分配给任何人，但是引擎不会校验系统中是否存在这个用户。
		这是Activiti引擎也可以使用外部服务，比如ldap，活动目录，等等。
    </p><p>
		<span class="bold"><strong>FormService</strong></span>是一个可选服务。即使不使用它，Activiti也可以完美运行，
		不会损失任何功能。这个服务提供了<span class="emphasis"><em>启动表单</em></span>和<span class="emphasis"><em>任务表单</em></span>两个概念。
		<span class="emphasis"><em>启动表单</em></span>会在流程实例启动之前展示给用户，
		<span class="emphasis"><em>任务表单</em></span>会在用户完成任务时展示。Activiti支持在BPMN 2.0流程定义中设置这些表单。
		这个服务以一种简单的方式将数据暴露出来。再次重申，它时可选的，
		表单也不一定要嵌入到流程定义中。
    </p><p>
		<span class="bold"><strong>HistoryService</strong></span>提供了Activiti引擎手机的所有历史数据。
		在执行流程时，引擎会保存很多数据（根据配置），比如流程实例启动时间，任务的参与者，
		完成任务的时间，每个流程实例的执行路径，等等。
		这个服务主要通过查询功能来获得这些数据。
    </p><p>
		<span class="bold"><strong>ManagementService</strong></span>在使用Activiti的定制环境中基本上不会用到。
		它可以查询数据库的表和表的元数据。另外，它提供了查询和管理异步操作的功能。
		Activiti的异步操作用途很多，比如定时器，异步操作，
		延迟暂停、激活，等等。后续，会讨论这些功能的更多细节。
    </p><p>
	可以从<a class="ulink" href="http://www.mossle.com/docs/javadocs/index.html" target="_top">javadocs</a>中获得这些服务和引擎API的更多信息。
    </p></div><div class="section" title="异常策略"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N10786"></a>异常策略</h2></div></div></div><p>Activiti中的基础异常为<code class="literal">org.activiti.engine.ActivitiException</code>，一个非检查异常。
	这个异常可以在任何时候被API抛出，不过特定方法抛出的“特定”的异常都记录在
	<a class="ulink" href="http://www.mossle.com/docs/javadocs/index.html" target="_top">javadocs</a>中。
	例如，下面的<code class="literal">TaskService</code>：
    </p><pre class="prettyprint"><span class="com">/**<br>&nbsp;* Called when the task is successfully executed.<br>&nbsp;* @param taskId the id of the task to complete, cannot be null.<br>&nbsp;* @throws ActivitiObjectNotFoundException when no task exists with the given id.<br>&nbsp;*/</span><span class="pln"><br>&nbsp;</span><span class="kwd">void</span><span class="pln"> complete</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> taskId</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span></pre><p>

    在上面的例子中，当传入一个不存在的任务的id时，就会抛出异常。
	同时，javadoc<span class="bold"><strong>明确指出taskId不能为null，如果传入<code class="literal">null</code>，
	就会抛出<code class="literal">ActivitiIllegalArgumentException</code></strong></span>。
    </p><p>
	  我们希望避免过多的异常继承，下面的子类用于特定的场合。
	  流程引擎和API调用的其他场合不会使用下面的异常，
	  它们会抛出一个普通的<code class="literal">ActivitiExceptions</code>。
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
             <code class="literal">ActivitiWrongDbException</code>：当Activiti引擎发现数据库版本号和引擎版本号不一致时抛出。
            </p></li><li class="listitem"><p>
             <code class="literal">ActivitiOptimisticLockingException</code>：对同一数据进行并发方法并出现乐观锁时抛出。
            </p></li><li class="listitem"><p>
             <code class="literal">ActivitiClassLoadingException</code>：当无法找到需要加载的类或在加载类时出现了错误（比如，JavaDelegate，TaskListener等。
            </p></li><li class="listitem"><p>
             <code class="literal">ActivitiObjectNotFoundException</code>：当请求或操作的对应不存在时抛出。
            </p></li><li class="listitem"><p>
             <code class="literal">ActivitiIllegalArgumentException</code>：这个异常表示调用Activiti API时传入了一个非法的参数，可能是引擎配置中的非法值，或提供了一个非法制，或流程定义中使用的非法值。
            </p></li><li class="listitem"><p>
             <code class="literal">ActivitiTaskAlreadyClaimedException</code>：当任务已经被认领了，再调用<code class="literal">taskService.claim(...)</code>就会抛出。
            </p></li></ul></div><p>
    </p></div><div class="section" title="使用Activiti的服务"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="api.services"></a>使用Activiti的服务</h2></div></div></div><p>
		像上面介绍的那样，要想操作Activiti引擎，需要通过
		<code class="literal">org.activiti.engine.ProcessEngine</code>实例暴露的服务。
		下面的代码假设你已经拥有了一个可以运行的Activiti环境。
		你就可以操作一个<code class="literal">org.activiti.engine.ProcessEngine</code>。
		如果只想简单尝试一下代码，
		可以下载或者clone<a class="ulink" href="https://github.com/Activiti/activiti-unit-test-template" target="_top">Activiti单元测试模板</a>，
		导入到IDE中，把<code class="literal">testUserguideCode()</code>方法添加到
		<code class="literal">org.activiti.MyUnitTest</code>中。
    </p><p>
		这个小例子的最终目标是做一个工作业务流程，
		演示公司中简单的请假申请：
        </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/api_008.png" align="middle"></div><p>
    </p><div class="section" title="发布流程"><div class="titlepage"><div><div><h3 class="title"><a name="api.services.deployment"></a>发布流程</h3></div></div></div><p>
			任何与“静态”资源有关的数据（比如流程定义）都可以通过
			<span class="bold"><strong>RepositoryService</strong></span>访问。
			从概念上讲，所以静态数据都是Activiti的资源内容。
        </p><p>
			在<code class="literal">src/test/resources/org/activiti/test</code>目录下创建一个新的xml文件
			<code class="literal">VacationRequest.bpmn20.xml</code>（如果不使用单元测试模板，你也可以在任何地方创建），
			内容如下。注意这一章不会解释例子中使用的xml结构。
			如果有需要可以先阅读<a class="link" href="#bpmn20" title="Chapter&nbsp;7.&nbsp;BPMN 2.0介绍">bpmn 2.0章</a>来了解这些。
            </p><pre class="prettyprint"><span class="pun">&lt;?</span><span class="pln">xml version</span><span class="pun">=</span><span class="str">"1.0"</span><span class="pln"> encoding</span><span class="pun">=</span><span class="str">"UTF-8"</span><span class="pln"> </span><span class="pun">?&gt;</span><span class="pln"><br></span><span class="tag">&lt;definitions</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"definitions"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">targetNamespace</span><span class="pun">=</span><span class="atv">"http://activiti.org/bpmn20"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/BPMN/20100524/MODEL"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">xmlns:xsi</span><span class="pun">=</span><span class="atv">"http://www.w3.org/2001/XMLSchema-instance"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">xmlns:activiti</span><span class="pun">=</span><span class="atv">"http://activiti.org/bpmn"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"vacationRequest"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Vacation request"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"request"</span><span class="pln"> </span><span class="atn">activiti:initiator</span><span class="pun">=</span><span class="atv">"employeeName"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"numberOfDays"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Number of days"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"long"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"1"</span><span class="pln"> </span><span class="atn">required</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"startDate"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"First day of holiday (dd-MM-yyy)"</span><span class="pln"> </span><span class="atn">datePattern</span><span class="pun">=</span><span class="atv">"dd-MM-yyyy hh:mm"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"date"</span><span class="pln"> </span><span class="atn">required</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"vacationMotivation"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Motivation"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"string"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/startEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow1"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"request"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"handleRequest"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"handleRequest"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Handle vacation request"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;documentation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; ${employeeName} would like to take ${numberOfDays} day(s) of vacation (Motivation: ${vacationMotivation}).<br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/documentation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"vacationApproved"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Do you approve this vacation"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"enum"</span><span class="pln"> </span><span class="atn">required</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:value</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Approve"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:value</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Reject"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/activiti:formProperty&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"managerMotivation"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Motivation"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"string"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;potentialOwner&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;formalExpression&gt;</span><span class="pln">management</span><span class="tag">&lt;/formalExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/potentialOwner&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/userTask&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow2"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"handleRequest"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"requestApprovedDecision"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;exclusiveGateway</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"requestApprovedDecision"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Request approved?"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow3"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"requestApprovedDecision"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"sendApprovalMail"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln">${vacationApproved == 'true'}</span><span class="tag">&lt;/conditionExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/sequenceFlow&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;task</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"sendApprovalMail"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Send confirmation e-mail"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow4"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"sendApprovalMail"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theEnd1"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theEnd1"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow5"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"requestApprovedDecision"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"adjustVacationRequestTask"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln">${vacationApproved == 'false'}</span><span class="tag">&lt;/conditionExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/sequenceFlow&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"adjustVacationRequestTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Adjust vacation request"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;documentation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; Your manager has disapproved your vacation request for ${numberOfDays} days.<br>&nbsp; &nbsp; &nbsp; &nbsp; Reason: ${managerMotivation}<br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/documentation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"numberOfDays"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Number of days"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"${numberOfDays}"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"long"</span><span class="pln"> </span><span class="atn">required</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"startDate"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"First day of holiday (dd-MM-yyy)"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"${startDate}"</span><span class="pln"> </span><span class="atn">datePattern</span><span class="pun">=</span><span class="atv">"dd-MM-yyyy hh:mm"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"date"</span><span class="pln"> </span><span class="atn">required</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"vacationMotivation"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Motivation"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"${vacationMotivation}"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"string"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"resendRequest"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Resend vacation request to manager?"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"enum"</span><span class="pln"> </span><span class="atn">required</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:value</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Yes"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:value</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"No"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/activiti:formProperty&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;humanPerformer&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;formalExpression&gt;</span><span class="pln">${employeeName}</span><span class="tag">&lt;/formalExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/humanPerformer&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/userTask&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow6"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"adjustVacationRequestTask"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"resendRequestDecision"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;exclusiveGateway</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"resendRequestDecision"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Resend request?"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow7"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"resendRequestDecision"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"handleRequest"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln">${resendRequest == 'true'}</span><span class="tag">&lt;/conditionExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/sequenceFlow&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp;</span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow8"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"resendRequestDecision"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theEnd2"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln">${resendRequest == 'false'}</span><span class="tag">&lt;/conditionExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/sequenceFlow&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theEnd2"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;/process&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/definitions&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p><p>
			为了让Activiti引擎知道这个流程，我们必须先进行“发布”。
			发布意味着引擎会把BPMN 2.0 xml解析成可以执行的东西，
			“发布包”中的所有流程定义都会添加到数据库中。
			这样，当引擎重启时，它依然可以获得“已发布”的流程：
            </p><pre class="prettyprint"><span class="typ">ProcessEngine</span><span class="pln"> processEngine </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ProcessEngines</span><span class="pun">.</span><span class="pln">getDefaultProcessEngine</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">RepositoryService</span><span class="pln"> repositoryService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getRepositoryService</span><span class="pun">();</span><span class="pln"><br>repositoryService</span><span class="pun">.</span><span class="pln">createDeployment</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">addClasspathResource</span><span class="pun">(</span><span class="str">"org/activiti/test/VacationRequest.bpmn20.xml"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">deploy</span><span class="pun">();</span><span class="pln"><br><br></span><span class="typ">Log</span><span class="pun">.</span><span class="pln">info</span><span class="pun">(</span><span class="str">"Number of process definitions: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> repositoryService</span><span class="pun">.</span><span class="pln">createProcessDefinitionQuery</span><span class="pun">().</span><span class="pln">count</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p><p>
			可以阅读<a class="link" href="#chDeployment" title="Chapter&nbsp;6.&nbsp;部署">发布章</a>来了解更多关于发布的信息。
        </p></div><div class="section" title="启动一个流程实例"><div class="titlepage"><div><div><h3 class="title"><a name="api.services.start.processinstance"></a>启动一个流程实例</h3></div></div></div><p>
			把流程定义发布到Activiti引擎后，我们可以基于它发起新流程实例。
			对每个流程定义，都可以有很多流程实例。
			流程定义是“蓝图”，流程实例是它的一个运行的执行。
        </p><p>
			所有与流程运行状态相关的东西都可以通过<span class="bold"><strong>RuntimeService</strong></span>获得。
			有很多方法可以启动一个新流程实例。在下面的代码中，我们使用定义在流程定义xml
			中的key来启动流程实例。
			我们也可以在流程实例启动时添加一些流程变量，因为第一个用户任务的表达式需要这些变量。
			流程变量经常会被用到，因为它们赋予来自同一个流程定义的不同流程实例的特别含义。
			简单来说，流程变量是区分流程实例的关键。
            </p><pre class="prettyprint"><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> variables </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">HashMap</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;();</span><span class="pln"><br>variables</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="str">"employeeName"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Kermit"</span><span class="pun">);</span><span class="pln"><br>variables</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="str">"numberOfDays"</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Integer</span><span class="pun">(</span><span class="lit">4</span><span class="pun">));</span><span class="pln"><br>variables</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="str">"vacationMotivation"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"I'm really tired!"</span><span class="pun">);</span><span class="pln"><br><br></span><span class="typ">RuntimeService</span><span class="pln"> runtimeService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getRuntimeService</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">ProcessInstance</span><span class="pln"> processInstance </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"vacationRequest"</span><span class="pun">,</span><span class="pln"> variables</span><span class="pun">);</span><span class="pln"><br><br></span><span class="com">// Verify that we started a new process instance</span><span class="pln"><br></span><span class="typ">Log</span><span class="pun">.</span><span class="pln">info</span><span class="pun">(</span><span class="str">"Number of process instances: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">createProcessInstanceQuery</span><span class="pun">().</span><span class="pln">count</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p></div><div class="section" title="完成任务"><div class="titlepage"><div><div><h3 class="title"><a name="api.services.tasls"></a>完成任务</h3></div></div></div><p>
			流程启动后，第一步就是用户任务。这是必须由系统用户处理的一个环节。
			通常，用户会有一个“任务列表”，展示了所有必须由整个用户处理的任务。
			下面的代码展示了对应的查询可能是怎样的：
            </p><pre class="prettyprint"><span class="com">// Fetch all tasks for the management group</span><span class="pln"><br></span><span class="typ">TaskService</span><span class="pln"> taskService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getTaskService</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Task</span><span class="pun">&gt;</span><span class="pln"> tasks </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">taskCandidateGroup</span><span class="pun">(</span><span class="str">"management"</span><span class="pun">).</span><span class="pln">list</span><span class="pun">();</span><span class="pln"><br></span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Task</span><span class="pln"> task </span><span class="pun">:</span><span class="pln"> tasks</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="typ">Log</span><span class="pun">.</span><span class="pln">info</span><span class="pun">(</span><span class="str">"Task available: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> task</span><span class="pun">.</span><span class="pln">getName</span><span class="pun">());</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p><p>
			为了让流程实例继续运行，我们需要完成整个任务。对Activiti来说，就是需要<code class="literal">complete</code>任务。
			下面的代码展示了如何做这件事：
            </p><pre class="prettyprint"><span class="typ">Task</span><span class="pln"> task </span><span class="pun">=</span><span class="pln"> tasks</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="lit">0</span><span class="pun">);</span><span class="pln"><br><br></span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> taskVariables </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">HashMap</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;();</span><span class="pln"><br>taskVariables</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="str">"vacationApproved"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"false"</span><span class="pun">);</span><span class="pln"><br>taskVariables</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="str">"managerMotivation"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"We have a tight deadline!"</span><span class="pun">);</span><span class="pln"><br>taskService</span><span class="pun">.</span><span class="pln">complete</span><span class="pun">(</span><span class="pln">task</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">(),</span><span class="pln"> taskVariables</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
			流程实例会进入到下一个环节。在这里例子中，
			下一环节允许员工通过表单调整原始的请假申请。员工可以重新提交请假申请，
			这会使流程重新进入到第一个任务。
        </p></div><div class="section" title="挂起，激活一个流程"><div class="titlepage"><div><div><h3 class="title"><a name="api.services.suspend"></a>挂起，激活一个流程</h3></div></div></div><p>
			我们可以挂起一个流程定义。当挂起流程定时时，
			就不能创建新流程了（会抛出一个异常）。
			可以通过<code class="literal">RepositoryService</code>挂起一个流程：
            </p><pre class="prettyprint"><span class="pln">repositoryService</span><span class="pun">.</span><span class="pln">suspendProcessDefinitionByKey</span><span class="pun">(</span><span class="str">"vacationRequest"</span><span class="pun">);</span><span class="pln"><br></span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"vacationRequest"</span><span class="pun">);</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">ActivitiException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; e</span><span class="pun">.</span><span class="pln">printStackTrace</span><span class="pun">();</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
			要想重新激活一个流程定义，可以调用<code class="literal">repositoryService.activateProcessDefinitionXXX</code>方法。
        </p><p>
			也可以挂起一个流程实例。挂起时，流程不能继续执行（比如，完成任务会抛出异常），
			异步操作（比如定时器）也不会执行。
			骨气流程实例可以调用
			<code class="literal">runtimeService.suspendProcessInstance</code>方法。
			激活流程实例可以调用<code class="literal">runtimeService.activateProcessInstanceXXX</code>方法。
        </p></div><div class="section" title="更多知识"><div class="titlepage"><div><div><h3 class="title"><a name="api.services"></a>更多知识</h3></div></div></div><p>
			上面章节中我们仅仅覆盖了Activiti功能的表层。
			未来我们会继续扩展这些章节，以覆盖更多Activiti API。
			当然，像其他开源项目一样，学习的最好方式
			是研究代码，阅读javadoc。
        </p></div></div><div class="section" title="查询API"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="queryAPI"></a>查询API</h2></div></div></div><p>
	  有两种方法可以从引擎中查询数据：查询API和原生查询。查询API提供了完全类型安全的API。
	  你可以为自己的查询条件添加很多条件
	  （所以条件都以AND组合）和精确的排序条件。下面的代码展示了一个例子：
      </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Task</span><span class="pun">&gt;</span><span class="pln"> tasks </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">.</span><span class="pln">taskAssignee</span><span class="pun">(</span><span class="str">"kermit"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">.</span><span class="pln">processVariableValueEquals</span><span class="pun">(</span><span class="str">"orderId"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"0815"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">.</span><span class="pln">orderByDueDate</span><span class="pun">().</span><span class="pln">asc</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">.</span><span class="pln">list</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><p>

	  有时，你需要更强大的查询，比如使用OR条件或不能使用查询API实现的条件。
	  这时，我们推荐原生查询，它让你可以编写自己的SQL查询。
	  返回类型由你使用的查询对象决定，数据会映射到正确的对象上。比如，任务，流程实例，，执行，等等。
	  因为查询会作用在数据库上，你必须使用数据库中定义的表名和列名；这要求了解内部数据结构，
	  因此使用原生查询时一定要注意。表名可以通过API获得，可以尽量减少对数据库的依赖。

      </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Task</span><span class="pun">&gt;</span><span class="pln"> tasks </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createNativeTaskQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">sql</span><span class="pun">(</span><span class="str">"SELECT count(*) FROM "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> managementService</span><span class="pun">.</span><span class="pln">getTableName</span><span class="pun">(</span><span class="typ">Task</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" T WHERE T.NAME_ = #{taskName}"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">parameter</span><span class="pun">(</span><span class="str">"taskName"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"gonzoTask"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">list</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; </span><span class="kwd">long</span><span class="pln"> count </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createNativeTaskQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">sql</span><span class="pun">(</span><span class="str">"SELECT count(*) FROM "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> managementService</span><span class="pun">.</span><span class="pln">getTableName</span><span class="pun">(</span><span class="typ">Task</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" T1, "</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">+</span><span class="pln"> managementService</span><span class="pun">.</span><span class="pln">getTableName</span><span class="pun">(</span><span class="typ">VariableInstanceEntity</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" V1 WHERE V1.TASK_ID_ = T1.ID_"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">count</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><p>
    </p></div><div class="section" title="表达式"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="apiExpressions"></a>表达式</h2></div></div></div><p>Activiti使用UEL处理表达式。UEL即<span class="emphasis"><em>统一表达式语言</em></span>，它时EE6规范的一部分（参考
          <a class="ulink" href="http://docs.oracle.com/javaee/6/tutorial/doc/gjddd.html" target="_top">
          EE6规范</a>）。为了在所有运行环境都支持最新UEL的所有功能，我们使用了一个JUEL的修改版本。
    </p><p>
	  表达式可以用在很多场景下，比如<a class="link" href="#bpmnJavaServiceTaskXML" title="XML内容">Java服务任务</a>，<a class="link" href="#executionListeners" title="执行监听器">执行监听器</a>，<a class="link" href="#taskListeners" title="任务监听器">任务监听器</a>和<a class="link" href="#conditionalSequenceFlowXml" title="XML内容">条件流</a>。
	  虽然有两重表达式，值表达式和方法表达式，Activiti进行了抽象，所以两者可以同样使用在需要<code class="literal">表达式</code>的场景中。
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>Value expression</strong></span>：解析为值。默认，所有流程变量都可以使用。所有spring bean（spring环境中）也可以使用在表达式中。

			一些实例：
</p><pre class="prettyprint"><span class="pln">$</span><span class="pun">{</span><span class="pln">myVar</span><span class="pun">}</span><span class="pln"><br>$</span><span class="pun">{</span><span class="pln">myBean</span><span class="pun">.</span><span class="pln">myProperty</span><span class="pun">}</span></pre><p>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>Method expression</strong></span>：调用一个方法，使用或不使用参数。<span class="bold"><strong>当调用一个无参数的方法时，记得在方法名后添加空的括号（以区分值表达式）。</strong></span>
			传递的参数可以是字符串也可以是表达式，它们会被自动解析。例子：
</p><pre class="prettyprint"><span class="pln">$</span><span class="pun">{</span><span class="pln">printer</span><span class="pun">.</span><span class="kwd">print</span><span class="pun">()}</span><span class="pln"><br>$</span><span class="pun">{</span><span class="pln">myBean</span><span class="pun">.</span><span class="pln">addNewOrder</span><span class="pun">(</span><span class="str">'orderName'</span><span class="pun">)}</span><span class="pln"><br>$</span><span class="pun">{</span><span class="pln">myBean</span><span class="pun">.</span><span class="pln">doSomething</span><span class="pun">(</span><span class="pln">myVar</span><span class="pun">,</span><span class="pln"> execution</span><span class="pun">)}</span></pre><p>
          </p></li></ul></div><p>

      注意这些表达式支持解析原始类型（包括比较），bean，list，数组和map。
    </p><p>
	  在所有流程实例中，表达式中还可以使用一些默认对象：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">execution</code>：<code class="literal">DelegateExecution</code>提供外出执行的额外信息。</p></li><li class="listitem"><p><code class="literal">task</code>：<code class="literal">DelegateTask</code>提供当前任务的额外信息。<span class="bold"><strong>注意，只对任务监听器的表达式有效。</strong></span></p></li><li class="listitem"><p><code class="literal">authenticatedUserId</code>：当前登录的用户id。如果没有用户登录，这个变量就不可用。</p></li></ul></div><p>
    </p><p>
	  想要更多具体的使用方式和例子，参考<a class="link" href="#springExpressions" title="表达式">spring中的表达式</a>，<a class="link" href="#bpmnJavaServiceTaskXML" title="XML内容">Java服务任务</a>，<a class="link" href="#executionListeners" title="执行监听器">执行监听器</a>，<a class="link" href="#taskListeners" title="任务监听器">任务监听器</a>或<a class="link" href="#conditionalSequenceFlowXml" title="XML内容">条件流</a>。
    </p></div><div class="section" title="单元测试"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="apiUnitTesting"></a>单元测试</h2></div></div></div><p>
	  业务流程是软件项目的一部分，它也应该和普通的业务流程一样进行测试：
	  使用单元测试。
	  因为Activiti是一个嵌入式的java引擎，
	  为业务流程编写单元测试和写普通单元测试完全一样。
    </p><p>
	  Activiti支持JUnit 3和4进行单元测试。使用JUnit 3时，
	  必须集成<code class="literal">org.activiti.engine.test.ActivitiTestCase</code>。
	  它通过保护的成员变量提供ProcessEngine和服务，
	  在测试的<code class="literal">setup()</code>中，
	  默认会使用classpath下的<code class="literal">activiti.cfg.xml</code>初始化流程引擎。
	  想使用不同的配置文件，可以重写<span class="emphasis"><em>getConfigurationResource()</em></span>方法。
	  如果配置文件相同的话，对应的流程引擎会被静态缓存，
	  就可以用于多个单元测试。
   </p><p>
    继承了<code class="literal">ActivitiTestCase</code>你，可以在测试方法上使用
	<code class="literal">org.activiti.engine.test.Deployment</code>注解。
	测试执行前，与测试类在同一个包下的，
	格式为<code class="literal">testClassName.testMethod.bpmn20.xml</code>的资源文件，会被部署。
	测试结束后，发布包也会被删除，包括所有相关的流程实例，任务，等等。
	<code class="literal">Deployment</code>注解也可以直接设置资源的位置。
	参考<a class="ulink" href="http://www.mossle.com/docs/javadocs/org/activiti/engine/test/Deployment.html" target="_top">Javadocs</a>获得更多信息。
   </p><p>
     把这些放在一起，JUnit 3测试看起来像这样。
     </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">MyBusinessProcessTest</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">ActivitiTestCase</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Deployment</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> testSimpleProcess</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"simpleProcess"</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="typ">Task</span><span class="pln"> task </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">singleResult</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; assertEquals</span><span class="pun">(</span><span class="str">"My Task"</span><span class="pun">,</span><span class="pln"> task</span><span class="pun">.</span><span class="pln">getName</span><span class="pun">());</span><span class="pln"><br><br>&nbsp; &nbsp; taskService</span><span class="pun">.</span><span class="pln">complete</span><span class="pun">(</span><span class="pln">task</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; assertEquals</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">createProcessInstanceQuery</span><span class="pun">().</span><span class="pln">count</span><span class="pun">());</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><p>
    </p><p>
	  要想在使用JUnit 4编写单元测试时获得同样的功能，
	  可以使用<code class="literal">org.activiti.engine.test.ActivitiRule</code>。
	  通过它，可以通过getter方法获得流程引擎和各种服务。
	  和 <code class="literal">ActivitiTestCase</code>一样（参考上面章节），使用这个<code class="literal">Rule</code>
	  也会启用<code class="literal">org.activiti.engine.test.Deployment</code>注解（参考上面章节使用和配置的介绍），
	  它会在classpath下查找默认的配置文件。
	  如果配置文件相同的话，对应的流程引擎会被静态缓存，
	  就可以用于多个单元测试。
   </p><p>
     下面的代码演示了JUnit 4单元测试并使用了<code class="literal">ActivitiRule</code>的例子。
     </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">MyBusinessProcessTest</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Rule</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">ActivitiRule</span><span class="pln"> activitiRule </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ActivitiRule</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Test</span><span class="pln"><br>&nbsp; </span><span class="lit">@Deployment</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> ruleUsageExample</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">RuntimeService</span><span class="pln"> runtimeService </span><span class="pun">=</span><span class="pln"> activitiRule</span><span class="pun">.</span><span class="pln">getRuntimeService</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"ruleUsage"</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="typ">TaskService</span><span class="pln"> taskService </span><span class="pun">=</span><span class="pln"> activitiRule</span><span class="pun">.</span><span class="pln">getTaskService</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">Task</span><span class="pln"> task </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">singleResult</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; assertEquals</span><span class="pun">(</span><span class="str">"My Task"</span><span class="pun">,</span><span class="pln"> task</span><span class="pun">.</span><span class="pln">getName</span><span class="pun">());</span><span class="pln"><br><br>&nbsp; &nbsp; taskService</span><span class="pun">.</span><span class="pln">complete</span><span class="pun">(</span><span class="pln">task</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; assertEquals</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">createProcessInstanceQuery</span><span class="pun">().</span><span class="pln">count</span><span class="pun">());</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><p>
    </p></div><div class="section" title="调试单元测试"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="apiDebuggingUnitTest"></a>调试单元测试</h2></div></div></div><p>
	  当使用内存数据库H2进行单元测试时，下面的教程会告诉我们
	  如何在调试环境下更容易的监视Activiti的数据库。
	  这里的截图都是基于eclipse，这种机制很容易复用到其他IDE下。
      IDEs.
    </p><p>
      假设我们已经在单元测试里设置了一个<span class="emphasis"><em>断点</em></span>。
	  Ecilpse里，在代码左侧双击：
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/api_007.png" align="middle"></div><p>
      现在用<span class="emphasis"><em>调试</em></span>模式运行单元测试（右击单元测试，
	  选择“运行为”和“单元测试”），测试会停在我们的断点上，
	  然后我们就可以监视测试的变量，它们显示在右侧面板里。
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/api.png" align="middle"></div><p>
	  要监视Activiti的数据，打开<span class="emphasis"><em>“显示”</em></span>窗口
	  （如果找不到，打开“窗口”-&gt;“显示视图”-&gt;“其他”，选择<span class="emphasis"><em>显示</em></span>。）
	  并点击（代码已完成）<code class="literal">org.h2.tools.Server.createWebServer("-web").start()</code>
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/api_004.png" align="middle"></div><p>
	  选择你点击的行，右击。然后选择“显示”（或者直接快捷方式就不用右击了）
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/api_003.png" align="middle"></div><p>
	  现在打开一个浏览器，打开<a class="ulink" href="http://localhost:8082/" target="_top">http://localhost:8082</a>，
	  输入内存数据库的JDBC URL（默认为<code class="literal">jdbc:h2:mem:activiti</code>），
	  点击连接按钮。
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/api_002.png" align="middle"></div><p>
	  你仙子阿可以看到Activiti的数据，通过它们可以了解单元测试时如何以及为什么这样运行的。
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/api_005.png" align="middle"></div><p>
    </p></div><div class="section" title="web应用中的流程引擎"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="apiProcessEngineInWebApp"></a>web应用中的流程引擎</h2></div></div></div><p>
	  <code class="literal">ProcessEngine</code>是线程安全的，
	  可以在多线程下共享。在web应用中，
	  意味着可以在容器启动时创建流程引擎，
	  在容器关闭时关闭流程引擎。
    </p><p>
	  下面代码演示了如何编写一个<code class="literal">ServletContextListener</code>
	  在普通的Servlet环境下初始化和销毁流程引擎：
      </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ProcessEnginesServletContextListener</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">ServletContextListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> contextInitialized</span><span class="pun">(</span><span class="typ">ServletContextEvent</span><span class="pln"> servletContextEvent</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">ProcessEngines</span><span class="pun">.</span><span class="pln">init</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> contextDestroyed</span><span class="pun">(</span><span class="typ">ServletContextEvent</span><span class="pln"> servletContextEvent</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">ProcessEngines</span><span class="pun">.</span><span class="pln">destroy</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span></pre><p>
	  <code class="literal">contextInitialized</code>方法会执行<code class="literal">ProcessEngines.init()</code>。
	  这会查找classpath下的<code class="literal">activiti.cfg.xml</code>文件，
	  根据配置文件创建一个<code class="literal">ProcessEngine</code>（比如，多个jar中都包含配置文件）。
	  如果classpath中包含多个配置文件，确认它们有不同的名字。
	  当需要使用流程引擎时，可以通过</p><pre class="prettyprint"><span class="typ">ProcessEngines</span><span class="pun">.</span><span class="pln">getDefaultProcessEngine</span><span class="pun">()</span></pre><p>
	  或</p><pre class="prettyprint"><span class="typ">ProcessEngines</span><span class="pun">.</span><span class="pln">getProcessEngine</span><span class="pun">(</span><span class="str">"myName"</span><span class="pun">);</span></pre><p>。
	  当然，也可以使用其他方式创建流程引擎，
	  可以参考<a class="link" href="#configuration" title="创建ProcessEngine">配置章节</a>中的描述。
    </p><p>ContextListener中的<code class="literal">contextDestroyed</code>方法会执行<code class="literal">ProcessEngines.destroy()</code>.
	这会关闭所有初始化的流程引擎。
    </p></div></div><div class="chapter" title="Chapter&nbsp;5.&nbsp;Spring集成"><div class="titlepage"><div><div><h2 class="title"><a name="springintegration"></a>Chapter&nbsp;5.&nbsp;Spring集成</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#N10980">ProcessEngineFactoryBean</a></span></dt><dt><span class="section"><a href="#N10998">事务</a></span></dt><dt><span class="section"><a href="#springExpressions">表达式</a></span></dt><dt><span class="section"><a href="#N109F6">资源的自动部署</a></span></dt><dt><span class="section"><a href="#springUnitTest">单元测试</a></span></dt><dt><span class="section"><a href="#spring.enable.activiti.annotation">基于注解的配置</a></span></dt><dt><span class="section"><a href="#N10A86">JPA 和 Hibernate 4.2.x</a></span></dt></dl></div><p>
  虽然没有Spring你也可以使用Activiti，但是我们提供了一些非常不错的集成特性。这一章我们将介绍这些特性。
  </p><div class="section" title="ProcessEngineFactoryBean"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N10980"></a>ProcessEngineFactoryBean</h2></div></div></div><p>
	 可以把流程引擎（<code class="literal">ProcessEngine</code>）作为一个普通的Spring bean进行配置。
	 类 <code class="literal">org.activiti.spring.ProcessEngineFactoryBean</code>是集成的切入点。
	 这个bean需要一个流程引擎配置来创建流程引擎。这也意味着在文档的<a class="link" href="#configuration" title="创建ProcessEngine">配置这一章</a>的介绍属性的创建和配置对于Spring来说也是一样的。对于Spring集成的配置和流程引擎bean看起来像这样：
    </p><pre class="prettyprint"><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.spring.SpringProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; ...<br></span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngine"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.spring.ProcessEngineFactoryBean"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br>&nbsp; </span></pre><p>
	  注意现在使用的 <code class="literal">processEngineConfiguration</code> bean 是 <code class="literal">org.activiti.spring.SpringProcessEngineConfiguration</code> 类。
    </p></div><div class="section" title="事务"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N10998"></a>事务</h2></div></div></div><p>
	我们将会一步一步地解释在Spring examples中公布的 <code class="literal">SpringTransactionIntegrationTest</code>
	下面是我们使用这个例子的Spring配置文件（你可以在SpringTransactionIntegrationTest-context.xml找到它）以下展示的部分包括数据源（dataSource），
	事务管理器（transactionManager），流程引擎（processEngine）和Activiti引擎服务。
    </p><p>当把数据源（DataSource）传递给 <code class="literal">SpringProcessEngineConfiguration</code> （使用"dataSource"属性）之后，Activiti内部使用了一个<code class="literal">org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy</code>代理来封装传递进来的数据源（DataSource）。
	这样做是为了确保从数据源（DataSource）获取的SQL连接能够与Spring的事物结合在一起发挥得更出色。这意味它不再需要在你的Spring配置中代理数据源（dataSource）了。
	然而它仍然允许你传递一个<code class="literal">TransactionAwareDataSourceProxy</code>到<code class="literal">SpringProcessEngineConfiguration</code>中。在这个例子中并不会发生多余的包装。
    </p><p>
      <span class="bold"><strong>
	  为了确保在你的Spring配置中申明的一个<code class="literal">TransactionAwareDataSourceProxy</code>，你不能把使用它的应用交给Spring事物控制的资源。（例如 DataSourceTransactionManager 和JPATransactionManager需要非代理的数据源 ）</strong></span>
    </p><pre class="prettyprint"><span class="tag">&lt;beans</span><span class="pln"> </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://www.springframework.org/schema/beans"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">xmlns:context</span><span class="pun">=</span><span class="atv">"http://www.springframework.org/schema/context"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">xmlns:tx</span><span class="pun">=</span><span class="atv">"http://www.springframework.org/schema/tx"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">xmlns:xsi</span><span class="pun">=</span><span class="atv">"http://www.w3.org/2001/XMLSchema-instance"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">xsi:schemaLocation</span><span class="pun">=</span><span class="atv">"http://www.springframework.org/schema/beans &nbsp; http://www.springframework.org/schema/beans/spring-beans.xsd<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;http://www.springframework.org/schema/tx &nbsp; &nbsp; &nbsp;http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"dataSource"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.springframework.jdbc.datasource.SimpleDriverDataSource"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"driverClass"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"org.h2.Driver"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"url"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"jdbc:h2:mem:activiti;DB_CLOSE_DELAY=1000"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"username"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"sa"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"password"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">""</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"transactionManager"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"dataSource"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"dataSource"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.spring.SpringProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"dataSource"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"dataSource"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"transactionManager"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"transactionManager"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"databaseSchemaUpdate"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jobExecutorActivate"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngine"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.spring.ProcessEngineFactoryBean"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"repositoryService"</span><span class="pln"> </span><span class="atn">factory-bean</span><span class="pun">=</span><span class="atv">"processEngine"</span><span class="pln"> </span><span class="atn">factory-method</span><span class="pun">=</span><span class="atv">"getRepositoryService"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"runtimeService"</span><span class="pln"> </span><span class="atn">factory-bean</span><span class="pun">=</span><span class="atv">"processEngine"</span><span class="pln"> </span><span class="atn">factory-method</span><span class="pun">=</span><span class="atv">"getRuntimeService"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"taskService"</span><span class="pln"> </span><span class="atn">factory-bean</span><span class="pun">=</span><span class="atv">"processEngine"</span><span class="pln"> </span><span class="atn">factory-method</span><span class="pun">=</span><span class="atv">"getTaskService"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"historyService"</span><span class="pln"> </span><span class="atn">factory-bean</span><span class="pun">=</span><span class="atv">"processEngine"</span><span class="pln"> </span><span class="atn">factory-method</span><span class="pun">=</span><span class="atv">"getHistoryService"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"managementService"</span><span class="pln"> </span><span class="atn">factory-bean</span><span class="pun">=</span><span class="atv">"processEngine"</span><span class="pln"> </span><span class="atn">factory-method</span><span class="pun">=</span><span class="atv">"getManagementService"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>...</span></pre><p>Spring配置文件的其余部分包含beans和我们将要在这个特有的例子中的配置：</p><pre class="prettyprint"><span class="tag">&lt;beans&gt;</span><span class="pln"><br>&nbsp; ...<br>&nbsp; </span><span class="tag">&lt;tx:annotation-driven</span><span class="pln"> </span><span class="atn">transaction-manager</span><span class="pun">=</span><span class="atv">"transactionManager"</span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"userBean"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.spring.test.UserBean"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"runtimeService"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"runtimeService"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"printer"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.spring.test.Printer"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/beans&gt;</span></pre><p>
	首先使用任意的一种Spring创建应用上下文的方式创建其Spring应用上下文。在这个例子中你可以使用类路径下面的XML资源来配置我们的Spring应用上下文：
	</p><pre class="prettyprint"><span class="typ">ClassPathXmlApplicationContext</span><span class="pln"> applicationContext </span><span class="pun">=</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ClassPathXmlApplicationContext</span><span class="pun">(</span><span class="str">"org/activiti/examples/spring/SpringTransactionIntegrationTest-context.xml"</span><span class="pun">);</span></pre><p>
    或者, 如果它是一个测试的话:
    </p><pre class="prettyprint"><span class="lit">@ContextConfiguration</span><span class="pun">(</span><span class="str">"classpath:org/activiti/spring/test/transaction/SpringTransactionIntegrationTest-context.xml"</span><span class="pun">)</span></pre><p>
    </p><p>然后我们就可以得到Activiti的服务beans并且调用该服务上面的方法。ProcessEngineFactoryBean将会对该服务添加一些额外的拦截器，在Activiti服务上面的方法使用的是
	Propagation.REQUIRED事物语义。所以，我们可以使用repositoryService去部署一个流程，如下所示：
    </p><pre class="prettyprint"><span class="typ">RepositoryService</span><span class="pln"> repositoryService </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">RepositoryService</span><span class="pun">)</span><span class="pln"> applicationContext</span><span class="pun">.</span><span class="pln">getBean</span><span class="pun">(</span><span class="str">"repositoryService"</span><span class="pun">);</span><span class="pln"><br></span><span class="typ">String</span><span class="pln"> deploymentId </span><span class="pun">=</span><span class="pln"> repositoryService<br>&nbsp; </span><span class="pun">.</span><span class="pln">createDeployment</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">addClasspathResource</span><span class="pun">(</span><span class="str">"org/activiti/spring/test/hello.bpmn20.xml"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">deploy</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">getId</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; </span></pre><p>
	其他相同的服务也是同样可以这么使用。在这个例子中，Spring的事物将会围绕在userBean.hello()上，并且调用Activiti服务的方法也会加入到这个事物中。
    </p><pre class="prettyprint"><span class="typ">UserBean</span><span class="pln"> userBean </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">UserBean</span><span class="pun">)</span><span class="pln"> applicationContext</span><span class="pun">.</span><span class="pln">getBean</span><span class="pun">(</span><span class="str">"userBean"</span><span class="pun">);</span><span class="pln"><br>userBean</span><span class="pun">.</span><span class="pln">hello</span><span class="pun">();</span></pre><p>
	这个UserBean看起来像这样。记得在上面Spring bean的配置中我们把repositoryService注入到userBean中。</p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">UserBean</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="com">/** 由Spring注入 */</span><span class="pln"><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">RuntimeService</span><span class="pln"> runtimeService</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Transactional</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> hello</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">//这里，你可以在你们的领域模型中做一些事物处理。</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">//当在调用Activiti RuntimeService的startProcessInstanceByKey方法时，</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">//它将会结合到同一个事物中。</span><span class="pln"><br>&nbsp; &nbsp; runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"helloProcess"</span><span class="pun">);</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> setRuntimeService</span><span class="pun">(</span><span class="typ">RuntimeService</span><span class="pln"> runtimeService</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">runtimeService </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">;</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span></pre></div><div class="section" title="表达式"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="springExpressions"></a>表达式</h2></div></div></div><p>当使用ProcessEngineFactoryBean时候，默认情况下，在BPMN流程中的所有<a class="link" href="#apiExpressions" title="表达式">表达式</a>都将会'看见'所有的Spring beans。
	它可以限制你在表达式中暴露出的beans或者甚至可以在你的配置中使用一个Map不暴露任何beans。下面的例子暴露了一个单例bean（printer），可以把"printer"当作关键字使用.
   <span class="bold"><strong>想要不暴露任何beans，仅仅只需要在SpringProcessEngineConfiguration中传递一个空的list作为'beans'的属性。当不设置'beans'的属性时，在应用上下文中Spring beans都是可以使用的。</strong></span></p><pre class="prettyprint"><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.spring.SpringProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; ...<br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"beans"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;map&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;entry</span><span class="pln"> </span><span class="atn">key</span><span class="pun">=</span><span class="atv">"printer"</span><span class="pln"> </span><span class="atn">value-ref</span><span class="pun">=</span><span class="atv">"printer"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/map&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/property&gt;</span><span class="pln"><br></span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"printer"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.examples.spring.Printer"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span></pre><p>现在暴露出来的beans就可以在表达式中使用：例如，在SpringTransactionIntegrationTest中的 <code class="literal">hello.bpmn20.xml</code>展示的是如何使用UEL方法表达式去调用Spring bean的方法：
    </p><pre class="prettyprint"><span class="tag">&lt;definitions</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"definitions"</span><span class="pln"> ...</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"helloProcess"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"start"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow1"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"start"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"print"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"print"</span><span class="pln"> </span><span class="bold"><strong><span class="atn">activiti:expression</span><span class="pun">=</span><span class="atv">"#{printer.printMessage()}"</span></strong></span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow2"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"print"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"end"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"end"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;/process&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/definitions&gt;</span></pre><p>这里的 <code class="literal">Printer</code> 看起来像这样：</p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Printer</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> printMessage</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"hello world"</span><span class="pun">);</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span></pre><p>并且Spring bean的配置（如上文所示）看起来像这样：</p><pre class="prettyprint"><span class="tag">&lt;beans</span><span class="pln"> ...</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; ...<br><br>&nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"printer"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.examples.spring.Printer"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/beans&gt;</span></pre></div><div class="section" title="资源的自动部署"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N109F6"></a>资源的自动部署</h2></div></div></div><p>Spring的集成也有一个专门用于对资源部署的特性。在流程引擎的配置中，你可以指定一组资源。当流程引擎被创建的时候，
	所有在这里的资源都将会被自动扫描与部署。在这里有过滤以防止资源重新部署，只有当这个资源真正发生改变的时候，它才会向Activiti使用的数据库创建新的部署。
	这对于很多用例来说，当Spring容器经常重启的情况下（例如 测试），使用它是非常不错的选择。
    </p><p>这里有一个例子：</p><pre class="prettyprint"><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.spring.SpringProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; ...<br>&nbsp; </span><span class="bold"><strong><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"deploymentResources"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"classpath*:/org/activiti/spring/test/autodeployment/autodeploy.*.bpmn20.xml"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br></span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngine"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.spring.ProcessEngineFactoryBean"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/bean&gt;</span></pre></div><p>
	    默认，上面的配置会把所有匹配的资源发布到Activiti引擎的一个单独发布包下。用来检测防止未修改资源重复发布的机制会作用到整个发布包中。
		有时候，这可能不是你想要的。比如，如果你发布了很多流程资源，但是只修改里其中某一个单独的流程定义，
		整个发布包都会被认为变更了，导致整个发布包下的所有流程定义都会被重新发布，
		结果就是每个流程定义都生成了新版本，虽然其中只有一个流程发生了改变。
	</p><p>
		为了定制发布方式，你可以为<code class="literal">SpringProcessEngineConfiguration</code>指定一个额外的参数<code class="literal">deploymentMode</code>。
		这个参数指定了匹配多个资源时的发布处理方式。默认下这个参数支持设置三个值：
	</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><code class="code">default</code>: 把所有资源放在一个单独的发布包中，对这个发布包进行重复检测。
				这是默认值，如果你没有指定参数值，就会使用它。
		</li><li class="listitem"><code class="code">single-resource</code>: 为每个单独的资源创建一个发布包，并对这些发布包进行重复检测。
				你可以单独发布每个流程定义，并在修改流程定义后只创建一个新的流程定义版本。
		</li><li class="listitem"><code class="code">resource-parent-folder</code>: 把放在同一个上级目录下的资源发布在一个单独的发布包中，并对发布包进行重复检测。
				当需要多资源需要创建发布包，但是需要根据共同的文件夹来组合一些资源时，可以使用它。
		</li></ul></div><p>
		这儿有一个例子来演示将<code class="code">deploymentMode</code>参数配置为<code class="code">single-resource</code>的情况：
	</p><pre class="prettyprint"><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.spring.SpringProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; ...<br>&nbsp; </span><span class="emphasis"><em><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"deploymentResources"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"classpath*:/activiti/*.bpmn"</span><span class="pln"> </span><span class="tag">/&gt;</span></em></span><span class="pln"><br>&nbsp; </span><span class="bold"><strong><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"deploymentMode"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"single-resource"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br></span><span class="tag">&lt;/bean&gt;</span></pre><p>
		如果想使用上面三个值之外的参数值，你需要自定义处理发布包的行为。
		你可以创建一个<code class="code">SpringProcessEngineConfiguration</code>的子类，重写<code class="code">getAutoDeploymentStrategy(String deploymentMode)</code>方法。
		这个方法中处理了对应<code class="code">deploymentMode</code>的发布策略。
	</p><div class="section" title="单元测试"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="springUnitTest"></a>单元测试</h2></div></div></div><p>
	当集成Spring时，使用标准的<a class="link" href="#apiUnitTesting" title="单元测试">Activiti测试工具类</a>是非常容易的对业务流程进行测试。
	下面的例子展示了如何在一个典型的基于Spring单元测试测试业务流程：
      </p><pre class="prettyprint"><span class="lit">@RunWith</span><span class="pun">(</span><span class="typ">SpringJUnit4ClassRunner</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">)</span><span class="pln"><br></span><span class="lit">@ContextConfiguration</span><span class="pun">(</span><span class="str">"classpath:org/activiti/spring/test/junit4/springTypicalUsageTest-context.xml"</span><span class="pun">)</span><span class="pln"><br></span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">MyBusinessProcessTest</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Autowired</span><span class="pln"><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">RuntimeService</span><span class="pln"> runtimeService</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Autowired</span><span class="pln"><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">TaskService</span><span class="pln"> taskService</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Autowired</span><span class="pln"><br>&nbsp; </span><span class="lit">@Rule</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">ActivitiRule</span><span class="pln"> activitiSpringRule</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Test</span><span class="pln"><br>&nbsp; </span><span class="lit">@Deployment</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> simpleProcessTest</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"simpleProcess"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">Task</span><span class="pln"> task </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">singleResult</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; assertEquals</span><span class="pun">(</span><span class="str">"My Task"</span><span class="pun">,</span><span class="pln"> task</span><span class="pun">.</span><span class="pln">getName</span><span class="pun">());</span><span class="pln"><br><br>&nbsp; &nbsp; taskService</span><span class="pun">.</span><span class="pln">complete</span><span class="pun">(</span><span class="pln">task</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; assertEquals</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">createProcessInstanceQuery</span><span class="pun">().</span><span class="pln">count</span><span class="pun">());</span><span class="pln"><br><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><p>
	  注意对于这种方式，你需要在Spring配置中（在上文的例子中它是自动注入的）定义一个<span class="emphasis"><em>org.activiti.engine.test.ActivitiRule</em></span>bean
      </p><pre class="prettyprint"><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"activitiRule"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.test.ActivitiRule"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"processEngine"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"processEngine"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><p>
    </p></div><div class="section" title="基于注解的配置"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="spring.enable.activiti.annotation"></a>基于注解的配置</h2></div></div></div><p>
        [试验] <span class="emphasis"><em>@EnableActiviti</em></span>注解相对较新，未来可能会有变更。
    </p><p>
        除了基于XML的配置以外，还可以选择基于注解的方式来配置Spring环境。
		这与使用XML的方法非常相似，除了要使用<span class="emphasis"><em>@Bean</em></span>注解，
		而且配置是使用java编写的。
		它已经可以直接用于Activiti-Spring的集成了：
    </p><p>
        首先介绍（需要Spring 3.0+）的是<span class="emphasis"><em>@EnableActiviti</em></span>注解。
		最简单的用法如下所示：
        </p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="lit">@Configuration</span><span class="pln"><br>&nbsp; </span><span class="lit">@EnableActiviti</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">SimplestConfiguration</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="pun">}</span></pre><p>
        它会创建一个Spring环境，并对Activiti流程引擎进行如下配置
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                默认的内存H2数据库，启用数据库自动升级。
              </p></li><li class="listitem"><p>
                一个简单的 <span class="emphasis"><em>DataSourceTransactionManager</em></span>
              </p></li><li class="listitem"><p>
                一个默认的 <span class="emphasis"><em>SpringJobExecutor</em></span>
              </p></li><li class="listitem"><p>
                自动扫描 <span class="emphasis"><em>processes/</em></span> 目录下的bpmn20.xml文件。
              </p></li></ul></div><p>
          在这样一个环境里，可以直接通过注入操作Activiti引擎：
          </p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="lit">@Autowired</span><span class="pln"><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">ProcessEngine</span><span class="pln"> processEngine</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Autowired</span><span class="pln"><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">RuntimeService</span><span class="pln"> runtimeService</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Autowired</span><span class="pln"><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">TaskService</span><span class="pln"> taskService</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Autowired</span><span class="pln"><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">HistoryService</span><span class="pln"> historyService</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Autowired</span><span class="pln"><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">RepositoryService</span><span class="pln"> repositoryService</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Autowired</span><span class="pln"><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">ManagementService</span><span class="pln"> managementService</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Autowired</span><span class="pln"><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">FormService</span><span class="pln"> formService</span><span class="pun">;</span></pre><p>
    </p><p>
        当然，默认值都可以自定义。比如，如果配置了DataSource，它就会代替默认创建的数据库配置。
		事务管理器，job执行器和其他组件都与之相同。
		比如如下配置：
        </p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="lit">@Configuration</span><span class="pln"><br>&nbsp; </span><span class="lit">@EnableActiviti</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Config</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="lit">@Bean</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">DataSource</span><span class="pln"> dataSource</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">BasicDataSource</span><span class="pln"> basicDataSource </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">BasicDataSource</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; basicDataSource</span><span class="pun">.</span><span class="pln">setUsername</span><span class="pun">(</span><span class="str">"sa"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; basicDataSource</span><span class="pun">.</span><span class="pln">setUrl</span><span class="pun">(</span><span class="str">"jdbc:h2:mem:anotherDatabase"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; basicDataSource</span><span class="pun">.</span><span class="pln">setDefaultAutoCommit</span><span class="pun">(</span><span class="kwd">false</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; basicDataSource</span><span class="pun">.</span><span class="pln">setDriverClassName</span><span class="pun">(</span><span class="pln">org</span><span class="pun">.</span><span class="pln">h2</span><span class="pun">.</span><span class="typ">Driver</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">.</span><span class="pln">getName</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; basicDataSource</span><span class="pun">.</span><span class="pln">setPassword</span><span class="pun">(</span><span class="str">""</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> basicDataSource</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; </span><span class="pun">}</span></pre><p>
        其他数据库会代替默认的。
    </p><p>
        下面介绍了更加复杂的配置。注意<span class="emphasis"><em>AbstractActivitiConfigurer</em></span>用法，
		它暴露了流程引擎的配置，可以用来对它的细节进行详细的配置。
        </p><pre class="prettyprint"><span class="lit">@Configuration</span><span class="pln"><br></span><span class="lit">@EnableActiviti</span><span class="pln"><br></span><span class="lit">@EnableTransactionManagement</span><span class="pun">(</span><span class="pln">proxyTargetClass </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">)</span><span class="pln"><br></span><span class="kwd">class</span><span class="pln"> </span><span class="typ">JPAConfiguration</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="lit">@Bean</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">OpenJpaVendorAdapter</span><span class="pln"> openJpaVendorAdapter</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">OpenJpaVendorAdapter</span><span class="pln"> openJpaVendorAdapter </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">OpenJpaVendorAdapter</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; openJpaVendorAdapter</span><span class="pun">.</span><span class="pln">setDatabasePlatform</span><span class="pun">(</span><span class="pln">H2Dictionary</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">.</span><span class="pln">getName</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> openJpaVendorAdapter</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="lit">@Bean</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">DataSource</span><span class="pln"> dataSource</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">BasicDataSource</span><span class="pln"> basicDataSource </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">BasicDataSource</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; basicDataSource</span><span class="pun">.</span><span class="pln">setUsername</span><span class="pun">(</span><span class="str">"sa"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; basicDataSource</span><span class="pun">.</span><span class="pln">setUrl</span><span class="pun">(</span><span class="str">"jdbc:h2:mem:activiti"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; basicDataSource</span><span class="pun">.</span><span class="pln">setDefaultAutoCommit</span><span class="pun">(</span><span class="kwd">false</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; basicDataSource</span><span class="pun">.</span><span class="pln">setDriverClassName</span><span class="pun">(</span><span class="pln">org</span><span class="pun">.</span><span class="pln">h2</span><span class="pun">.</span><span class="typ">Driver</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">.</span><span class="pln">getName</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; basicDataSource</span><span class="pun">.</span><span class="pln">setPassword</span><span class="pun">(</span><span class="str">""</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> basicDataSource</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="lit">@Bean</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">LocalContainerEntityManagerFactoryBean</span><span class="pln"> entityManagerFactoryBean</span><span class="pun">(</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">OpenJpaVendorAdapter</span><span class="pln"> openJpaVendorAdapter</span><span class="pun">,</span><span class="pln"> </span><span class="typ">DataSource</span><span class="pln"> ds</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">LocalContainerEntityManagerFactoryBean</span><span class="pln"> emf </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">LocalContainerEntityManagerFactoryBean</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; emf</span><span class="pun">.</span><span class="pln">setPersistenceXmlLocation</span><span class="pun">(</span><span class="str">"classpath:/org/activiti/spring/test/jpa/custom-persistence.xml"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; emf</span><span class="pun">.</span><span class="pln">setJpaVendorAdapter</span><span class="pun">(</span><span class="pln">openJpaVendorAdapter</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; emf</span><span class="pun">.</span><span class="pln">setDataSource</span><span class="pun">(</span><span class="pln">ds</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> emf</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="lit">@Bean</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">PlatformTransactionManager</span><span class="pln"> jpaTransactionManager</span><span class="pun">(</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">EntityManagerFactory</span><span class="pln"> entityManagerFactory</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JpaTransactionManager</span><span class="pun">(</span><span class="pln">entityManagerFactory</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="lit">@Bean</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">AbstractActivitiConfigurer</span><span class="pln"> abstractActivitiConfigurer</span><span class="pun">(</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">EntityManagerFactory</span><span class="pln"> emf</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">PlatformTransactionManager</span><span class="pln"> transactionManager</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">AbstractActivitiConfigurer</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> postProcessSpringProcessEngineConfiguration</span><span class="pun">(</span><span class="typ">SpringProcessEngineConfiguration</span><span class="pln"> engine</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; engine</span><span class="pun">.</span><span class="pln">setTransactionManager</span><span class="pun">(</span><span class="pln">transactionManager</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; engine</span><span class="pun">.</span><span class="pln">setJpaEntityManagerFactory</span><span class="pun">(</span><span class="pln">emf</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; engine</span><span class="pun">.</span><span class="pln">setJpaHandleTransaction</span><span class="pun">(</span><span class="kwd">false</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; engine</span><span class="pun">.</span><span class="pln">setJobExecutorActivate</span><span class="pun">(</span><span class="kwd">false</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; engine</span><span class="pun">.</span><span class="pln">setJpaCloseEntityManager</span><span class="pun">(</span><span class="kwd">false</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; engine</span><span class="pun">.</span><span class="pln">setDatabaseSchemaUpdate</span><span class="pun">(</span><span class="typ">ProcessEngineConfiguration</span><span class="pun">.</span><span class="pln">DB_SCHEMA_UPDATE_TRUE</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">};</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">// A random bean</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="lit">@Bean</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">LoanRequestBean</span><span class="pln"> loanRequestBean</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">LoanRequestBean</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="JPA 和 Hibernate 4.2.x"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N10A86"></a>JPA 和 Hibernate 4.2.x</h2></div></div></div><p>
	  在Activiti引擎的serviceTask或listener中使用Hibernate 4.2.x JPA时，需要添加Spring ORM这个额外的依赖。
	  Hibernate 4.1.x及以下版本是不需要的。应该添加如下依赖：
      </p><pre class="prettyprint"><span class="tag">&lt;dependency&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;groupId&gt;</span><span class="pln">org.springframework</span><span class="tag">&lt;/groupId&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;artifactId&gt;</span><span class="pln">spring-orm</span><span class="tag">&lt;/artifactId&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;version&gt;</span><span class="pln">${org.springframework.version}</span><span class="tag">&lt;/version&gt;</span><span class="pln"><br></span><span class="tag">&lt;/dependency&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><p>
    </p></div></div><div class="chapter" title="Chapter&nbsp;6.&nbsp;部署"><div class="titlepage"><div><div><h2 class="title"><a name="chDeployment"></a>Chapter&nbsp;6.&nbsp;部署</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#N10A92">业务文档</a></span></dt><dd><dl><dt><span class="section"><a href="#N10AA6">编程式部署</a></span></dt><dt><span class="section"><a href="#deploymentWithExplorer">通过Activiti Explorer控制台部署</a></span></dt></dl></dd><dt><span class="section"><a href="#N10ACA">外部资源</a></span></dt><dd><dl><dt><span class="section"><a href="#N10ACF">Java类</a></span></dt><dt><span class="section"><a href="#N10ADB">在流程中使用Spring beans</a></span></dt><dt><span class="section"><a href="#N10AED">创建独立应用</a></span></dt></dl></dd><dt><span class="section"><a href="#versioningOfProcessDefinitions">流程定义的版本</a></span></dt><dt><span class="section"><a href="#providingProcessDiagram">提供流程图片</a></span></dt><dt><span class="section"><a href="#generatingProcessDiagram">自动生成流程图片</a></span></dt><dt><span class="section"><a href="#deploymentCategory">类别</a></span></dt></dl></div><div class="section" title="业务文档"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N10A92"></a>业务文档</h2></div></div></div><p>
	为了部署流程，它们不得不包装在一个业务文档中。一个业务文档是Activiti引擎部署的单元。一个业务文档相当与一个压缩文件，它包含BPMN2.0流程，任务表单，规则和其他任意类型的文件。
	大体上，业务文档是包含命名资源的容器。
    </p><p>当一个业务文档被部署，它将会自动扫描以 <code class="literal">.bpmn20.xml</code> 或者<code class="literal">.bpmn</code>作为扩展名的BPMN文件。每个那样的文件都将会被解析并且可能会包含多个流程定义。
    </p><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>
		业务归档中的Java类<span class="bold"><strong>将不能够添加到类路径下</strong></span>。为了能够让流程运行，必须把存在于业务归档程中的流程定义使用的所有自定义的类（例如：Java服务任务或者实现事件的监听器）放在activiti引擎的类路径下：
        </p></div><div class="section" title="编程式部署"><div class="titlepage"><div><div><h3 class="title"><a name="N10AA6"></a>编程式部署</h3></div></div></div><p>通过一个压缩文件（支持Zip和Bar）部署业务归档，它看起来像这样：
	    </p><pre class="prettyprint"><span class="typ">String</span><span class="pln"> barFileName </span><span class="pun">=</span><span class="pln"> </span><span class="str">"path/to/process-one.bar"</span><span class="pun">;</span><span class="pln"><br></span><span class="typ">ZipInputStream</span><span class="pln"> inputStream </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ZipInputStream</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FileInputStream</span><span class="pun">(</span><span class="pln">barFileName</span><span class="pun">));</span><span class="pln"><br><br>repositoryService</span><span class="pun">.</span><span class="pln">createDeployment</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">name</span><span class="pun">(</span><span class="str">"process-one.bar"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">addZipInputStream</span><span class="pun">(</span><span class="pln">inputStream</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">deploy</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		它也可以通过一个独立资源（例如bpmn，xml等）构建部署。
		详细信息请查看javadocs。
		</p></div><div class="section" title="通过Activiti Explorer控制台部署"><div class="titlepage"><div><div><h3 class="title"><a name="deploymentWithExplorer"></a>通过Activiti Explorer控制台部署</h3></div></div></div><p>Activiti web控制台允许你通过web界面的用户接口上传一个bar格式的压缩文件（或者一个<code class="literal">bpmn20.xml</code>格式的文件）。
		选择<span class="emphasis"><em>Management 标签</em></span> 和 点击 <span class="emphasis"><em>Deployment</em></span>:
        </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/deployment_003.png" align="middle"></div><p>
        现在将会有一个弹出窗口允许你从电脑上面选择一个文件，或者你可以简单的拖拽到指定的区域（如果你的浏览器支持）。
        </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/deployment.png" align="middle"></div><p>
      </p></div></div><div class="section" title="外部资源"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N10ACA"></a>外部资源</h2></div></div></div><p>流程定义保存在Activiti所支持的数据库中。当使用服务任务、执行监听器或者从Activiti配置文件中配置的Spring beans时，流程定义能够引用这些委托类。
	这些类或者Spring配置文件对于所有流程引擎中可能执行的流程定义必须是可用的。
    </p><div class="section" title="Java类"><div class="titlepage"><div><div><h3 class="title"><a name="N10ACF"></a>Java类</h3></div></div></div><p>
	  当流程实例被启动的时候，在流程中被使用的所有自定义类（例如：服务任务中使用的JavaDelegates、事件监听器、任务监听器,...）应该存在与流程引擎的类路径下。</p><p>然后，在部署业务文档时，这些类不必都存在于类路径下。当使用Ant部署一个新的业务文档时，这意味着你的委托类不必存在与类路径下。
      </p><p>
	  当你使用示例设置并添加你自定义的类，你应该添加包含自定义类的jar包到activiti-explorer控制台或者activiti-rest 的webapp lib文件夹中。以及不要忽略包含你自定义类的依赖关系（如果有）。
	  另外，你还可以包含你自己的依赖添加到你的Tomcat容器的安装目录中的<code class="literal">${tomcat.home}/lib</code>。
      </p></div><div class="section" title="在流程中使用Spring beans"><div class="titlepage"><div><div><h3 class="title"><a name="N10ADB"></a>在流程中使用Spring beans</h3></div></div></div><p>当表达式或者脚本使用Spring beans时，这些beans对于引擎执行流程定义时必须是可用的。如果你将要构建你自己的web应用并且按照<a class="link" href="#springintegration" title="Chapter&nbsp;5.&nbsp;Spring集成">Spring集成这一章</a>中描述那样在你的应用上下文配置流程引擎，这个看上去非常的简单。但是要记住，如果你也在使用 Activiti rest web应用，那么也应该更新 Activiti rest web应用的上下文。
	  你可以把在<code class="literal">activiti-rest/lib/activiti-cfg.jar</code> 文件中的<code class="literal">activiti.cfg.xml</code>替换成你的Spring上下文配置的<code class="literal">activiti-context.xml</code>文件。</p></div><div class="section" title="创建独立应用"><div class="titlepage"><div><div><h3 class="title"><a name="N10AED"></a>创建独立应用</h3></div></div></div><p>你可以考虑把Activiti rest web 应用加入到你的web应用之中，因此，就仅仅只需要配置一个 <code class="literal">ProcessEngine</code>，从而不用确保所有的流程引擎的所有委托类在类路径下面并且是否使用正确的spring配置。
      </p></div></div><div class="section" title="流程定义的版本"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="versioningOfProcessDefinitions"></a>流程定义的版本</h2></div></div></div><p>BPMN中并没有版本的概念，没有版本也是不错的，因为可执行的BPMN流程作为你开发项目的一部分存在版本控制系统的知识库中（例如 SVN,Git 或者Mercurial）。
	而在Activiti中，流程定义的版本是在部署时创建的。在部署的时候，流程定义被存储到Activiti使用的数据库之前，Activiti讲会自动给 <code class="literal">流程定义</code> 分配一个版本号。
    </p><p>对于业务文档中每一个的流程定义，都会通过下列部署执行初始化属性<code class="literal">key</code>, <code class="literal">version</code>, <code class="literal">name</code> 和 <code class="literal">id</code>:
    </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
	  XML文件中流程定义（流程模型）的 <code class="literal">id</code>属性被当做是流程定义的 <code class="literal">key</code>属性。
	 </p></li><li class="listitem"><p>
		XML文件中的流程模型的<code class="literal">name</code> 属性被当做是流程定义的 <code class="literal">name</code> 属性。如果该name属性并没有指定，那么id属性被当做是name。
      </p></li><li class="listitem"><p>带有特定key的流程定义在第一次部署的时候，将会自动分配版本号为1，对于之后部署相同key的流程定义时候，这次部署的版本号将会设置为比当前最大的版本号大1的值。该key属性被用来区别不同的流程定义。
	  </p></li><li class="listitem"><p>
		  流程定义中的id属性被设置为 {processDefinitionKey}:{processDefinitionVersion}:{generated-id},
          这里的<code class="literal">generated-id</code>是一个唯一的数字被添加，用于确保在集群环境中缓存的流程定义的唯一性。
        </p></li></ul></div><p>
		举个流程的例子
</p><pre class="prettyprint"><span class="tag">&lt;definitions</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myDefinitions"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myProcess"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"My important process"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; ...</span></pre><p>当部署了这个流程定义之后，在数据库中的流程定义看起来像这样：
      </p><div class="table"><a name="N10B2D"></a><p class="title"><b>Table&nbsp;6.1.&nbsp;</b></p><div class="table-contents"><table summary="" border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th>id</th><th>key</th><th>name</th><th>version</th></tr></thead><tbody><tr><td>myProcess:1:676</td><td>myProcess</td><td>My important process</td><td>1</td></tr></tbody></table></div></div><p><br class="table-break">假设我们现在部署用一个流程的最新版本号（例如 改变用户任务），但是流程定义的<code class="literal">id</code>保持不变。
	  流程定义表将包含以下列表信息：
       </p><div class="table"><a name="N10B49"></a><p class="title"><b>Table&nbsp;6.2.&nbsp;</b></p><div class="table-contents"><table summary="" border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th>id</th><th>key</th><th>name</th><th>version</th></tr></thead><tbody><tr><td>myProcess:1:676</td><td>myProcess</td><td>My important process</td><td>1</td></tr><tr><td>myProcess:2:870</td><td>myProcess</td><td>My important process</td><td>2</td></tr></tbody></table></div></div><p><br class="table-break">
	  当 <code class="literal">runtimeService.startProcessInstanceByKey("myProcess")</code>方法被调用时，它将会使用流程定义版本号为2的，因为这是最新版本的流程定义。可以说每次流程定义创建流程实例时，都会默认使用最新版本的流程定义。
	  </p><p>
	   我们应该创建第二个流程，在Activiti中，如下,定义并且部署它，该流程定义会添加到流程定义表中。
    </p><pre class="prettyprint"><span class="tag">&lt;definitions</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myNewDefinitions"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myNewProcess"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"My important process"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; ...</span></pre><p>
    这个表结构看起来像这样:
  </p><div class="table"><a name="N10B74"></a><p class="title"><b>Table&nbsp;6.3.&nbsp;</b></p><div class="table-contents"><table summary="" border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th>id</th><th>key</th><th>name</th><th>version</th></tr></thead><tbody><tr><td>myProcess:1:676</td><td>myProcess</td><td>My important process</td><td>1</td></tr><tr><td>myProcess:2:870</td><td>myProcess</td><td>My important process</td><td>2</td></tr><tr><td>myNewProcess:1:1033</td><td>myNewProcess</td><td>My important process</td><td>1</td></tr></tbody></table></div></div><br class="table-break"><p>
	注意：为何新流程的key与我们的第一个流程是不同的？尽管流程定义的名称是相同的（当然，我们应该也是可以改变这一点的），Activiti仅仅只考虑<code class="literal">id</code>属性判断流程。因此，新的流程定义部署的版本号为1。
  </p></div><div class="section" title="提供流程图片"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="providingProcessDiagram"></a>提供流程图片</h2></div></div></div><p>
	  流程定义的流程图可以被添加到部署中，该流程图将会持久化到Activiti所使用的数据库中并且可以通过Activiti的API进行访问。该流程图也可以被用来在Activiti Explorer控制台中的流程中进行显示。
    </p><p>
	  如果在我们的类路径下面有一个流程，<code class="literal">org/activiti/expenseProcess.bpmn20.xml</code> ，该流程定义有一个流程key 'expense'。
	 以下遵循流程定义图片的命名规范（按照这个特地顺序）：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
		    如果在部署时一个图片资源已经存在，它是BPMN2.0的XML文件名后面是流程定义的key并且是一个图片的后缀。那么该图片将被使用。在我们的例子中，
		    这应该是 <code class="literal">org/activiti/expenseProcess.expense.png</code>（或者 jpg/gif）。如果你在一个BPMN2.0 XML文件中定义多个流程定义图片，这种方式更有意义。每个流程定义图片的文件名中都将会有一个流程定义key。
          </p></li><li class="listitem"><p>
		    如果并没有这样的图片存在，部署的时候寻找与匹配BPMN2.0 XML 文件的名称的图片资源。在我们的例子中，这应该是<code class="literal">org/activiti/expenseProcess.png</code>.
			注意：这意味着在同一个BPMN2.0 XML文件夹中的<span class="bold"><strong>每个流程定义</strong></span>都会有相同的流程定义图片。因此，在每一个BPMN 2.0 XML文件夹中仅仅只有一个流程定义，这绝对是不会有问题的。
          </p></li></ul></div><p>
     </p><p>
     当使用编程式的部署方式：
      </p><pre class="prettyprint"><span class="pln">repositoryService</span><span class="pun">.</span><span class="pln">createDeployment</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">name</span><span class="pun">(</span><span class="str">"expense-process.bar"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">addClasspathResource</span><span class="pun">(</span><span class="str">"org/activiti/expenseProcess.bpmn20.xml"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">addClasspathResource</span><span class="pun">(</span><span class="str">"org/activiti/expenseProcess.png"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">deploy</span><span class="pun">();</span></pre><p>
		接下来，可以通过API来获取流程定义图片资源：
       </p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="typ">ProcessDefinition</span><span class="pln"> processDefinition </span><span class="pun">=</span><span class="pln"> repositoryService</span><span class="pun">.</span><span class="pln">createProcessDefinitionQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">.</span><span class="pln">processDefinitionKey</span><span class="pun">(</span><span class="str">"expense"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">.</span><span class="pln">singleResult</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; </span><span class="bold"><strong><span class="typ">String</span><span class="pln"> diagramResourceName </span><span class="pun">=</span><span class="pln"> processDefinition</span><span class="pun">.</span><span class="pln">getDiagramResourceName</span><span class="pun">();</span></strong></span><span class="pln"><br>&nbsp; </span><span class="typ">InputStream</span><span class="pln"> imageStream </span><span class="pun">=</span><span class="pln"> repositoryService</span><span class="pun">.</span><span class="pln">getResourceAsStream</span><span class="pun">(</span><span class="pln">processDefinition</span><span class="pun">.</span><span class="pln">getDeploymentId</span><span class="pun">(),</span><span class="pln"> diagramResourceName</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
     </p></div><div class="section" title="自动生成流程图片"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="generatingProcessDiagram"></a>自动生成流程图片</h2></div></div></div><p>在部署的情况下没有提供图片，在 <a class="link" href="#providingProcessDiagram" title="提供流程图片">上一节</a>中描述,如果流程定义中包含必要的'图像交换'信息时，Activiti流程引擎竟会自动生成一个图像。
    </p><p>
	  该资源可以按照部署时<a class="link" href="#providingProcessDiagram" title="提供流程图片">
      提供流程图片</a>完全相同的方式获取。
           </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/deployment_002.png" align="middle"></div><p>
    </p><p>
		如果，因为某种原因，在部署的时候，并不需要或者不必要生成流程定义图片，那么就需要在流程引擎配置的属性中使用<code class="literal">isCreateDiagramOnDeploy</code>：
         </p><pre class="prettyprint"><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"createDiagramOnDeploy"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
    现在就不会生成流程定义图片。
    </p></div><div class="section" title="类别"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="deploymentCategory"></a>类别</h2></div></div></div><p>部署和流程定义都是用户定义的类别。流程定义类别在BPMN文件中属性的初始化的值<code class="literal">&lt;definitions ... targetNamespace="yourCategory" ...</code>
     </p><p>部署类别是可以直接使用API进行指定的看起来想这样：</p><pre class="prettyprint"><span class="pln">repositoryService<br>&nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">createDeployment</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">category</span><span class="pun">(</span><span class="str">"yourCategory"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">deploy</span><span class="pun">();</span></pre></div></div><div class="chapter" title="Chapter&nbsp;7.&nbsp;BPMN 2.0介绍"><div class="titlepage"><div><div><h2 class="title"><a name="bpmn20"></a>Chapter&nbsp;7.&nbsp;BPMN 2.0介绍</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#whatIsBpmn">啥是BPMN？</a></span></dt><dt><span class="section"><a href="#bpmnDefiningProcess">定义一个流程</a></span></dt><dt><span class="section"><a href="#10minutetutorial">快速起步：10分钟教程</a></span></dt><dd><dl><dt><span class="section"><a href="#bpmn10MinuteTutorialPrerequisites">前提</a></span></dt><dt><span class="section"><a href="#bpmn10MinuteTutorialGoal">目标</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleUseCase">用例</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleDiagram">流程图</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleXml">XML内容</a></span></dt><dt><span class="section"><a href="#bpmnFirstExamplStartProcess">启动一个流程实例</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleCandidateList">任务列表</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleClaimTask">领取任务</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleCompleteTask">完成任务</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleEndingProcess">结束流程</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleCode">代码总结</a></span></dt><dt><span class="section"><a href="#bpmnFirstExampleFutureEnhancements">更多思考</a></span></dt></dl></dd></dl></div><div class="section" title="啥是BPMN？"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="whatIsBpmn"></a>啥是BPMN？</h2></div></div></div><p>
		  参考我们的<a class="ulink" href="http://activiti.org/faq.html#WhatIsBpmn20" target="_top">FAQ中的BPMN 2.0部分</a>。
		</p></div><div class="section" title="定义一个流程"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="bpmnDefiningProcess"></a>定义一个流程</h2></div></div></div><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>
		  文章假设你在使用<a class="ulink" href="http://eclipse.org/" target="_top">Eclipse IDE</a>来创建和编辑文件。
		  不过，其中只用到了Eclipse很少的特性。你可以使用喜欢的任何工具来创建包含BPMN 2.0的xml文件。
      </p></div><p>
		  创建一个新的XML文件（<span class="emphasis"><em>右击任何项目选择“新建”-&gt;“其他”-&gt;“XML-XML文件”</em></span>）并命名。
		  确认文件后缀为<span class="bold"><strong>ends with .bpmn20.xml 或 .bpmn</strong></span>，
		  否则引擎无法发布。
		  </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/new.png" align="middle"></div><p>
		</p><p>
		  BPMN 2.0根节点是<code class="literal">definitions</code>节点。
		  这个元素中，可以定义多个流程定义（不过我们建议每个文件只包含一个流程定义，
		  可以简化开发过程中的维护难度）。
		  一个空的流程定义看起来像下面这样。注意，<code class="literal">definitions</code>元素
		  最少也要包含<code class="literal">xmlns</code> 和 <code class="literal">targetNamespace</code>的声明。
		  <code class="literal">targetNamespace</code>可以是任意值，它用来对流程实例进行分类。
		  </p><pre class="prettyprint"><span class="tag">&lt;definitions</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/BPMN/20100524/MODEL"</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns:activiti</span><span class="pun">=</span><span class="atv">"http://activiti.org/bpmn"</span><span class="pln"><br>&nbsp; </span><span class="atn">targetNamespace</span><span class="pun">=</span><span class="atv">"Examples"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myProcess"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"My First Process"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; ..<br>&nbsp; </span><span class="tag">&lt;/process&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/definitions&gt;</span></pre><p>
		</p><p>
		  你也可以选择添加线上的BPMN 2.0格式位置，
		  下面是ecilpse中的xml配置。
		  </p><pre class="prettyprint"><span class="pln">xmlns</span><span class="pun">:</span><span class="pln">xsi</span><span class="pun">=</span><span class="str">"http://www.w3.org/2001/XMLSchema-instance"</span><span class="pln"><br>xsi</span><span class="pun">:</span><span class="pln">schemaLocation</span><span class="pun">=</span><span class="str">"http://www.omg.org/spec/BPMN/20100524/MODEL<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd</span></pre><p>
		</p><p>
		  <code class="literal">process</code>元素有两个属性：
		  </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
		        <span class="bold"><strong>id</strong></span>：这个属性是<span class="bold"><strong>必须的</strong></span>，
				它对应着Activiti<code class="literal">
		        ProcessDefinition</code>对象的<span class="bold"><strong>key</strong></span>属性。
				‘<code class="literal">id</code>可以用来启动流程定义的流程实例，
				通过<code class="literal">RuntimeService</code>的<code class="literal">startProcessInstanceByKey</code>方法。
				这个方法会一直使用<span class="bold"><strong>最新发布版本</strong></span>的流程定义(译者注：实际中一般都使用这种方式启动流程)。
		        </p><pre class="prettyprint"><span class="typ">ProcessInstance</span><span class="pln"> processInstance </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"myProcess"</span><span class="pun">);</span></pre><p>
		        注意，它和<code class="literal">startProcessInstanceById</code>方法不同。
				这个方法期望使用Activiti引擎在发布时自动生成的id。，
				可以通过调用<code class="literal">processDefinition.getId()</code>方法获得这个值。
				生成的id的格式为<span class="bold"><strong>'key:version'</strong></span>，
				最大长度限制为<span class="bold"><strong>64个字符</strong></span>，
				如果你在启动时抛出了一个<code class="literal">ActivitiException</code>，说明生成的id太长了，
				需要限制流程的<span class="emphasis"><em>key</em></span>的长度。
		      </p></li><li class="listitem"><p>
            <span class="bold"><strong>name</strong></span>：这个属性是<span class="bold"><strong>可选的</strong></span>，
			对应<code class="literal">ProcessDefinition</code>的<span class="emphasis"><em>name</em></span>属性。
			引擎自己不会使用这个属性，它可以用来在用户接口显示便于阅读的名称。
          </p></li></ul></div><p>
		</p></div><div class="section" title="快速起步：10分钟教程"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="10minutetutorial"></a>快速起步：10分钟教程</h2></div></div></div><p>
	  这张我们会演示一个（非常简单）的业务流程，我们会通过它介绍
	  一些基本的Activiti概念和API。
    </p><div class="section" title="前提"><div class="titlepage"><div><div><h3 class="title"><a name="bpmn10MinuteTutorialPrerequisites"></a>前提</h3></div></div></div><p>
	    教程假设你已经<a class="link" href="#demo.setup.one.minute.version" title="一分钟入门">能安装并运行Activiti demo</a>，
		并且你使用了独立运行的H2服务器。修改<code class="literal">db.properties</code>，设置其中的
		<code class="literal">jdbc.url=jdbc:h2:tcp://localhost/activiti</code>，然后根据<a class="ulink" href="http://www.h2database.com/html/tutorial.html#using_server" target="_top">H2的文档</a>启动独立服务器。
      </p></div><div class="section" title="目标"><div class="titlepage"><div><div><h3 class="title"><a name="bpmn10MinuteTutorialGoal"></a>目标</h3></div></div></div><p>
	    教程的目标是学习Activiti和一些基本的BPMN 2.0概念。
		最终结果是一个简单的Java SE程序可以发布流程定义，
		通过Activiti引擎API操作流程。
		我们也会使用一些Activiti相关的工具。当然，我们在教程中所学的
		也可以用于你构建自己的业务流程web应用。
      </p></div><div class="section" title="用例"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnFirstExampleUseCase"></a>用例</h3></div></div></div><p>
				用例很直接：我们有一个公司，就叫BPMCorp。
				在BPMCopr中，每个月都要给公司领导一个金融报表。
				由会计部门负责。
				当报表完成时，一个上级领导需要审批文档，
				然后才能发给所有领导。
      </p></div><div class="section" title="流程图"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnFirstExampleDiagram"></a>流程图</h3></div></div></div><p>
				上面描述的业务流程可以用<a class="link" href="#activitiDesigner" title="Chapter&nbsp;12.&nbsp;Eclipse Designer">Activiti Designer</a>
				进行可视化设计。
				然后，为了这个教程，我们会手工编写XML，这样可以学到更多知识细节。
				我们流程的图形化BPMN 2.0标记看起来像这样：
			  </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/financial.png" align="middle"></div><p>
		我们看到有<a class="link" href="#bpmnNoneStartEvent" title="空开始事件">空开始事件</a>（左侧圆圈）,
		后面是两个<a class="link" href="#bpmnUserTask" title="用户任务">用户任务</a>：
        <span class="emphasis"><em>“制作月度财报”</em></span>和
        <span class="emphasis"><em>“验证月度财报”</em></span>，最后是
        <a class="link" href="#bpmnNoneEndEvent" title="空结束事件">空结束事件</a>（右侧粗线圆圈）。
      </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnFirstExampleXml"></a>XML内容</h3></div></div></div><p>
	    业务流程的XML内容（<span class="emphasis"><em>FinancialReportProcess.bpmn20.xml</em></span>）如下所示：
		很容易找到流程的主要元素（点击链接可以了解BPMN 2.0结构的详细信息）：
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <a class="link" href="#bpmnNoneStartEvent" title="空开始事件">（空）开始事件</a>
			  是我们流程的<span class="emphasis"><em>入口</em></span>。
            </p></li><li class="listitem"><p>
			  <a class="link" href="#bpmnUserTask" title="用户任务">用户任务</a>是流程中与操作者相关的任务声明。
			  注意第一个任务分配给<span class="emphasis"><em>accountancy</em></span>组，
			  第二个任务分配给<span class="emphasis"><em>management</em></span>组。
			  参考<a class="link" href="#bpmnUserTaskAssignment" title="用户分配">用户任务分配章节</a>
			  了解更多关于用户任务分配人员和群组的问题。
            </p></li><li class="listitem"><p>
			  当流程达到<a class="link" href="#bpmnNoneEndEvent" title="空结束事件">空结束事件</a>就会结束。
            </p></li><li class="listitem"><p>
			  这些元素都使用<a class="link" href="#bpmnSequenceFlow" title="顺序流">连线</a>连接。
			  这些连线拥有<code class="literal">source</code> 和 <code class="literal">target</code>属性，
			  定义了连线的<span class="emphasis"><em>方向</em></span>。
            </p></li></ul></div><p>
        </p><pre class="prettyprint"><span class="tag">&lt;definitions</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"definitions"</span><span class="pln"><br>&nbsp; </span><span class="atn">targetNamespace</span><span class="pun">=</span><span class="atv">"http://activiti.org/bpmn20"</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns:activiti</span><span class="pun">=</span><span class="atv">"http://activiti.org/bpmn"</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/BPMN/20100524/MODEL"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"financialReport"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Monthly financial report reminder process"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'flow1'</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">'theStart'</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">'writeReportTask'</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"writeReportTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Write monthly financial report"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;documentation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Write monthly financial report for publication to shareholders.<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/documentation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;potentialOwner&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;formalExpression&gt;</span><span class="pln">accountancy</span><span class="tag">&lt;/formalExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/potentialOwner&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/userTask&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'flow2'</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">'writeReportTask'</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">'verifyReportTask'</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"verifyReportTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Verify monthly financial report"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;documentation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Verify monthly financial report composed by the accountancy department.<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; This financial report is going to be sent to all the company shareholders.<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/documentation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;potentialOwner&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;formalExpression&gt;</span><span class="pln">management</span><span class="tag">&lt;/formalExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/potentialOwner&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/userTask&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'flow3'</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">'verifyReportTask'</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">'theEnd'</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/process&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/definitions&gt;</span></pre><p>
      </p></div><div class="section" title="启动一个流程实例"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnFirstExamplStartProcess"></a>启动一个流程实例</h3></div></div></div><p>
	    现在我们创建好了业务流程的<span class="bold"><strong>流程定义</strong></span>。
		有了这个流程定义，我们可以创建<span class="bold"><strong>流程实例</strong></span>了。
		这时，一个流程实例对应了特定月度财报的创建和审批。
		所有流程实例都共享同一个流程定义。
      </p><p>
	    为了使用流程定义创建流程实例，
		首先要<span class="bold"><strong>发布</strong></span>业务流程，
		这意味着两方面：
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
			  流程定义会保存到持久化的数据存储里，
			  是为你的Activiti引擎特别配置。所以部署好你的业务流程，
			  我们就能确认引擎重启后还能找到流程定义。
            </p></li><li class="listitem"><p>
			  BPMN 2.0流程文件会解析成内存对象模型，
			  可以通过Activiti API操作。
            </p></li></ul></div><p>
		可以通过<a class="link" href="#chDeployment" title="Chapter&nbsp;6.&nbsp;部署">发布章节</a>获得关于发布的更多信息。
      </p><p>
	    就像章节里描述的一样，有很多种方式可以进行发布。
		一种方式是通过下面的API。注意所有与Activiti引擎的交互都是通过<span class="emphasis"><em>services</em></span>。
        </p><pre class="prettyprint"><span class="typ">Deployment</span><span class="pln"> deployment </span><span class="pun">=</span><span class="pln"> repositoryService</span><span class="pun">.</span><span class="pln">createDeployment</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">addClasspathResource</span><span class="pun">(</span><span class="str">"FinancialReportProcess.bpmn20.xml"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">deploy</span><span class="pun">();</span></pre><p>
      </p><p>
	    现在我们可以启动一个新流程实例，
		使用我们定义在流程定义里的<code class="literal">id</code>（对应XML文件中的process元素）。
		注意这里的<code class="literal">id</code>对于Activiti来说，
		应该叫做<span class="bold"><strong>key</strong></span>（译者注：一般在流程模型中使用的ID，在Activiti中都是Key，比如任务ID等...）。
        </p><pre class="prettyprint"><span class="typ">ProcessInstance</span><span class="pln"> processInstance </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"financialReport"</span><span class="pun">);</span></pre><p>
		这会创建一个流程实例，首先进入开始事件。
		开始事件之后，它会沿着所有的外出连线（这里只有一条）执行，
		到达第一个任务（“制作月度财报”）。
		Activiti会把一个任务保存到数据库里。
		这时，分配到这个任务的用户或群组会被解析，也会保存到数据库里。
		需要注意，Activiti引擎会继续执行流程的环节，除非遇到一个
		<span class="emphasis"><em>等待状态</em></span>，比如用户任务。
		在等待状态下，当前的流程实例的状态会保存到数据库中。
		直到用户决定完成任务才能改变这个状态。这时，引擎会继续执行，
		直到遇到下一个等待状态，或流程结束。
		如果中间引擎重启或崩溃，
		流程状态也会安全的保存在数据库里。
      </p><p>
	    任务创建之后，<code class="literal">startProcessInstanceByKey</code>会在到达用户任务
		这个<span class="emphasis"><em>等待状态</em></span>之后才会返回。这时，任务分配给了一个组，
		这意味着这个组是执行这个任务的<span class="bold"><strong>候选</strong></span>组。
      </p><p>
	    我们现在把所有东西都放在一起，来创建一个简单的java程序。
		创建一个eclipse项目，把Activiti的jar和依赖放到classpath下。
		（这些都可以在Activiti发布包的<span class="emphasis"><em>libs</em></span>目录下找到）。
		在调用Activiti服务之前，我们必须构造一个<code class="literal">ProcessEngine</code>，
		它可以让我们访问服务。这里我们使用<span class="emphasis"><em>'单独运行'</em></span>的配置，
		这会使用demo安装时的数据库来构建<code class="literal">ProcessEngine</code>。
      </p><p>
	    你可以在<a class="ulink" href="http://www.mossle.com/docs/activiti/images/FinancialReportProcess.bpmn20.xml" target="_top">这里</a>下载流程定义XML。
		这个文件包含了上面介绍的XML，也包含了必须的BPMN<a class="link" href="#generatingProcessDiagram" title="自动生成流程图片">图像信息</a>
		以便在Activiti工具中能编辑流程。
      </p><p>
        </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="com">// Create Activiti process engine</span><span class="pln"><br>&nbsp; </span><span class="typ">ProcessEngine</span><span class="pln"> processEngine </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ProcessEngineConfiguration</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">createStandaloneProcessEngineConfiguration</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">buildProcessEngine</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; </span><span class="com">// Get Activiti services</span><span class="pln"><br>&nbsp; </span><span class="typ">RepositoryService</span><span class="pln"> repositoryService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getRepositoryService</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="typ">RuntimeService</span><span class="pln"> runtimeService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getRuntimeService</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; </span><span class="com">// Deploy the process definition</span><span class="pln"><br>&nbsp; repositoryService</span><span class="pun">.</span><span class="pln">createDeployment</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">addClasspathResource</span><span class="pun">(</span><span class="str">"FinancialReportProcess.bpmn20.xml"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">deploy</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; </span><span class="com">// Start a process instance</span><span class="pln"><br>&nbsp; runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"financialReport"</span><span class="pun">);</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div><div class="section" title="任务列表"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnFirstExampleCandidateList"></a>任务列表</h3></div></div></div><p>
	    我们现在可以通过<code class="literal">TaskService</code>来获得任务了，添加以下逻辑：
        </p><pre class="prettyprint"><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Task</span><span class="pun">&gt;</span><span class="pln"> tasks </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">taskCandidateUser</span><span class="pun">(</span><span class="str">"kermit"</span><span class="pun">).</span><span class="pln">list</span><span class="pun">();</span></pre><p>
        注意我们传入的用户必须是<span class="emphasis"><em>accountancy</em></span>组的一个成员，
		要和流程定义中向对应：
        </p><pre class="prettyprint"><span class="tag">&lt;potentialOwner&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;formalExpression&gt;</span><span class="bold"><strong><span class="pln">accountancy</span></strong></span><span class="tag">&lt;/formalExpression&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/resourceAssignmentExpression&gt;</span><span class="pln"><br></span><span class="tag">&lt;/potentialOwner&gt;</span></pre><p>

		我们也可以使用群组名称，通过任务查询API来获得相关的结果。
		现在可以在代码中添加如下逻辑：
         </p><pre class="prettyprint"><span class="typ">TaskService</span><span class="pln"> taskService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getTaskService</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Task</span><span class="pun">&gt;</span><span class="pln"> tasks </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">taskCandidateGroup</span><span class="pun">(</span><span class="str">"accountancy"</span><span class="pun">).</span><span class="pln">list</span><span class="pun">();</span></pre><p>
</p><p>
	    因为我们配置的<code class="literal">ProcessEngine</code>使用了与demo相同的数据，
		我们可以登录到<a class="ulink" href="http://localhost:8080/activiti-explorer/" target="_top">Activiti Explorer</a>。
		默认，<span class="emphasis"><em>accountancy（会计）</em></span>组里没有任何人。使用kermit/kermit登录，点击组，并创建一个新组。
		然后点击用户，把组分配给fozzie。现在使用fozzie/fozzie登录，现在我们就可以启动我们的业务流程了，
		选择<span class="emphasis"><em>Processes</em></span>页，在<span class="emphasis"><em>'月度财报'</em></span>的<span class="emphasis"><em>'操作'</em></span>列
		点击<span class="emphasis"><em>'启动流程'</em></span>。

        </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_035.png" align="middle"></div><p>

		和上面介绍的那样，流程会执行到第一个用户任务。因为我们以kermit登录，
		在启动流程实例之后，就可以看到有了一个新的待领任务。
		选择<span class="emphasis"><em>任务</em></span>页来查看这条新任务。
		注意即使流程被其他人启动，任务还是会被会计组里的所有人作为一个候选任务看到。

        </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_037.png" align="middle"></div><p>

      </p></div><div class="section" title="领取任务"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnFirstExampleClaimTask"></a>领取任务</h3></div></div></div><p>
	    现在一个会计要<span class="bold"><strong>认领这个任务</strong></span>。
		认领以后，这个用户就会成为任务的<span class="bold"><strong>执行人</strong></span> ，
		任务会从会计组的其他成员的任务列表中消失。
		认领任务的代码如下所示：
        </p><pre class="prettyprint"><span class="pln">taskService</span><span class="pun">.</span><span class="pln">claim</span><span class="pun">(</span><span class="pln">task</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">(),</span><span class="pln"> </span><span class="str">"fozzie"</span><span class="pun">);</span></pre><p>
        任务会进入<span class="bold"><strong>认领任务人的个人任务列表</strong></span>中。
        </p><pre class="prettyprint"><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Task</span><span class="pun">&gt;</span><span class="pln"> tasks </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">taskAssignee</span><span class="pun">(</span><span class="str">"fozzie"</span><span class="pun">).</span><span class="pln">list</span><span class="pun">();</span></pre><p>
      </p><p>
	    在Activiti Explorer UI中，点击<span class="emphasis"><em>认领</em></span>按钮，会执行相同的操作。
		任务会移动到登录用户的个人任务列表。
		你也会看到任务的执行人已经变成当前登陆的用户。

       </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_045.png" align="middle"></div><p>
      </p></div><div class="section" title="完成任务"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnFirstExampleCompleteTask"></a>完成任务</h3></div></div></div><p>
	    现在会计可以开始进行财报的工作了。报告完成后，
		他可以<span class="bold"><strong>完成任务</strong></span>，
		意味着任务所需的所有工作都完成了。
        </p><pre class="prettyprint"><span class="pln">taskService</span><span class="pun">.</span><span class="pln">complete</span><span class="pun">(</span><span class="pln">task</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">());</span></pre><p>
      </p><p>
	    对于Activiti引擎，需要一个外部信息来让流程实例继续执行。
		任务会把自己从运行库中删除。
		流程会沿着单独一个外出连线执行，移动到第二个任务
		（<span class="emphasis"><em>'审批报告'</em></span>）。
		与第一个任务相同的机制会使用到第二个任务上，
		不同的是任务是分配给
		<span class="emphasis"><em>management</em></span>组。
      </p><p>
	    在demo中，完成任务是通过点击任务列表中的<span class="emphasis"><em>完成</em></span>按钮。
		因为Fozzie不是会计，我们先从Activiti Explorer注销
		然后使用<span class="emphasis"><em>kermit</em></span>登陆（他是经理）。
		第二个任务会进入未分配任务列表。
      </p></div><div class="section" title="结束流程"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnFirstExampleEndingProcess"></a>结束流程</h3></div></div></div><p>
	    审批任务可以像之前介绍的一样查询和领取。
		完成第二个任务会让流程执行到结束事件，就会结束流程实例。
		流程实例和所有相关的运行数据都会从数据库中删除。
      </p><p>
	    登录Activiti Explorer就可以进行验证，
		可以看到保存流程运行数据的表中已经没有数据了。

         </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_004.png" align="middle"></div><p>
      </p><p>
	    通过程序，你也可以使用<code class="literal">historyService</code>判断流程已经结束了。
        </p><pre class="prettyprint"><span class="typ">HistoryService</span><span class="pln"> historyService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getHistoryService</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">HistoricProcessInstance</span><span class="pln"> historicProcessInstance </span><span class="pun">=</span><span class="pln"><br>historyService</span><span class="pun">.</span><span class="pln">createHistoricProcessInstanceQuery</span><span class="pun">().</span><span class="pln">processInstanceId</span><span class="pun">(</span><span class="pln">procId</span><span class="pun">).</span><span class="pln">singleResult</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Process instance end time: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> historicProcessInstance</span><span class="pun">.</span><span class="pln">getEndTime</span><span class="pun">());</span></pre><p>
      </p></div><div class="section" title="代码总结"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnFirstExampleCode"></a>代码总结</h3></div></div></div><p>
	    把上述代码组合在一起，获得的代码如下所示
		（这些代码考虑到你可能会在Activiti Explorer UI中启动一些流程实例。
		这样，它会获得多个任务，而不是一个，
		所以代码可以一直正常运行）：
        </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">TenMinuteTutorial</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">// Create Activiti process engine</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">ProcessEngine</span><span class="pln"> processEngine </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ProcessEngineConfiguration</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">createStandaloneProcessEngineConfiguration</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">buildProcessEngine</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">// Get Activiti services</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">RepositoryService</span><span class="pln"> repositoryService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getRepositoryService</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">RuntimeService</span><span class="pln"> runtimeService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getRuntimeService</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">// Deploy the process definition</span><span class="pln"><br>&nbsp; &nbsp; repositoryService</span><span class="pun">.</span><span class="pln">createDeployment</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">addClasspathResource</span><span class="pun">(</span><span class="str">"FinancialReportProcess.bpmn20.xml"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">deploy</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">// Start a process instance</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">String</span><span class="pln"> procId </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"financialReport"</span><span class="pun">).</span><span class="pln">getId</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">// Get the first task</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">TaskService</span><span class="pln"> taskService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getTaskService</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Task</span><span class="pun">&gt;</span><span class="pln"> tasks </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">taskCandidateGroup</span><span class="pun">(</span><span class="str">"accountancy"</span><span class="pun">).</span><span class="pln">list</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Task</span><span class="pln"> task </span><span class="pun">:</span><span class="pln"> tasks</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Following task is available for accountancy group: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> task</span><span class="pun">.</span><span class="pln">getName</span><span class="pun">());</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; </span><span class="com">// claim it</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; taskService</span><span class="pun">.</span><span class="pln">claim</span><span class="pun">(</span><span class="pln">task</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">(),</span><span class="pln"> </span><span class="str">"fozzie"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">// Verify Fozzie can now retrieve the task</span><span class="pln"><br>&nbsp; &nbsp; tasks </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">taskAssignee</span><span class="pun">(</span><span class="str">"fozzie"</span><span class="pun">).</span><span class="pln">list</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Task</span><span class="pln"> task </span><span class="pun">:</span><span class="pln"> tasks</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Task for fozzie: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> task</span><span class="pun">.</span><span class="pln">getName</span><span class="pun">());</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; </span><span class="com">// Complete the task</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; taskService</span><span class="pun">.</span><span class="pln">complete</span><span class="pun">(</span><span class="pln">task</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Number of tasks for fozzie: "</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">+</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">taskAssignee</span><span class="pun">(</span><span class="str">"fozzie"</span><span class="pun">).</span><span class="pln">count</span><span class="pun">());</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">// Retrieve and claim the second task</span><span class="pln"><br>&nbsp; &nbsp; tasks </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">taskCandidateGroup</span><span class="pun">(</span><span class="str">"management"</span><span class="pun">).</span><span class="pln">list</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Task</span><span class="pln"> task </span><span class="pun">:</span><span class="pln"> tasks</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Following task is available for accountancy group: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> task</span><span class="pun">.</span><span class="pln">getName</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; taskService</span><span class="pun">.</span><span class="pln">claim</span><span class="pun">(</span><span class="pln">task</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">(),</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">// Completing the second task ends the process</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Task</span><span class="pln"> task </span><span class="pun">:</span><span class="pln"> tasks</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; taskService</span><span class="pun">.</span><span class="pln">complete</span><span class="pun">(</span><span class="pln">task</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">// verify that the process is actually finished</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">HistoryService</span><span class="pln"> historyService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getHistoryService</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">HistoricProcessInstance</span><span class="pln"> historicProcessInstance </span><span class="pun">=</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; historyService</span><span class="pun">.</span><span class="pln">createHistoricProcessInstanceQuery</span><span class="pun">().</span><span class="pln">processInstanceId</span><span class="pun">(</span><span class="pln">procId</span><span class="pun">).</span><span class="pln">singleResult</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Process instance end time: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> historicProcessInstance</span><span class="pun">.</span><span class="pln">getEndTime</span><span class="pun">());</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span></pre><p>
      </p><p>
	    这段代码包含在实例中的一个单元测试中（似的，你可以运行单元测试来测试你的流程。
		参考<a class="link" href="#apiUnitTesting" title="单元测试">单元测试章节</a>来了解更多信息）。
      </p></div><div class="section" title="更多思考"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnFirstExampleFutureEnhancements"></a>更多思考</h3></div></div></div><p>
	    可以看到业务流程相对于现实来说太简单了。
		然而，你可以了解Activiti中的BPMN 2.0结构，
		你可以考虑对业务流程进行以下方面的加强：

        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
			  定义<span class="bold"><strong>网关</strong></span>来实现决策环节。
			  这样，经理可以驳回财报，
			  重新给会计创建一个任务。
            </p></li><li class="listitem"><p>
			  考虑使用<span class="bold"><strong>变量</strong></span>，
			  这样我们可以保存或引用报告，
			  把它显示到表单中。
            </p></li><li class="listitem"><p>
			  在流程最后加入<span class="bold"><strong>服务任务</strong></span>，
			  把报告发给每个领导。
            </p></li><li class="listitem"><p>
              其他
            </p></li></ul></div><p>
      </p></div></div></div><div class="chapter" title="Chapter&nbsp;8.&nbsp;BPMN 2.0结构"><div class="titlepage"><div><div><h2 class="title"><a name="bpmnConstructs"></a>Chapter&nbsp;8.&nbsp;BPMN 2.0结构</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#bpmnCustomExtensions">自定义扩展</a></span></dt><dt><span class="section"><a href="#bpmnEvents">事件（Event）</a></span></dt><dd><dl><dt><span class="section"><a href="#eventDefinitions">事件定义</a></span></dt><dt><span class="section"><a href="#timerEventDefinitions">定时器事件定义</a></span></dt><dt><span class="section"><a href="#bpmnErrorEventDefinition">错误事件定义</a></span></dt><dt><span class="section"><a href="#bpmnSignalEventDefinition">信号事件定义</a></span></dt><dt><span class="section"><a href="#bpmnMessageEventDefinition">消息事件定义</a></span></dt><dt><span class="section"><a href="#bpmnStartEvents">开始事件</a></span></dt><dt><span class="section"><a href="#bpmnNoneStartEvent">空开始事件</a></span></dt><dt><span class="section"><a href="#bpmnTimerStartEvent">定时开始事件</a></span></dt><dt><span class="section"><a href="#bpmnMessageStartEvent">消息开始事件</a></span></dt><dt><span class="section"><a href="#bpmnSignalStartEvent">信号开始事件</a></span></dt><dt><span class="section"><a href="#bpmnErrorStartEvent">错误开始事件</a></span></dt><dt><span class="section"><a href="#bpmnEndEvent">结束事件</a></span></dt><dt><span class="section"><a href="#bpmnNoneEndEvent">空结束事件</a></span></dt><dt><span class="section"><a href="#bpmnErrorEndEvent">错误结束事件</a></span></dt><dt><span class="section"><a href="#bpmnCancelEndEvent">取消结束事件</a></span></dt><dt><span class="section"><a href="#bpmnBoundaryEvent">边界事件</a></span></dt><dt><span class="section"><a href="#bpmnTimerBoundaryEvent">定时边界事件</a></span></dt><dt><span class="section"><a href="#bpmnBoundaryErrorEvent">错误边界事件</a></span></dt><dt><span class="section"><a href="#bpmnBoundarySignalEvent">信号边界事件</a></span></dt><dt><span class="section"><a href="#bpmnBoundaryMessageEvent">消息边界事件</a></span></dt><dt><span class="section"><a href="#bpmnBoundaryCancelEvent">取消边界事件</a></span></dt><dt><span class="section"><a href="#bpmnBoundaryCompensationEvent">补偿边界事件</a></span></dt><dt><span class="section"><a href="#bpmnIntermediateCatchingEvent">中间捕获事件</a></span></dt><dt><span class="section"><a href="#bpmnTimerIntermediateEvent">定时中间捕获事件</a></span></dt><dt><span class="section"><a href="#bpmnIntermediateSignalEvent">信号中间捕获事件</a></span></dt><dt><span class="section"><a href="#bpmnIntermediateMessageEvent">消息中间捕获事件</a></span></dt><dt><span class="section"><a href="#bpmnIntermediateThrowEvent">内部触发事件</a></span></dt><dt><span class="section"><a href="#bpmnIntermediateThrowNoneEvent">中间触发空事件</a></span></dt><dt><span class="section"><a href="#bpmnIntermediateThrowSignalEvent">信号中间触发事件</a></span></dt><dt><span class="section"><a href="#bpmnIntermediateThrowCompensationEvent">补偿中间触发事件</a></span></dt></dl></dd><dt><span class="section"><a href="#bpmnSequenceFlow">顺序流</a></span></dt><dd><dl><dt><span class="section"><a href="#sequenceFlowDescription">描述</a></span></dt><dt><span class="section"><a href="#sequenceFlowGraphicalNotation">图形标记</a></span></dt><dt><span class="section"><a href="#sequenceFlowXml">XML内容</a></span></dt><dt><span class="section"><a href="#bpmnConditionalSequenceFlow">条件顺序流</a></span></dt><dt><span class="section"><a href="#bpmnDefaultSequenceFlow">默认顺序流</a></span></dt></dl></dd><dt><span class="section"><a href="#bpmnGateways">网关</a></span></dt><dd><dl><dt><span class="section"><a href="#bpmnExclusiveGateway">排他网关</a></span></dt><dt><span class="section"><a href="#bpmnParallelGateway">并行网关</a></span></dt><dt><span class="section"><a href="#bpmnInclusiveGateway">包含网关</a></span></dt><dt><span class="section"><a href="#bpmnEventbasedGateway">基于事件网关</a></span></dt></dl></dd><dt><span class="section"><a href="#bpmnTask"> 任务</a></span></dt><dd><dl><dt><span class="section"><a href="#bpmnUserTask">用户任务</a></span></dt><dt><span class="section"><a href="#bpmnScriptTask">脚本任务</a></span></dt><dt><span class="section"><a href="#bpmnJavaServiceTask">Java服务任务</a></span></dt><dt><span class="section"><a href="#bpmnWebserviceTask">Web Service任务</a></span></dt><dt><span class="section"><a href="#bpmnBusinessRuleTask">业务规则任务</a></span></dt><dt><span class="section"><a href="#bpmnEmailTask">邮件任务</a></span></dt><dt><span class="section"><a href="#bpmnMuleTask">Mule任务</a></span></dt><dt><span class="section"><a href="#bpmnCamelTask">Camel任务</a></span></dt><dt><span class="section"><a href="#bpmnManualTask">手工任务</a></span></dt><dt><span class="section"><a href="#bpmnReceiveTask">Java接收任务</a></span></dt><dt><span class="section"><a href="#bpmnShellTask">Shell任务</a></span></dt><dt><span class="section"><a href="#executionListeners">执行监听器</a></span></dt><dt><span class="section"><a href="#taskListeners">任务监听器</a></span></dt><dt><span class="section"><a href="#bpmnMultiInstance">多实例（循环）</a></span></dt><dt><span class="section"><a href="#bpmnCompensationHandlers">补偿处理器</a></span></dt></dl></dd><dt><span class="section"><a href="#bpmnSubprocessAndCallActivity">子流程和调用节点</a></span></dt><dd><dl><dt><span class="section"><a href="#bpmnSubProcess">子流程</a></span></dt><dt><span class="section"><a href="#bpmnEventSubprocess">事件子流程</a></span></dt><dt><span class="section"><a href="#bpmnTransactionSubprocess">事务子流程</a></span></dt><dt><span class="section"><a href="#bpmnCallActivity">调用活动（子流程）</a></span></dt></dl></dd><dt><span class="section"><a href="#bpmnConcurrencyAndTransactions">事务和并发</a></span></dt><dd><dl><dt><span class="section"><a href="#asyncContinuations">异步操作</a></span></dt><dt><span class="section"><a href="#exclusiveJobs">排他任务</a></span></dt></dl></dd><dt><span class="section"><a href="#security">流程实例授权</a></span></dt><dt><span class="section"><a href="#dataobjects">数据对象</a></span></dt></dl></div><p>本章介绍Activiti支持的BPMN 2.0结构，
	以及对BPMN标准的扩展。
</p><div class="section" title="自定义扩展"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="bpmnCustomExtensions"></a>自定义扩展</h2></div></div></div><p>
		  BPMN 2.0标准对于各方都是一个好东西。最终用户不用担心会绑死在
		  供应商提供的专有解决方案上。
		  框架，特别是activiti这样的开源框架，可以提供相同功能
		  （甚至是更好的实现），足以和大的供应商媲美。
		  按照BPMN 2.0标准，从大供应商的解决方案迁移到activiti
		  只会经过一个简单而平滑的过程。
	    </p><p>
		  标准不好的一点是，它常常是不同公司之间大量讨论和妥协的结果。
		  （而且通常是愿景）。
		  作为开发者去阅读流程定义的BPMN 2.0 xml时，有时会感觉
		  用这种结构和方法去做事太麻烦了。
		  因此activiti把简化开发作为最优先的事情，我们会使用一些被称为
		  <span class="bold"><strong>'Activiti BPMN扩展'</strong></span>的功能。
		  这些扩展是新的结构或方法来简化对应的结构，
		  它们并不属于BPMN 2.0规范。
	    </p><p>
		  虽然BPMN 2.0规范清楚的指明了如何开发自定义扩展，
		  但是我们还要确认一下几点：
	      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
			    自定义扩展的前提是
				<span class="bold"><strong>总</strong></span>有简单的方法
				转换成<span class="bold"><strong>标准方法</strong></span>。
				所以当你决定使用自定义扩展时，不用担心没办法回头。
	          </p></li><li class="listitem"><p>
			    当使用自定义扩展时，总会清楚的指明使用了
				新的XML元素，属性，等等。
				比如会使用<span class="bold"><strong>activiti:</strong></span>命名空间前缀。
	          </p></li><li class="listitem"><p>
			    这些扩展的目标是最终把它们加入到下一版本的BPMN规范中，
				或者至少可以引起对特定BPMN结构的讨论。
	          </p></li></ul></div><p>
	    </p><p>
		  因此无论是是否想要使用自定义扩展，这都取决于你。
		  很多因素会影响决定这个决定（图形编辑器，公司策略，等等）。
		  只是因为我们相信标准里的一些功能可以更简单或更高校，
		  所以才决定提供自定义扩展。请对扩展给予我们（正面或负面）的评价，
		  或者是对自定义扩展的心想法。
		  说不定有一天你的想法就会加入到规范中。
	    </p></div><div class="section" title="事件（Event）"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="bpmnEvents"></a>事件（Event）</h2></div></div></div><p>
		 事件用来表明流程的生命周期中发生了什么事。
		 事件总是画成一个圆圈。

		 在BPMN 2.0中，
		 事件有两大分类：<span class="emphasis"><em>捕获（catching）</em></span> 或 <span class="emphasis"><em>触发（throwing）</em></span> 事件。
       </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
             <span class="bold"><strong>捕获（Catching）：</strong></span>当流程执行到事件，
			 它会等待被触发。触发的类型是由内部图表或XML中的类型声明来决定的。
			 捕获事件与触发事件在显示方面是根据内部图表是否被填充来区分的（白色的）。
           </p></li><li class="listitem"><p>
             <span class="bold"><strong>触发（Throwing）：</strong></span>当流程执行到事件，
			 会触发一个事件。触发的类型是由内部图表或XML中的类型声明来决定的。
			 触发事件与捕获事件在显示方面是根据内部图表是否被填充来区分的（被填充为黑色）。
           </p></li></ul></div><p>

	    </p><div class="section" title="事件定义"><div class="titlepage"><div><div><h3 class="title"><a name="eventDefinitions"></a>事件定义</h3></div></div></div><p>事件定义决定了事件的语义。如果没有事件定义，这个事件就不做什么特别的事情。
		没有设置事件定义的开始事件不会在启动流程时做任何事情。如果给开始事件添加了一个事件定义
		（比如定时器事件定义）我们就声明了开始流程的事件 "类型 "
		（这时定时器事件监听器会在某个时间被触发）。
	  	</p></div><div class="section" title="定时器事件定义"><div class="titlepage"><div><div><h3 class="title"><a name="timerEventDefinitions"></a>定时器事件定义</h3></div></div></div><p>定时器事件是根据指定的时间触发的事件。可以用于
          <a class="link" href="#bpmnTimerStartEvent" title="定时开始事件">开始事件</a>，
              <a class="link" href="#bpmnIntermediateCatchingEvent" title="中间捕获事件">中间事件</a>
          或 <a class="link" href="#bpmnTimerBoundaryEvent" title="定时边界事件">边界事件</a></p><p>
		      定时器定义必须下面介绍的一个元素：
              </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><span class="bold"><strong>timeDate</strong></span>。使用 <a class="ulink" href="http://en.wikipedia.org/wiki/ISO_8601#Dates" target="_top">ISO 8601</a> 格式指定一个确定的时间，触发事件的时间。示例：

                      </p><pre class="prettyprint"><span class="tag">&lt;timerEventDefinition&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;timeDate&gt;</span><span class="pln">2011-03-11T12:13:14</span><span class="tag">&lt;/timeDate&gt;</span><span class="pln"><br></span><span class="tag">&lt;/timerEventDefinition&gt;</span></pre><p>
                      </p></li><li class="listitem"><p>
                        <span class="bold"><strong>timeDuration</strong></span>。指定定时器之前要等待多长时间，
						<span class="emphasis"><em>timeDuration</em></span>可以设置为<span class="emphasis"><em>timerEventDefinition</em></span>的子元素。
						使用<a class="ulink" href="http://en.wikipedia.org/wiki/ISO_8601#Durations" target="_top">ISO 8601</a>规定的格式
						（由BPMN 2.0规定）。示例（等待10天）。
                      </p><pre class="prettyprint"><span class="tag">&lt;timerEventDefinition&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;timeDuration&gt;</span><span class="pln">P10D</span><span class="tag">&lt;/timeDuration&gt;</span><span class="pln"><br></span><span class="tag">&lt;/timerEventDefinition&gt;</span></pre><p>

                      </p></li><li class="listitem"><p><span class="bold"><strong>timeCycle</strong></span>。指定重复执行的间隔，
						  可以用来定期启动流程实例，或为超时时间发送多个提醒。
						  timeCycle元素可以使用两种格式。第一种是
						  <a class="ulink" href="http://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals" target="_top">ISO 8601</a>
						  标准的格式。示例（重复3次，每次间隔10小时）：
                          </p><pre class="prettyprint"><span class="tag">&lt;timerEventDefinition&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;timeCycle&gt;</span><span class="pln">R3/PT10H</span><span class="tag">&lt;/timeCycle&gt;</span><span class="pln"><br></span><span class="tag">&lt;/timerEventDefinition&gt;</span></pre><p>
                      </p><p>另外，你可以使用cron表达式指定timeCycle，下面的例子是从整点开始，每5分钟执行一次：
                          </p><pre class="prettyprint"><span class="lit">0</span><span class="pln"> </span><span class="lit">0</span><span class="pun">/</span><span class="lit">5</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="pun">?</span></pre><p>
                          请参考<a class="ulink" href="http://www.quartz-scheduler.org/docs/tutorials/crontrigger.html" target="_top">教程</a>
						  来了解如何使用cron表达式。
                      </p><p>
                            <span class="bold"><strong>注意：</strong></span> 第一个数字表示秒，而不是像通常Unix cron中那样表示分钟。
                      </p><p>重复的时间周期能更好的处理相对时间，它可以计算一些特定的时间点
					  （比如，用户任务的开始时间），而cron表达式可以处理绝对时间 -
					  这对<a class="link" href="#timerStartEventDescription" title="描述">定时启动事件</a>特别有用。</p></li></ul></div><p>
          </p><p>
		    你可以在定时器事件定义中使用表达式，这样你就可以通过流程变量来影响那个定时器定义。
			流程定义必须包含ISO 8601（或cron）格式的字符串，以匹配对应的时间类型。
  </p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="tag">&lt;boundaryEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"escalationTimer"</span><span class="pln"> </span><span class="atn">cancelActivity</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="atn">attachedToRef</span><span class="pun">=</span><span class="atv">"firstLineSupport"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp;</span><span class="bold"><strong><span class="tag">&lt;timerEventDefinition&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;timeDuration&gt;</span><span class="pln">${duration}</span><span class="tag">&lt;/timeDuration&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/timerEventDefinition&gt;</span></strong></span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/boundaryEvent&gt;</span><span class="pln"><br>&nbsp; </span></pre><p>
          </p><p>
          <span class="bold"><strong>注意：</strong></span> 只有启用job执行器之后，定时器才会被触发。
		  （<code class="literal">activiti.cfg.xml</code>中的<span class="emphasis"><em>jobExecutorActivate</em></span>需要设置为<code class="literal">true</code>，
		  不过，默认job执行器是关闭的）。
        </p></div><div class="section" title="错误事件定义"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnErrorEventDefinition"></a>错误事件定义</h3></div></div></div>
	  错误事件是由指定错误触发的。

        <p>
		      <span class="bold"><strong>重要提醒：</strong></span>BPMN错误与Java异常完全不一样。
			  实际上，他俩一点儿共同点都没有。BPMN错误事件是为了对
			  <span class="emphasis"><em>业务异常</em></span>建模。Java异常是要
			  <a class="link" href="#serviceTaskExceptionHandling" title="处理异常">用特定方式</a>处理。
		</p>


		错误事件定义会引用一个error元素。下面是一个error元素的例子，引用了一个错误声明：

		 <pre class="prettyprint"><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myErrorEndEvent"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;errorEventDefinition</span><span class="pln"> </span><span class="atn">errorRef</span><span class="pun">=</span><span class="atv">"myError"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/endEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre>

		 引用相同error元素的错误事件处理器会捕获这个错误。
      </div><div class="section" title="信号事件定义"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnSignalEventDefinition"></a>信号事件定义</h3></div></div></div><p>
			信号事件会引用一个已命名的信号。信号全局范围的事件（广播语义）。
			会发送给所有激活的处理器。
      	</p><p>
			信号事件定义使用<code class="code">signalEventDefinition</code>元素。
			<code class="code">signalRef</code>属性会引用<code class="code">definitions</code>根节点里定义的<code class="code">signal</code>子元素。
			下面是一个流程的实例，其中会抛出一个信号，并被中间事件捕获。
</p><pre class="prettyprint"><span class="tag">&lt;definitions</span><span class="pln">... </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">&lt;!-- declaration of the signal --&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;signal</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"alertSignal"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"alert"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"catchSignal"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;intermediateThrowEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"throwSignalEvent"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Alert"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">&lt;!-- signal event definition --&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;signalEventDefinition</span><span class="pln"> </span><span class="atn">signalRef</span><span class="pun">=</span><span class="atv">"alertSignal"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/intermediateThrowEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ...<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;intermediateCatchEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"catchSignalEvent"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"On Alert"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">&lt;!-- signal event definition --&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;signalEventDefinition</span><span class="pln"> </span><span class="atn">signalRef</span><span class="pun">=</span><span class="atv">"alertSignal"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/intermediateCatchEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ...<br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/process&gt;</span><span class="pln"><br></span><span class="tag">&lt;/definitions&gt;</span></pre><p>
<code class="code">signalEventDefinition</code>引用相同的<code class="code">signal</code>元素。
        </p><div class="section" title="触发信号事件"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnSignalEventDefinitionThrow"></a>触发信号事件</h4></div></div></div><p>
				既可以通过bpmn节点由流程实例触发一个信号，也可以通过API触发。
				下面的<code class="code">org.activiti.engine.RuntimeService</code>中的方法
				可以用来手工触发一个信号。
	        	</p><pre class="prettyprint"><span class="typ">RuntimeService</span><span class="pun">.</span><span class="pln">signalEventReceived</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> signalName</span><span class="pun">);</span><span class="pln"><br></span><span class="typ">RuntimeService</span><span class="pun">.</span><span class="pln">signalEventReceived</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> signalName</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> executionId</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
				<code class="code">signalEventReceived(String signalName);</code>和
				<code class="code">signalEventReceived(String signalName, String executionId);</code>之间的区别是
				第一个方法会把信号发送给全局所有订阅的处理器（广播语义），
				第二个方法只把信息发送给指定的执行。
	        </p></div><div class="section" title="捕获信号事件"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnSignalEventDefinitionCatch"></a>捕获信号事件</h4></div></div></div><p>
				信号事件可以被中间捕获信号事件或边界信息事件捕获。
	    	</p></div><div class="section" title="查询信号事件的订阅"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnSignalEventDefinitionQuery"></a>查询信号事件的订阅</h4></div></div></div><p>
			可以查询所有订阅了特定信号事件的执行：
	    	</p><pre class="prettyprint"><span class="pln">&nbsp;</span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Execution</span><span class="pun">&gt;</span><span class="pln"> executions </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">createExecutionQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">signalEventSubscriptionName</span><span class="pun">(</span><span class="str">"alert"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">list</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
			我们可以使用<code class="code">signalEventReceived(String signalName, String executionId)</code>方法
			吧信号发送给这些执行。
			</p></div><div class="section" title="信号事件范围"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnSignalEventDefinitionScope"></a>信号事件范围</h4></div></div></div><p>
			   默认，信号会在<span class="emphasis"><em>流程引擎范围内进行广播</em></span>。就是说，
			   你可以在一个流程实例中抛出一个信号事件，其他不同流程定义的流程实例
			   都可以监听到这个事件。
	       </p><p>
				然而，有时只希望在<span class="emphasis"><em>同一个流程实例</em></span>中响应这个信号事件。
				比如一个场景是，流程实例中的同步机制，如果两个或更多活动是互斥的。
	       </p><p>
			   如果想要限制信号事件的<span class="emphasis"><em>范围</em></span>，可以使用信号事件定义的<span class="emphasis"><em>scope 属性</em></span>
			   （不是BPMN2.0的标准属性）：
	           </p><pre class="prettyprint"><span class="tag">&lt;signal</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"alertSignal"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"alert"</span><span class="pln"> </span><span class="atn">activiti:scope</span><span class="atv">"processInstance"</span><span class="tag">/&gt;</span></pre><p>
	           The default value for this is attribute is <span class="emphasis"><em>"global"</em></span>.
	       </p></div><div class="section" title="信号事件实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnSignalEventDefinitionExample"></a>信号事件实例</h4></div></div></div><p>
				下面是两个不同流程使用信号交互的例子。第一个流程在保险规则更新或改变时启动。
				在修改被参与者处理时，会触发一个信息，通知规则改变：
	    	</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_030.png" align="middle"></div><p>
				这个时间会被所有感兴趣的流程实例捕获。下面是一个订阅这个事件的流程实例。
	    	</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_002.png" align="middle"></div><p>
	    		<span class="bold"><strong>注意：</strong></span>要了解信号事件是广播给<span class="bold"><strong>所有</strong></span> 激活的处理器的。
				这意味着在上面的例子中，所有流程实例都会接收到这个事件。
				这就是我们想要的。然而，有的情况下并不想要这种广播行为。
				考虑下面的流程：
	    	</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_057.png" align="middle"></div><p>
				上述流程描述的模式activiti并不支持。这种想法是执行“do something”任务时出现的错误，会被边界错误事件捕获，
				然后使用信号传播给并发路径上的分支，进而中断"do something inparallel"任务。
				目前，activiti实际运行的结果与期望一致。信号会传播给边界事件并中断任务。
				<span class="bold"><strong>但是，根据信号的广播含义，它也会传播给所有其他订阅了信号事件的流程实例。</strong></span>
				所以，这就不是我们想要的结果。
	    	</p><p>
	    		<span class="bold"><strong>注意：</strong></span> 信号事件不会执行任何与特定流程实例的联系。
				如果你只想把一个信息发给指定的流程实例，需要手工关联，再使用
				<code class="code">signalEventReceived(String signalName, String executionId)</code>和对应的
				<a class="link" href="#bpmnSignalEventDefinitionQuery" title="查询信号事件的订阅">查询机制</a>。
	    	</p></div></div><div class="section" title="消息事件定义"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnMessageEventDefinition"></a>消息事件定义</h3></div></div></div><p>
			消息事件会引用一个命名的消息。每个消息都有名称和内容。和信号不同，
			消息事件总会直接发送个一个接受者。
      	</p><p>
			消息事件定义使用<code class="code">messageEventDefinition</code>元素。
			<code class="code">messageRef</code>属性引用了<code class="code">definitions</code>根节点下的
			一个<code class="code">message</code>子元素。下面是一个使用两个消息事件的流程例子，
			开始事件和中间捕获事件分别声明和引用了两个消息事件。
</p><pre class="prettyprint"><span class="tag">&lt;definitions</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"definitions"</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/BPMN/20100524/MODEL"</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns:activiti</span><span class="pun">=</span><span class="atv">"http://activiti.org/bpmn"</span><span class="pln"><br>&nbsp; </span><span class="atn">targetNamespace</span><span class="pun">=</span><span class="atv">"Examples"</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns:tns</span><span class="pun">=</span><span class="atv">"Examples"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;message</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"newInvoice"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"newInvoiceMessage"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;message</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"payment"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"paymentMessage"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"invoiceProcess"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"messageStart"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;messageEventDefinition</span><span class="pln"> </span><span class="atn">messageRef</span><span class="pun">=</span><span class="atv">"newInvoice"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/startEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; ...<br>&nbsp; &nbsp; </span><span class="tag">&lt;intermediateCatchEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"paymentEvt"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;messageEventDefinition</span><span class="pln"> </span><span class="atn">messageRef</span><span class="pun">=</span><span class="atv">"payment"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/intermediateCatchEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; ...<br>&nbsp; </span><span class="tag">&lt;/process&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/definitions&gt;</span></pre><p>
        </p><div class="section" title="触发消息事件"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnMessageEventDefinitionThrow"></a>触发消息事件</h4></div></div></div><p>
				作为一个嵌入式的流程引擎，activiti不能真正接收一个消息。这些环境相关，与平台相关的活动
				比如连接到JMS（Java消息服务）队列或主题或执行WebService或REST请求。
				这个消息的接收是你要在应用或架构的一层实现的，流程引擎则内嵌其中。
        	</p><p>
				在你的应用接收一个消息之后，你必须决定如何处理它。
				如果消息应该触发启动一个新流程实例，
				在下面的RuntimeService的两个方法中选择一个执行：
	        	</p><pre class="prettyprint"><span class="typ">ProcessInstance</span><span class="pln"> startProcessInstanceByMessage</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> messageName</span><span class="pun">);</span><span class="pln"><br></span><span class="typ">ProcessInstance</span><span class="pln"> startProcessInstanceByMessage</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> messageName</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> processVariables</span><span class="pun">);</span><span class="pln"><br></span><span class="typ">ProcessInstance</span><span class="pln"> startProcessInstanceByMessage</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> messageName</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> businessKey</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> processVariables</span><span class="pun">);</span><span class="pln"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
				这些方法允许使用对应的消息系统流程实例。
	        </p><p>
				如果消息需要被运行中的流程实例处理，首先要根据消息找到对应的流程实例
				（参考下一节）然后触发这个等待中的流程。
				RuntimeService提供了如下方法可以基于消息事件的订阅来触发流程继续执行：
	        	 	</p><pre class="prettyprint"><span class="kwd">void</span><span class="pln"> messageEventReceived</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> messageName</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> executionId</span><span class="pun">);</span><span class="pln"><br></span><span class="kwd">void</span><span class="pln"> messageEventReceived</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> messageName</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> executionId</span><span class="pun">,</span><span class="pln"> </span><span class="typ">HashMap</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> processVariables</span><span class="pun">);</span><span class="pln"> &nbsp; &nbsp;</span></pre><p>
	        </p></div><div class="section" title="查询消息事件的订阅"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnMessageEventDefinitionQuery"></a>查询消息事件的订阅</h4></div></div></div>
			Activiti支持消息开始事件和中间消息事件。
	    	<div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
					消息开始事件的情况，消息事件订阅分配给一个特定的
	    	<span class="emphasis"><em>process definition</em></span>。这个消息订阅可以使用<code class="code">ProcessDefinitionQuery</code>查询到：
	    	</p><pre class="prettyprint"><span class="typ">ProcessDefinition</span><span class="pln"> processDefinition </span><span class="pun">=</span><span class="pln"> repositoryService</span><span class="pun">.</span><span class="pln">createProcessDefinitionQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">messageEventSubscription</span><span class="pun">(</span><span class="str">"newCallCenterBooking"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">singleResult</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
			因为同时只能有一个流程定义关联到消息的订阅点，查询总是返回0或一个结果。
			如果流程定义更新了，
			那么只有最新版本的流程定义会订阅到消息事件上。
	    			</p></li><li class="listitem"><p>
						中间捕获消息事件的情况，消息事件订阅会分配给特定的<span class="emphasis"><em>执行</em></span>。
						这个消息事件订阅可以使用<code class="code">ExecutionQuery</code>查询到：
	    				</p><pre class="prettyprint"><span class="typ">Execution</span><span class="pln"> execution </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">createExecutionQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">messageEventSubscriptionName</span><span class="pun">(</span><span class="str">"paymentReceived"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">variableValueEquals</span><span class="pun">(</span><span class="str">"orderId"</span><span class="pun">,</span><span class="pln"> message</span><span class="pun">.</span><span class="pln">getOrderId</span><span class="pun">())</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">singleResult</span><span class="pun">();</span></pre><p>
						这个查询可以调用对应的查询，通常是流程相关的信息
						（这里，最多只能有一个流程实例对应着orderId）。
	    			</p></li></ul></div></div><div class="section" title="消息事件实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnMessageEventDefinitionExample"></a>消息事件实例</h4></div></div></div><p>
				下面是一个使用两个不同消息启动的流程实例：
	    	</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_033.png" align="middle"></div><p>
				可以用在，流程需要不同的方式来区分开始事件，而后最终会进入同样的路径。
	    	</p></div></div><div class="section" title="开始事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnStartEvents"></a>开始事件</h3></div></div></div><p>
		 开始事件用来指明流程在哪里开始。开始事件的类型（流程在接收事件时启动，
		 还是在指定时间启动，等等），定义了流程<span class="emphasis"><em>如何</em></span>启动，
		 这通过事件中不同的小图表来展示。
		 在XML中，这些类型是通过声明不同的子元素来区分的。
	   </p><p>
	     开始事件<span class="bold"><strong>都是捕获事件</strong></span>：
		 最终这些事件都是（一直）等待着，直到对应的触发时机出现。
	   </p><p>
	     在开始事件中，可以设置下面的activiti特定属性：
	   </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
           <span class="bold"><strong>initiator</strong></span>：当流程启动时，把当前登录的用户保存到哪个变量名中。
		   示例如下：
           </p><pre class="prettyprint"><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"request"</span><span class="pln"> </span><span class="atn">activiti:initiator</span><span class="pun">=</span><span class="atv">"initiator"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
		   登录的用户必须使用<code class="literal">IdentityService.setAuthenticatedUserId(String)</code>方法设置，
		   并像这样包含在try-finally代码中：
           </p><pre class="prettyprint"><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; identityService</span><span class="pun">.</span><span class="pln">setAuthenticatedUserId</span><span class="pun">(</span><span class="str">"bono"</span><span class="pun">);</span><span class="pln"><br>&nbsp; runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"someProcessKey"</span><span class="pun">);</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"> </span><span class="kwd">finally</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; identityService</span><span class="pun">.</span><span class="pln">setAuthenticatedUserId</span><span class="pun">(</span><span class="kwd">null</span><span class="pun">);</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
		  这段代码来自Activiti Explorer，所以它可以和
		  <a class="xref" href="#forms" title="Chapter&nbsp;9.&nbsp;表单">Chapter&nbsp;9, <i>表单</i></a>一起结合使用。
         </p></li></ul></div></div><div class="section" title="空开始事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnNoneStartEvent"></a>空开始事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="noneStartEventDescription"></a>描述</h4></div></div></div><p>
		  空开始事件技术上意味着没有指定启动流程实例的触发条件。
		  这就是说引擎不能预计什么时候流程实例会启动。
		  空开始事件用于，当流程实例要通过API启动的场景，
		  通过调用<span class="emphasis"><em>startProcessInstanceByXXX</em></span>方法。
          </p><pre class="prettyprint"><span class="typ">ProcessInstance</span><span class="pln"> processInstance </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByXXX</span><span class="pun">();</span></pre><p>
        </p><p>
          <span class="emphasis"><em>注意：</em></span> 子流程都有一个空开始事件。
        </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="noneStartEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			    空开始事件显示成一个圆圈，没有内部图表（没有触发类型）
			    </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_020.png" align="middle"></div><p>
			  </p></div><div class="section" title="XML结构"><div class="titlepage"><div><div><h4 class="title"><a name="noneStartEventXml"></a>XML结构</h4></div></div></div><p>
		  空开始事件的XML结构是普通的开始事件定义，没有任何子元素
		  （其他开始事件类型都有一个子元素来声明自己的类型）
          </p><pre class="prettyprint"><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"start"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"my start event"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
        </p></div><div class="section" title="空开始事件的自定义扩展"><div class="titlepage"><div><div><h4 class="title"><a name="noneStartEventCustomExtension"></a>空开始事件的自定义扩展</h4></div></div></div><p>
	           <span class="bold"><strong>formKey</strong></span>：引用用户在启动新流程实例时需要填写的表单模板，
			   更多信息可以参考<a class="link" href="#forms" title="Chapter&nbsp;9.&nbsp;表单">表单章节</a>。
				实例：</p><pre class="prettyprint"><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"request"</span><span class="pln"> </span><span class="atn">activiti:formKey</span><span class="pun">=</span><span class="atv">"org/activiti/examples/taskforms/request.form"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
	         </p></div></div><div class="section" title="定时开始事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnTimerStartEvent"></a>定时开始事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="timerStartEventDescription"></a>描述</h4></div></div></div><p>
			定时开始事件用来在指定的时间创建流程实例。
			它可以同时用于只启动一次的流程
			和应该在特定时间间隔启动多次的流程。
        </p><p>
          <span class="emphasis"><em>注意：</em></span>子流程不能使用定时开始事件。
        </p><p>
	  	  <span class="emphasis"><em>注意：</em></span>定时开始事件在流程发布后就会开始计算时间。
		  不需要调用startProcessInstanceByXXX，虽然也而已调用启动流程的方法，
		  但是那会导致调用startProcessInstanceByXXX时启动过多的流程。
		</p><p>
		   <span class="emphasis"><em>注意：</em></span>当包含定时开始事件的新版本流程部署时，
		   对应的上一个定时器就会被删除。这是因为通常不希望自动启动旧版本流程的流程实例。
		</p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="timerStartEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			    定时开始事件显示为了一个圆圈，内部是一个表。
                </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_005.png" align="middle"></div><p>
              </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="timerStartEventXml"></a>XML内容</h4></div></div></div><p>
		  定时开始事件的XML内容是普通开始事件的声明，包含一个定时定义子元素。
		  请参考<a class="link" href="#timerEventDefinitions" title="定时器事件定义">定时定义</a>
		  查看配合细节。
         </p><p>示例：流程会启动4次，每次间隔5分钟，从2011年3月11日，12:13开始计时。
           </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;timerEventDefinition&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;timeCycle&gt;</span><span class="pln">R4/2011-03-11T12:13/PT5M</span><span class="tag">&lt;/timeCycle&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/timerEventDefinition&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/startEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
               </p><p>
               示例：流程会根据选中的时间启动一次。
           </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;timerEventDefinition&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;timeDate&gt;</span><span class="pln">2011-03-11T12:13:14</span><span class="tag">&lt;/timeDate&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/timerEventDefinition&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/startEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
        </p></div></div><div class="section" title="消息开始事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnMessageStartEvent"></a>消息开始事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="messageStartEventDescription"></a>描述</h4></div></div></div><p>
	            <a class="link" href="#bpmnMessageEventDefinition" title="消息事件定义">消息</a>开始事件可以用其使用一个命名的消息来启动流程实例。
				这样可以帮助我们使用消息名称来<span class="emphasis"><em>选择</em></span>正确的开始事件。
	        </p><p>
				在<span class="bold"><strong>发布</strong></span>包含一个或多个消息开始事件的流程定义时，需要考虑下面的条件：
				</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
							消息开始事件的名称在给定流程定义中不能重复。流程定义不能包含多个名称相同的消息开始事件。
							如果两个或以上消息开始事件应用了相同的事件，或两个或以上消息事件引用的消息名称相同，activiti会在发布流程定义时抛出异常。
						</p></li><li class="listitem"><p>
							消息开始事件的名称在所有已发布的流程定义中不能重复。
							如果一个或多个消息开始事件引用了相同名称的消息，而这个消息开始事件已经部署到不同的流程定义中，
							activiti就会在发布时抛出一个异常。
						</p></li><li class="listitem"><p>
							流程版本：在发布新版本的流程定义时，之前订阅的消息订阅会被取消。
							如果新版本中没有消息事件也会这样处理。
						</p></li></ul></div><p>
			</p><p>
				<span class="bold"><strong>启动</strong></span>流程实例，消息开始事件可以使用
				下列<code class="code">RuntimeService</code>中的方法来触发：
	        	</p><pre class="prettyprint"><span class="typ">ProcessInstance</span><span class="pln"> startProcessInstanceByMessage</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> messageName</span><span class="pun">);</span><span class="pln"><br></span><span class="typ">ProcessInstance</span><span class="pln"> startProcessInstanceByMessage</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> messageName</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> processVariables</span><span class="pun">);</span><span class="pln"><br></span><span class="typ">ProcessInstance</span><span class="pln"> startProcessInstanceByMessage</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> messageName</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> businessKey</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&lt;</span><span class="pln"> processVariables</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
	  			这里的<code class="code">messageName</code>是<code class="code">messageEventDefinition</code>的<code class="code">messageRef</code>属性引用的<code class="code">message</code>元素的<code class="code">name</code>属性。
				<span class="bold"><strong>启动</strong></span>流程实例时，要考虑一下因素：
				</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
							消息开始事件只支持顶级流程。消息开始事件不支持内嵌子流程。
						</p></li><li class="listitem"><p>
							如果流程定义有多个消息开始事件，<code class="code">runtimeService.startProcessInstanceByMessage(...)</code>
							会选择对应的开始事件。
						</p></li><li class="listitem"><p>
							如果流程定义有多个消息开始事件和一个空开始事件。
							<code class="code">runtimeService.startProcessInstanceByKey(...)</code>和
							<code class="code">runtimeService.startProcessInstanceById(...)</code>会使用空开始事件启动流程实例。
						</p></li><li class="listitem"><p>
							如果流程定义有多个消息开始事件，而且没有空开始事件，
							<code class="code">runtimeService.startProcessInstanceByKey(...)</code>和
							<code class="code">runtimeService.startProcessInstanceById(...)</code>会抛出异常。
						</p></li><li class="listitem"><p>
							如果流程定义只有一个消息开始事件，
							<code class="code">runtimeService.startProcessInstanceByKey(...)</code>和
							<code class="code">runtimeService.startProcessInstanceById(...)</code>会使用这个消息开始事件启动流程实例。
						</p></li><li class="listitem"><p>
							如果流程被调用环节（callActivity）启动，消息开始事件只支持如下情况：
							</p><div class="itemizedlist"><ul class="itemizedlist" type="circle"><li class="listitem"><p>在消息开始事件以外，还有一个单独的空开始事件</p></li><li class="listitem"><p>流程只有一个消息开始事件，没有空开始事件。</p></li></ul></div><p>
						</p></li></ul></div><p>
			</p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="messageStartEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
				消息开始事件是一个圆圈，中间是一个消息事件图标。图标是白色未填充的，来表示捕获（接收）行为。
                </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_049.png" align="middle"></div><p>
              </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="messageStartEventXml"></a>XML内容</h4></div></div></div><p>
		  消息开始事件的XML内容时在普通开始事件申请中包含一个
		  messageEventDefinition子元素：

          </p><pre class="prettyprint"><span class="tag">&lt;definitions</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"definitions"</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/BPMN/20100524/MODEL"</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns:activiti</span><span class="pun">=</span><span class="atv">"http://activiti.org/bpmn"</span><span class="pln"><br>&nbsp; </span><span class="atn">targetNamespace</span><span class="pun">=</span><span class="atv">"Examples"</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns:tns</span><span class="pun">=</span><span class="atv">"Examples"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;message</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"newInvoice"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"newInvoiceMessage"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"invoiceProcess"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"messageStart"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;messageEventDefinition</span><span class="pln"> </span><span class="atn">messageRef</span><span class="pun">=</span><span class="atv">"tns:newInvoice"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/startEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; ...<br>&nbsp; </span><span class="tag">&lt;/process&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/definitions&gt;</span></pre><p>

        </p></div></div><div class="section" title="信号开始事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnSignalStartEvent"></a>信号开始事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnSignalStartEventDescription"></a>描述</h4></div></div></div><p>
                <a class="link" href="#bpmnSignalEventDefinition" title="信号事件定义">signal</a>开始事件，可以用来通过一个已命名的信号（signal）来启动一个流程实例。
				信号可以在流程实例内部使用“中间信号抛出事务”触发，
				也可以通过API(<span class="emphasis"><em>runtimService.signalEventReceivedXXX</em></span> 方法)触发。两种情况下，
				所有流程实例中拥有相同名称的signalStartEvent都会启动。
            </p><p>
                注意，在两种情况下，都可以选择同步或异步的方式启动流程实例。
            </p><p>
                必须向API传入<code class="code">signalName</code>， 这是<code class="code">signal</code>元素的<code class="code">name</code>属性值，
				它会被<code class="code">signalEventDefinition</code>的<code class="code">signalRef</code>属性引用。
            </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="signalStartEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			    信号开始事件显示为一个中间包含信号事件图标的圆圈。标记是无填充的，表示捕获（接收）行为。
                </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_053.png" align="middle"></div><p>
              </p></div><div class="section" title="XML格式"><div class="titlepage"><div><div><h4 class="title"><a name="signalStartEventXml"></a>XML格式</h4></div></div></div><p>
		  signalStartEvent的XML格式是标准的startEvent声明，其中包含一个signalEventDefinition子元素：

          </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; </span><span class="tag">&lt;signal</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theSignal"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"The Signal"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processWithSignalStart1"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;signalEventDefinition</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theSignalEventDefinition"</span><span class="pln"> </span><span class="atn">signalRef</span><span class="pun">=</span><span class="atv">"theSignal"</span><span class="pln"> &nbsp;</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/startEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow1"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theTask"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Task in process A"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow2"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"theTask"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/process&gt;</span></pre><p>

        </p></div></div><div class="section" title="错误开始事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnErrorStartEvent"></a>错误开始事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="errorStartEventDescription"></a>描述</h4></div></div></div><p>
	            <a class="link" href="#bpmnErrorEventDefinition" title="错误事件定义">错误</a>开始事件可以用来触发一个事件子流程。
	            <span class="bold"><strong>错误开始事件不能用来启动流程实例</strong></span>。
	        </p><p>
	           错误开始事件都是中断事件。
	        </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="errorStartEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			    错误开始事件是一个圆圈，包含一个错误事件标记。标记是白色未填充的，来表示捕获（接收）行为。
                </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_027.png" align="middle"></div><p>
              </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="errorStartEventXml"></a>XML内容</h4></div></div></div><p>
		  错误开始事件的XML内容是普通开始事件定义中，包含一个
		  errorEventDefinition子元素。

          </p><pre class="prettyprint"><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"messageStart"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;errorEventDefinition</span><span class="pln"> </span><span class="atn">errorRef</span><span class="pun">=</span><span class="atv">"someError"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/startEvent&gt;</span></pre><p>

        </p></div></div><div class="section" title="结束事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnEndEvent"></a>结束事件</h3></div></div></div><p>
		    结束事件表示（子）流程（分支）的结束。
			结束事件<span class="bold"><strong>都是触发</strong></span>事件。
			这是说当流程达到结束事件，会触发一个<span class="emphasis"><em>结果</em></span>。
			结果的类型是通过事件的内部黑色图标表示的。
			在XML内容中，是通过包含的子元素声明的。
		  </p></div><div class="section" title="空结束事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnNoneEndEvent"></a>空结束事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="noneEndEventDescription"></a>描述</h4></div></div></div><p>
		  空结束事件意味着到达事件时不会指定抛出的<span class="emphasis"><em>结果</em></span>。
		  这样，引擎会直接结束当前执行的分支，不会做其他事情。
        </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnNoneEndEventDescription"></a>图形标记</h4></div></div></div><p>
		  空结束事件是一个粗边圆圈，内部没有小图表（无结果类型）
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_022.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnNoneStartEventXml"></a>XML内容</h4></div></div></div><p>
		  空结束事件的XML内容是普通结束事件定义，不包含子元素
		  （其他结束事件类型都会包含声明类型的子元素）。
          </p><pre class="prettyprint"><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"end"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"my end event"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
        </p></div></div><div class="section" title="错误结束事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnErrorEndEvent"></a>错误结束事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnErrorEndEventDescription"></a>描述</h4></div></div></div><p>
			  当流程执行到<span class="bold"><strong>错误结束事件</strong></span>，
			  流程的当前分支就会结束，并抛出一个错误。
			  这个错误可以<a class="link" href="#bpmnBoundaryErrorEvent" title="错误边界事件">被对应的中间边界错误事件捕获</a>。
			  如果找不到匹配的边界错误事件，就会抛出一个异常。
		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnErrorEndEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
		  错误结束事件是一个标准的结束事件（粗边圆圈），内部有错误图标。
		  错误图表是全黑的，表示触发语法。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_038.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnErrorEndEventXml"></a>XML内容</h4></div></div></div><p>
		  错误结束事件的内容是一个错误事件，
		  子元素为<span class="emphasis"><em>errorEventDefinition</em></span>。
          </p><pre class="prettyprint"><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myErrorEndEvent"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;errorEventDefinition</span><span class="pln"> </span><span class="atn">errorRef</span><span class="pun">=</span><span class="atv">"myError"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/endEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		  <span class="emphasis"><em>errorRef</em></span>属性引用定义在流程外部的<span class="emphasis"><em>error</em></span>元素：
          </p><pre class="prettyprint"><span class="tag">&lt;error</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myError"</span><span class="pln"> </span><span class="atn">errorCode</span><span class="pun">=</span><span class="atv">"123"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>...<br></span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myProcess"</span><span class="tag">&gt;</span><span class="pln"><br>...<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		  <span class="emphasis"><em>error</em></span>的<span class="bold"><strong>errorCode</strong></span>用来查找
		  匹配的捕获边界错误事件。
		  如果<span class="emphasis"><em>errorRef</em></span>与任何<span class="emphasis"><em>error</em></span>都不匹配，
		  就会使用<span class="emphasis"><em>errorRef</em></span>来作为<span class="emphasis"><em>errorCode</em></span>的缩写。
		  这是activiti特定的缩写。
		  更具体的说，见如下代码：
                    </p><pre class="prettyprint"><span class="tag">&lt;error</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myError"</span><span class="pln"> </span><span class="atn">errorCode</span><span class="pun">=</span><span class="atv">"error123"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>...<br></span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myProcess"</span><span class="tag">&gt;</span><span class="pln"><br>...<br>&nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myErrorEndEvent"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;errorEventDefinition</span><span class="pln"> </span><span class="atn">errorRef</span><span class="pun">=</span><span class="atv">"myError"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/endEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		  等同于
                    </p><pre class="prettyprint"><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myErrorEndEvent"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;errorEventDefinition</span><span class="pln"> </span><span class="atn">errorRef</span><span class="pun">=</span><span class="atv">"error123"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/endEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p>
		注意<code class="literal">errorRef</code>必须与BPMN 2.0格式相符，
		必须是一个合法的QName。
      </div></div><div class="section" title="取消结束事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnCancelEndEvent"></a>取消结束事件</h3></div></div></div><a class="link" href="#experimental" title="试验性功能">
			<span class="bold"><strong>[EXPERIMENTAL]</strong></span>
		</a><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCancelEndEventDescription"></a>描述</h4></div></div></div><p>
				取消结束事件只能与BPMN事务子流程结合使用。
				当到达取消结束事件时，会抛出取消事件，它必须被取消边界事件捕获。
				取消边界事件会取消事务，并触发补偿机制。
		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCancelEndEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
		  取消结束事件显示为标准的结束事件（粗边圆圈），包含一个取消图标。
		  取消图标是全黑的，表示触发语法。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_056.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCancelEndEventXml"></a>XML内容</h4></div></div></div><p>
		  取消结束事件内容是一个结束事件，
		  包含<span class="emphasis"><em>cancelEventDefinition</em></span>子元素。
          </p><pre class="prettyprint"><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myCancelEndEvent"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;cancelEventDefinition</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/endEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		</p></div></div><div class="section" title="边界事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnBoundaryEvent"></a>边界事件</h3></div></div></div><p>
		    边界事件都是<span class="emphasis"><em>捕获</em></span>事件，它会附在一个环节上。
			（边界事件不可能触发事件）。这意味着，当节点运行时，
			事件会<span class="emphasis"><em>监听</em></span>对应的触发类型。
			当事件被<span class="emphasis"><em>捕获</em></span>，节点就会中断，
			同时执行事件的后续连线。
		  </p><p>
		    所以边界事件的定义方式都一样：
</p><pre class="prettyprint"><span class="tag">&lt;boundaryEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myBoundaryEvent"</span><span class="pln"> </span><span class="atn">attachedToRef</span><span class="pun">=</span><span class="atv">"theActivity"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;XXXEventDefinition/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/boundaryEvent&gt;</span></pre><p>
		  </p><p>
		    边界事件使用如下方式进行定义：
		    </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
				  唯一标识（流程范围）
		        </p></li><li class="listitem"><p>
				  使用<span class="emphasis"><em>caught</em></span>属性
				  引用事件衣服的节点。
				  注意边界事件和它们附加的节点在同一级别上。
				  （比如，边界事件不是包含在节点内的）。
		        </p></li><li class="listitem"><p>
				  格式为<span class="emphasis"><em>XXXEventDefinition</em></span>的XML子元素
				  （比如，<span class="emphasis"><em>TimerEventDefinition</em></span>，<span class="emphasis"><em>ErrorEventDefinition</em></span>，等等）
				  定义了边界事件的类型。参考对应的边界事件类型，
				  获得更多细节。
		        </p></li></ul></div><p>
		  </p></div><div class="section" title="定时边界事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnTimerBoundaryEvent"></a>定时边界事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="timerBoundaryEventDescription"></a>描述</h4></div></div></div><p>
		  定时边界事件就是一个暂停等待警告的时钟。当流程执行到绑定了边界事件的环节，
		  会启动一个定时器。
		  当定时器触发时（比如，一定时间之后），环节就会中断，
		  并沿着定时边界事件的外出连线继续执行。
        </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnTimerBoundaryEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
		  定时边界事件是一个标准的边界事件（边界上的一个圆圈），
		  内部是一个定时器小图标。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_042.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnTimerBoundaryEventXml"></a>XML内容</h4></div></div></div><p>
		  定时器边界任务定义是一个<a class="link" href="#bpmnBoundaryEvent" title="边界事件">正规的边界事件</a>。
          指定类型的子元素是<span class="bold"><strong>timerEventDefinition</strong></span>元素。
</p><pre class="prettyprint"><span class="tag">&lt;boundaryEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"escalationTimer"</span><span class="pln"> </span><span class="atn">cancelActivity</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="atn">attachedToRef</span><span class="pun">=</span><span class="atv">"firstLineSupport"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="bold"><strong><span class="tag">&lt;timerEventDefinition&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;timeDuration&gt;</span><span class="pln">PT4H</span><span class="tag">&lt;/timeDuration&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/timerEventDefinition&gt;</span></strong></span><span class="pln"><br></span><span class="tag">&lt;/boundaryEvent&gt;</span></pre><p>

        请参考<a class="link" href="#timerEventDefinitions" title="定时器事件定义">定时事件定义</a>获得更多定时其配置的细节。
        </p><p>
		  在流程图中，可以看到上述例子中的圆圈边线是虚线：

          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_062.png" align="middle"></div><p>

          经典场景是发送一个升级邮件，但是不打断正常流程的执行。
        </p><p>
		  因为BPMN 2.0中，中断和非中断的事件还是有区别的。默认是中断事件。
		  非中断事件的情况，<span class="bold"><strong>不会</strong></span>中断原始环节，那个环节还停留在原地。
		  对应的，会创建一个新分支，并沿着事件的流向继续执行。
		  在XML内容中，要把<span class="emphasis"><em>cancelActivity</em></span>属性设置为false：
</p><pre class="prettyprint"><span class="tag">&lt;boundaryEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"escalationTimer"</span><span class="pln"> </span><span class="atn">cancelActivity</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="atn">attachedToRef</span><span class="pun">=</span><span class="atv">"firstLineSupport"</span><span class="tag">/&gt;</span></pre><p>
        </p><p>
          <span class="bold"><strong>注意：</strong></span>边界定时事件只能在job执行器启用时使用。
		  （比如，把<code class="literal">activiti.cfg.xml</code>中的<span class="emphasis"><em>jobExecutorActivate</em></span>
		  设置为<code class="literal">true</code>，因为默认job执行器默认是禁用的）。
        </p></div><div class="section" title="边界事件的已知问题"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnKnownIssueBoundaryEvent"></a>边界事件的已知问题</h4></div></div></div><p>
	    使用边界事件有一个已知的同步问题。
		目前，不能边界事件后面不能有多条外出连线
		（参考<a class="ulink" href="http://jira.codehaus.org/browse/ACT-47" target="_top">ACT-47</a>）。
		解决这个问题的方法是在一个连线后使用并发网关。
        </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_024.png" align="middle"></div><p>
      </p></div></div><div class="section" title="错误边界事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnBoundaryErrorEvent"></a>错误边界事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundaryErrorEventDescription"></a>描述</h4></div></div></div><p>
			  节点边界上的中间<span class="emphasis"><em>捕获</em></span>错误事件，
			  或简写成<span class="bold"><strong>边界错误事件</strong></span>，
			  它会捕获节点范围内抛出的错误。
		    </p><p>
			  定义一个边界错误事件，大多用于<a class="link" href="#bpmnSubProcess" title="子流程">内嵌子流程</a>，
			  或<a class="link" href="#bpmnCallActivity" title="调用活动（子流程）">调用节点</a>，对于子流程的情况，它会为所有内部的节点创建一个作用范围。
			  错误是由<a class="link" href="#bpmnErrorEndEvent" title="错误结束事件">错误结束事件</a>抛出的。
			  这个错误会传递给上层作用域，直到找到一个错误事件定义向匹配的边界错误事件。
		    </p><p>
			  当捕获了错误事件时，边界任务绑定的节点就会销毁，
			  也会销毁内部所有的执行分支
			  （比如，同步节点，内嵌子流程，等等）。
			  流程执行会继续沿着边界事件的外出连线继续执行。
		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundaryErrorEventgraphicalNotation"></a>图形标记</h4></div></div></div><p>
		  边界错误事件显示成一个普通的中间事件（圆圈内部有一个小圆圈）
		  放在节点的标记上，内部有一个错误小图标。错误小图标是白色的，
		  表示它是一个<span class="emphasis"><em>捕获</em></span>事件。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_010.png" align="middle"></div><p>
        </p></div><div class="section" title="Xml内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundaryErrorEventXml"></a>Xml内容</h4></div></div></div><p>
		  边界错误事件定义为普通的<a class="link" href="#bpmnBoundaryEvent" title="边界事件">边界事件</a>：
          </p><pre class="prettyprint"><span class="tag">&lt;boundaryEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"catchError"</span><span class="pln"> </span><span class="atn">attachedToRef</span><span class="pun">=</span><span class="atv">"mySubProcess"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;errorEventDefinition</span><span class="pln"> </span><span class="atn">errorRef</span><span class="pun">=</span><span class="atv">"myError"</span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/boundaryEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		  和<a class="link" href="#bpmnErrorEndEvent" title="错误结束事件">错误结束事件</a>一样，
		  <span class="emphasis"><em>errorRef</em></span>引用了process元素外部的一个错误定义：
		  </p><pre class="prettyprint"><span class="tag">&lt;error</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myError"</span><span class="pln"> </span><span class="atn">errorCode</span><span class="pun">=</span><span class="atv">"123"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>...<br></span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myProcess"</span><span class="tag">&gt;</span><span class="pln"><br>...<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p><p>
          <span class="bold"><strong>errorCode</strong></span>用来匹配捕获的错误：
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
			    如果没有设置<span class="emphasis"><em>errorRef</em></span>，边界错误事件会捕获
				<span class="bold"><strong>所有错误事件</strong></span>，无论<span class="emphasis"><em>错误</em></span>的errorCode是什么。
              </p></li><li class="listitem"><p>
			    如果设置了<span class="emphasis"><em>errorRef</em></span>，并引用了一个已存的<span class="emphasis"><em>错误</em></span>，
				边界事件就<span class="bold"><strong>只捕获错误代码与之相同的错误</strong></span>。
              </p></li><li class="listitem"><p>
			    如果设置了<span class="emphasis"><em>errorRef</em></span>，但是BPMN 2.0中没有定义<span class="emphasis"><em>错误</em></span>，
				<span class="bold"><strong>errorRef就会当做errorCode使用</strong></span>
				（和错误结束事件的用法类似）。
              </p></li></ul></div><p>
        </p></div><div class="section" title="实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundaryErrorEventExample"></a>实例</h4></div></div></div><p>
		  下面的流程实例演示了如何使用错误结束事件。
		  当完成<span class="emphasis"><em>'审核盈利'</em></span>这个用户任务是，如果没有提供足够的信息，
		  就会抛出错误，错误会被子流程的边界任务捕获，
		  所有<span class="emphasis"><em>'回顾销售'</em></span>子流程中的所有节点都会销毁。
		  （即使<span class="emphasis"><em>'审核客户比率'</em></span>还没有完成），
		  并创建一个<span class="emphasis"><em>'提供更多信息'</em></span>的用户任务。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_031.png" align="middle"></div><p>
        </p><p>
		  这个流程也放在demo中了。流程XML和单元测试可以在
		  <span class="emphasis"><em>org.activiti.examples.bpmn.event.error</em></span>包下找到。
        </p></div></div><div class="section" title="信号边界事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnBoundarySignalEvent"></a>信号边界事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundarySignalEventDescription"></a>描述</h4></div></div></div><p>
			  节点边界的中间<span class="emphasis"><em>捕获</em></span><a class="link" href="#bpmnSignalEventDefinition" title="信号事件定义">信号</a>，
			  或简称为<span class="bold"><strong>边界信号事件</strong></span>，
			  它会捕获信号定义引用的相同信号名的信号。
		    </p><p>
		    	<span class="bold"><strong>注意：</strong></span>与其他事件（比如边界错误事件）不同，边界信号事件不只捕获
				它绑定方位的信号。信号事件是一个全局的范围（广播语义），就是说信号可以在任何地方触发，
				即便是不同的流程实例。
		    </p><p>
		    	<span class="bold"><strong>注意：</strong></span>和其他事件（比如边界错误事件）不同，捕获信号后，不会停止信号的传播。
				如果你有两个信号边界事件，它们捕获相同的信号事件，两个边界事件都会被触发，
				即使它们在不同的流程实例中。
		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundarySignalEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			  边界信号事件显示为普通的中间事件（圆圈里有个小圆圈），位置在节点的边缘，
			  内部有一个信号小图标。信号图标是白色的（未填充），
			  来表示<span class="emphasis"><em>捕获</em></span>的意思。
	          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_043.png" align="middle"></div><p>
	        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundarySignalEventXml"></a>XML内容</h4></div></div></div><p>
			    边界信号事件定义为普通的<a class="link" href="#bpmnBoundaryEvent" title="边界事件">边界事件</a>：
          		</p><pre class="prettyprint"><span class="tag">&lt;boundaryEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"boundary"</span><span class="pln"> </span><span class="atn">attachedToRef</span><span class="pun">=</span><span class="atv">"task"</span><span class="pln"> </span><span class="atn">cancelActivity</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;signalEventDefinition</span><span class="pln"> </span><span class="atn">signalRef</span><span class="pun">=</span><span class="atv">"alertSignal"</span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/boundaryEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        	</p></div><div class="section" title="实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundarySignalEventExample"></a>实例</h4></div></div></div><p>
			    参考<a class="link" href="#bpmnSignalEventDefinition" title="信号事件定义">信号事件定义</a>章节。
	        </p></div></div><div class="section" title="消息边界事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnBoundaryMessageEvent"></a>消息边界事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundaryMessageEventDescription"></a>描述</h4></div></div></div><p>
			  节点边界上的中间<span class="emphasis"><em>捕获</em></span><a class="link" href="#bpmnMessageEventDefinition" title="消息事件定义">消息</a>，
			  或简称<span class="bold"><strong>边界消息事件</strong></span>，根据引用的消息定义捕获相同消息名称的消息。
		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundaryMessageEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			  边界消息事件显示成一个普通的中间事件（圆圈里有个小圆圈），位于节点边缘，
			  内部是一个消息小图标。消息图标是白色（无填充），
			  表示<span class="emphasis"><em>捕获</em></span>语义。
	          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_014.png" align="middle"></div><p>
	          注意，边界消息事件可能是中断（右侧）或非中断（左侧）的。
	        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundaryMessageEventXml"></a>XML内容</h4></div></div></div><p>
			    边界消息事件定义为标准的<a class="link" href="#bpmnBoundaryEvent" title="边界事件">边界事件</a>：
			    </p><pre class="prettyprint"><span class="tag">&lt;boundaryEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"boundary"</span><span class="pln"> </span><span class="atn">attachedToRef</span><span class="pun">=</span><span class="atv">"task"</span><span class="pln"> </span><span class="atn">cancelActivity</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;messageEventDefinition</span><span class="pln"> </span><span class="atn">messageRef</span><span class="pun">=</span><span class="atv">"newCustomerMessage"</span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/boundaryEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        	</p></div><div class="section" title="实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundaryMessageEventExample"></a>实例</h4></div></div></div><p>
			    参考<a class="link" href="#bpmnMessageEventDefinition" title="消息事件定义">消息事件定义</a>章节。
	        </p></div></div><div class="section" title="取消边界事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnBoundaryCancelEvent"></a>取消边界事件</h3></div></div></div><a class="link" href="#experimental" title="试验性功能">
			<span class="bold"><strong>[EXPERIMENTAL]</strong></span>
		</a><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundaryCancelEventDescription"></a>描述</h4></div></div></div><p>
			  在事务性子流程的边界上的中间<span class="emphasis"><em>捕获</em></span>取消，
			  或简称为<span class="bold"><strong>边界取消事件 cancel event</strong></span>，
			  当事务取消时触发。当取消边界事件触发时，首先中断当前作用域的所有执行。
			  然后开始补偿事务内的所有激活的补偿边界事件。
			  补偿是同步执行的。例如，离开事务钱，边界事务会等待补偿执行完毕。
			  当补偿完成后，事务子流程会沿着取消边界事务的外出连线继续执行。
		    </p><p>
		    	<span class="bold"><strong>注意：</strong></span>每个事务子流程只能有一个取消边界事件。
		    </p><p>
		    	<span class="bold"><strong>注意：</strong></span>如果事务子流程包含内嵌子流程，补偿只会触发已经成功完成的子流程。
		    </p><p>
		    	<span class="bold"><strong>注意：</strong></span>如果取消边界子流程对应的事务子流程配置为多实例，
				如果一个实例触发了取消，就会取消所有实例。
		    	instances.
		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundaryCancelEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			  取消边界事件显示为了一个普通的中间事件（圆圈里套小圆圈），在节点的边缘，
			  内部是一个取消小图标。取消图标是白色（无填充），
			  表明是<span class="emphasis"><em>捕获</em></span>语义。
	          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_009.png" align="middle"></div><p>
	        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundarySignalEventXml"></a>XML内容</h4></div></div></div><p>
			    取消边界事件定义为普通<a class="link" href="#bpmnBoundaryEvent" title="边界事件">边界事件</a>：
          		</p><pre class="prettyprint"><span class="tag">&lt;boundaryEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"boundary"</span><span class="pln"> </span><span class="atn">attachedToRef</span><span class="pun">=</span><span class="atv">"transaction"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;cancelEventDefinition</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/boundaryEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
				因为取消边界事件都是中断的，所以不需要使用<code class="code">cancelActivity</code>属性。
        	</p></div></div><div class="section" title="补偿边界事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnBoundaryCompensationEvent"></a>补偿边界事件</h3></div></div></div><a class="link" href="#experimental" title="试验性功能">
			<span class="bold"><strong>[EXPERIMENTAL]</strong></span>
		</a><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundaryCompensationEventDescription"></a>描述</h4></div></div></div><p>
			  节点边界的中间<span class="emphasis"><em>捕获</em></span>补偿，
			  或简称为<span class="bold"><strong>补偿边界事件</strong></span>，
			  可以用来设置一个节点的补偿处理器。
		    </p><p>
				补偿边界事件必须使用直接引用设置唯一的补偿处理器。
		    </p><p>
				补偿边界事件与其他边界事件的策略不同。
				其他边界事件（比如信号边界事件）当到达关联的节点就会被激活。
				离开节点时，就会挂起，对应的事件订阅也会取消。
				补偿边界事件则不同。补偿边界事件在关联的节点<span class="bold"><strong>成功完成</strong></span>时激活。
				当补偿事件触发或对应流程实例结束时，事件订阅才会删除。
				它遵循如下规则：
		    	</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
							补偿触发时，补偿边界事件对应的补偿处理器会调用相同次数，根据它对应的节点的成功次数。
		    			</p></li><li class="listitem"><p>
							如果补偿边界事件关联到多实例节点，
							补偿事件会订阅每个实例。
		    			</p></li><li class="listitem"><p>
							如果补偿边界事件关联的节点中包含循环，
							补偿事件会在每次节点执行时进行订阅。
		    			</p></li><li class="listitem"><p>
							如果流程实例结束，订阅的补偿事件都会结束。
		    			</p></li></ul></div><p>

		    </p><p>
		    	<span class="bold"><strong>注意：</strong></span>补偿边界事件不支持内嵌子流程。
		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundaryCompensationEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			  补偿边界事件显示为标准中间事件（圆圈里套圆圈），位于节点边缘，
			  内部有一个补偿小图标。补偿图标是白色的（无填充），
			  表示<span class="emphasis"><em>捕获</em></span>语义。另外，下面的图形演示了使用无方向的关联，
			  为边界事件设置补偿处理器。
	          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_068.png" align="middle"></div><p>
	        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBoundaryCompensationEventXml"></a>XML内容</h4></div></div></div><p>
			    补偿边界事件定义为标准<a class="link" href="#bpmnBoundaryEvent" title="边界事件">边界事件</a>：
          		</p><pre class="prettyprint"><span class="tag">&lt;boundaryEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"compensateBookHotelEvt"</span><span class="pln"> </span><span class="atn">attachedToRef</span><span class="pun">=</span><span class="atv">"bookHotel"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;compensateEventDefinition</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/boundaryEvent&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;association</span><span class="pln"> </span><span class="atn">associationDirection</span><span class="pun">=</span><span class="atv">"One"</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"a1"</span><span class="pln"> &nbsp;</span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"compensateBookHotelEvt"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"undoBookHotel"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"undoBookHotel"</span><span class="pln"> </span><span class="atn">isForCompensation</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="atn">activiti:class</span><span class="pun">=</span><span class="atv">"..."</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
				因为补偿边界事件在节点成功完成后激活，
				所以不支持<code class="code">cancelActivity</code>属性。
        	</p></div></div><div class="section" title="中间捕获事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnIntermediateCatchingEvent"></a>中间捕获事件</h3></div></div></div><p>
			所有中间捕获事件都使用同样的方式定义：
</p><pre class="prettyprint"><span class="tag">&lt;intermediateCatchEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myIntermediateCatchEvent"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;XXXEventDefinition/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/intermediateCatchEvent&gt;</span></pre><p>
		  </p><p>
		   中间捕获事件的定义包括
		    </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
				  唯一标识（流程范围内）
		        </p></li><li class="listitem"><p>
				  一个结构为<span class="emphasis"><em>XXXEventDefinition</em></span>的XML子元素
				  （比如<span class="emphasis"><em>TimerEventDefinition</em></span>等）
				  定义了中间捕获事件的类型。参考特定的捕获事件类型，
				  获得更多详情。
		        </p></li></ul></div><p>
		  </p></div><div class="section" title="定时中间捕获事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnTimerIntermediateEvent"></a>定时中间捕获事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnTimerIntermediateEventDescription"></a>描述</h4></div></div></div><p>
		  定时中间事件作为一个监听器。当执行到达捕获事件节点，
		  就会启动一个定时器。
		  当定时器触发（比如，一段时间之后），流程就会沿着定时中间事件的外出节点继续执行。
        </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnTimerIntermediateEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			    定时器中间事件显示成标准中间捕获事件，内部是一个定时器小图标。
                </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_029.png" align="middle"></div><p>
              </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnTimerIntermediateEventXml"></a>XML内容</h4></div></div></div><p>

		  定时器中间事件定义为标准<a class="link" href="#bpmnIntermediateCatchingEvent" title="中间捕获事件">中间捕获事件</a>。
		  指定类型的子元素为<span class="bold"><strong>timerEventDefinition</strong></span>元素。
                 </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;intermediateCatchEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"timer"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;timerEventDefinition&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;timeDuration&gt;</span><span class="pln">PT5M</span><span class="tag">&lt;/timeDuration&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/timerEventDefinition&gt;</span></strong></span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/intermediateCatchEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
              参考<a class="link" href="#timerEventDefinitions" title="定时器事件定义">定时器事件定义</a>了解配置信息。

              </p></div></div><div class="section" title="信号中间捕获事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnIntermediateSignalEvent"></a>信号中间捕获事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateSignalEventDescription"></a>描述</h4></div></div></div><p>
			  中间<span class="emphasis"><em>捕获</em></span><a class="link" href="#bpmnSignalEventDefinition" title="信号事件定义">信号</a>事件
			  通过引用信号定义来捕获相同信号名称的信号。
		    </p><p>
		    	<span class="bold"><strong>注意：</strong></span>与其他事件（比如错误事件）不同，信号不会在捕获之后被消费。
				如果你有两个激活的信号边界事件捕获相同的信号事件，两个边界事件都会被触发，
				即便它们在不同的流程实例中。
		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateSignalEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			  中间信号捕获事件显示为一个普通的中间事件（圆圈套圆圈），
			  内部有一个信号小图标。信号小图标是白色的（无填充），
			  表示<span class="emphasis"><em>捕获</em></span>语义。
	          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_064.png" align="middle"></div><p>
	        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateSignalEventXml"></a>XML内容</h4></div></div></div><p>
				信号中间事件定义为普通的<a class="link" href="#bpmnIntermediateCatchingEvent" title="中间捕获事件">中间捕获事件</a>。
				对应类型的子元素是<span class="bold"><strong>signalEventDefinition</strong></span>元素。
                 </p><pre class="prettyprint"><span class="tag">&lt;intermediateCatchEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"signal"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;signalEventDefinition</span><span class="pln"> </span><span class="atn">signalRef</span><span class="pun">=</span><span class="atv">"newCustomerSignal"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br></span><span class="tag">&lt;/intermediateCatchEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
        	</p></div><div class="section" title="实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateSignalEventExample"></a>实例</h4></div></div></div><p>
	        	参考<a class="link" href="#bpmnSignalEventDefinition" title="信号事件定义">信号事件定义</a>章节。
	        </p></div></div><div class="section" title="消息中间捕获事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnIntermediateMessageEvent"></a>消息中间捕获事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateMessageEventDescription"></a>描述</h4></div></div></div><p>
			  一个中间<span class="emphasis"><em>捕获</em></span><a class="link" href="#bpmnMessageEventDefinition" title="消息事件定义">消息</a>事件，捕获特定名称的消息。
		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateMessageEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			  中间捕获消息事件显示为普通中间事件（圆圈套圆圈），
			  内部是一个消息小图标。消息图标是白色的（无填充），
			  表示<span class="emphasis"><em>捕获</em></span>语义。
	          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_046.png" align="middle"></div><p>
	        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateSignalEventXml"></a>XML内容</h4></div></div></div><p>
				 消息中间事件定义为标准<a class="link" href="#bpmnIntermediateCatchingEvent" title="中间捕获事件">中间捕获事件</a>。
				 指定类型的子元素是<span class="bold"><strong>messageEventDefinition</strong></span>元素。
                 </p><pre class="prettyprint"><span class="tag">&lt;intermediateCatchEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"message"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;messageEventDefinition</span><span class="pln"> </span><span class="atn">signalRef</span><span class="pun">=</span><span class="atv">"newCustomerMessage"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br></span><span class="tag">&lt;/intermediateCatchEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
        	</p></div><div class="section" title="实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateMessageEventExample"></a>实例</h4></div></div></div><p>
	        	参考<a class="link" href="#bpmnMessageEventDefinition" title="消息事件定义">消息事件定义</a>章节。
	        </p></div></div><div class="section" title="内部触发事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnIntermediateThrowEvent"></a>内部触发事件</h3></div></div></div><p>
			所有内部触发事件的定义都是同样的：
</p><pre class="prettyprint"><span class="tag">&lt;intermediateThrowEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myIntermediateThrowEvent"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;XXXEventDefinition/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/intermediateThrowEvent&gt;</span></pre><p>
		  </p><p>
		    内部触发事件定义包含
		    </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
				  唯一标识（流程范围）
		        </p></li><li class="listitem"><p>
				  使用格式为<span class="emphasis"><em>XXXEventDefinition</em></span>的XML子元素
				  （比如<span class="emphasis"><em>signalEventDefinition</em></span>等）
				  定义中间触发事件的类型。
				  参考对应触发事件的类型，了解更多信息。
		        </p></li></ul></div><p>
		  </p></div><div class="section" title="中间触发空事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnIntermediateThrowNoneEvent"></a>中间触发空事件</h3></div></div></div><p>
		  下面的流程图演示了一个空中间触发事件的例子，
		  它通常用于表示流程中的某个状态。

          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_017.png" align="middle"></div><p>

		  通过添加<a class="link" href="#">执行监听器</a>，就可以很好地监控一些KPI。

</p><pre class="prettyprint"><span class="tag">&lt;intermediateThrowEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"noneEvent"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:executionListener</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.test.bpmn.event.IntermediateNoneEventTest$MyExecutionListener"</span><span class="pln"> </span><span class="atn">event</span><span class="pun">=</span><span class="atv">"start"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/intermediateThrowEvent&gt;</span></pre><p>

		  这里你可以添加自己的代码，把事件发送给BAM工具或DWH。引擎不会为这个事件做任何事情，
		  它直接径直通过。
        </p></div><div class="section" title="信号中间触发事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnIntermediateThrowSignalEvent"></a>信号中间触发事件</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateThrowSignalEventDescription"></a>描述</h4></div></div></div><p>
			  中间<span class="emphasis"><em>触发</em></span><a class="link" href="#bpmnSignalEventDefinition" title="信号事件定义">信号</a>事件为定义的信号抛出一个信号事件。
		    </p><p>
				在activiti中，信号会广播到所有激活的处理器中（比如，所以捕获信号事件）。
				信号可以通过同步和异步方式发布。
		    	</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
							默认配置下，信号是<span class="bold"><strong>同步</strong></span>发送的。就是说，
							抛出事件的流程实例会等到信号发送给所有捕获流程实例才继续执行。
							捕获流程实例也会在触发流程实例的同一个事务中执行，
							意味着如果某个监听流程出现了技术问题（抛出异常），所有相关的实例都会失败。
		    			</p></li><li class="listitem"><p>
							信号也可以<span class="bold"><strong>异步</strong></span>发送。这时它会在到达抛出信号事件后决定哪些处理器是激活的。
							对这些激活的处理器，会保存一个异步提醒消息（任务），并发送给jobExecutor。
		    			</p></li></ul></div><p>

		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateThrowSignalEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			  中间信号触发事件显示为普通中间事件（圆圈套圆圈），
			  内部又一个信号小图标。信号图标是黑色的（有填充），
			  表示<span class="emphasis"><em>触发</em></span>语义。
	          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_055.png" align="middle"></div><p>
	        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateThrowSignalEventXml"></a>XML内容</h4></div></div></div><p>
			     消息中间事件定义为标准<a class="link" href="#">中间触发事件</a>。
				 指定类型的子元素是<span class="bold"><strong>signalEventDefinition</strong></span>元素。
                 </p><pre class="prettyprint"><span class="tag">&lt;intermediateThrowEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"signal"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;signalEventDefinition</span><span class="pln"> </span><span class="atn">signalRef</span><span class="pun">=</span><span class="atv">"newCustomerSignal"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br></span><span class="tag">&lt;/intermediateThrowEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
        	</p><p>
        		异步信号事件如下所示：
        		</p><pre class="prettyprint"><span class="tag">&lt;intermediateThrowEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"signal"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;signalEventDefinition</span><span class="pln"> </span><span class="atn">signalRef</span><span class="pun">=</span><span class="atv">"newCustomerSignal"</span><span class="pln"> </span><span class="atn">activiti:async</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br></span><span class="tag">&lt;/intermediateThrowEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
        	</p></div><div class="section" title="实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateSignalEventExample"></a>实例</h4></div></div></div><p>
	        	参考<a class="link" href="#bpmnSignalEventDefinition" title="信号事件定义">信号事件定义</a>章节。
	        </p></div></div><div class="section" title="补偿中间触发事件"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnIntermediateThrowCompensationEvent"></a>补偿中间触发事件</h3></div></div></div><a class="link" href="#experimental" title="试验性功能">
			<span class="bold"><strong>[EXPERIMENTAL]</strong></span>
		</a><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateThrowCompensationEventDescription"></a>描述</h4></div></div></div><p>
			  中间<span class="emphasis"><em>触发</em></span><a class="link" href="#">补偿</a>事件
			  可以用来触发补偿。
		    </p><p>
		   		<span class="bold"><strong>触发补偿：</strong></span>
				补偿可以由特定节点或包含补偿事件的作用域触发。
				补偿是通过分配给节点的补偿处理器来完成的。
		   		</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
							当补偿由节点触发，对应的补偿处理器会根据节点成功完成的次数执行相同次数。
					   	</p></li><li class="listitem"><p>
							如果补偿由当前作用域触发，当前作用域的所有节点都会执行补偿，
							也包含并发分支。
					   	</p></li><li class="listitem"><p>
							补偿的触发是继承式的：如果执行补偿的节点是子流程，补偿会作用到子流程中包含的所有节点。
							如果子流程是内嵌节点，补偿会递归触发。
							然而，补偿不会传播到流程的上层：
							如果补偿在子流程中触发，不会传播到子流程范围外。
							bpmn规范定义，由节点触发的流程只会作用到“子流程同一级别”。
						</p></li><li class="listitem"><p>
							activiti的补偿执行次序与流程执行顺序相反。
							以为着最后完成的节点会最先执行补偿，诸如此类。
						</p></li><li class="listitem"><p>
							中间触发补偿事件可以用来补偿成功完成的事务性子流程。
						</p></li></ul></div><p>
		   	</p><p>
				<span class="bold"><strong>注意：</strong></span>
				如果补偿被一个包含子流程的作用域触发，子流程还包含了关联补偿处理器的节点，
				补偿只会传播到子流程，如果它已经成功完成了。
				如果子流程中的节点也完成了，并关联了补偿处理器，
				如果子流程包含的这些节点还没有完成，就不会执行补偿处理器。
				参考下面实例：
				</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_008.png" align="middle"></div><p>
				这个流程中，我们有两个并发分支，一些分支时内嵌子流程，一个是“使用信用卡”节点。
				假设两个分支都启动了，第一个分支等待用户完成“审核预定”任务。第二个分支执行“使用信用卡”节点，
				并发生了一个错误，这导致“取消预定”事件，并触发补偿。
				这时，并发子流程还没有结束，意味着补偿事件不会传播给子流程，
				所以“取消旅店预定”这个补偿处理器不会执行。
				如果用户任务（就是内嵌子流程）在“取消预定”之前完成了，
				补偿就会传播给内嵌子流程。
			</p><p>
				<span class="bold"><strong>流程变量：</strong></span>
				当补偿内嵌子流程时，用来执行补偿处理器的分支可以访问子流程的本地流程实例，
				因为这时它是子流程完成的分支。
				为了实现这个功能，流程变量的快照会分配给分支（为执行子流程而创建的分支）。
				为此，有以下限制条件：
				</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
							补偿处理器无法访问子流程内部创建的，添加到同步分支的变量。
						</p></li><li class="listitem"><p>
							分配给分支的流程变量在继承关系上层的（分配给流程实例的流程变量没有包含在快照中）：
							补偿触发时，补偿处理器通过它们所在的地方访问这些流程变量。
						</p></li><li class="listitem"><p>
							变量快照只用于内嵌子流程，不适用其他节点。
						</p></li></ul></div><p>
			</p><p>
				<span class="bold"><strong>已知限制：</strong></span>
				</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
							<code class="code">waitForCompletion="false"</code>还不支持。当补偿使用中间触发补偿事件触发时，
							事件没有等待，在补偿成功结束后。
						 </p></li><li class="listitem"><p>
							补偿自己由并发分支执行。并发分支的执行顺序与被补偿的节点完成次序相反。
							未来activiti可能支持选项来顺序执行补偿。
						</p></li><li class="listitem"><p>
							补偿不会传播给callActivity调用的子流程实例。
						</p></li></ul></div><p>
			</p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateThrowCompensationEventGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			  中间补偿触发事件显示为标准中间事件（圆圈套圆圈），
			  内部是一个补偿小图标。补偿图标是黑色的（有填充），
			  表示<span class="emphasis"><em>触发</em></span>语义。
	          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_051.png" align="middle"></div><p>
	        </p></div><div class="section" title="Xml内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnIntermediateThrowSignalEventXml"></a>Xml内容</h4></div></div></div><p>
				 补偿中间事件定义为普通的<a class="link" href="#">中间触发事件</a>。
				 对应类型的子元素是<span class="bold"><strong>compensateEventDefinition</strong></span>元素。
                 </p><pre class="prettyprint"><span class="tag">&lt;intermediateThrowEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"throwCompensation"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;compensateEventDefinition</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/intermediateThrowEvent&gt;</span></pre><p>
                 另外，可选参数<code class="code">activityRef</code>可以用来触发特定作用域/节点的补偿：
                  </p><pre class="prettyprint"><span class="tag">&lt;intermediateThrowEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"throwCompensation"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;compensateEventDefinition</span><span class="pln"> </span><span class="atn">activityRef</span><span class="pun">=</span><span class="atv">"bookHotel"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/intermediateThrowEvent&gt;</span></pre><p>
        	</p></div></div></div><div class="section" title="顺序流"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="bpmnSequenceFlow"></a>顺序流</h2></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h3 class="title"><a name="sequenceFlowDescription"></a>描述</h3></div></div></div><p>
		  顺序流是连接两个流程节点的连线。
		  流程执行完一个节点后，会沿着节点的所有外出顺序流继续执行。
		  就是说，BPMN 2.0默认的行为就是并发的：
		  两个外出顺序流会创造两个单独的，并发流程分支。
        </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h3 class="title"><a name="sequenceFlowGraphicalNotation"></a>图形标记</h3></div></div></div><p>
		  顺序流显示为从起点到终点的箭头。
		  箭头总是指向终点。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_023.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h3 class="title"><a name="sequenceFlowXml"></a>XML内容</h3></div></div></div><p>
		  顺序流需要流程范围内唯一的<span class="bold"><strong>id</strong></span>，
		  以及对<span class="bold"><strong>起点</strong></span>与
		  <span class="bold"><strong>终点</strong></span>元素的引用。
          </p><pre class="prettyprint"><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow1"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theTask"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
        </p></div><div class="section" title="条件顺序流"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnConditionalSequenceFlow"></a>条件顺序流</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="condSeqFlowDescription"></a>描述</h4></div></div></div><p>
		  可以为顺序流定义一个条件。离开一个BPMN 2.0节点时，
		  默认会计算外出顺序流的条件。
		  如果条件结果为<span class="emphasis"><em>true</em></span>,
		  就会选择外出顺序流继续执行。当多条顺序流被选中时，
		  就会创建多条<span class="emphasis"><em>分支</em></span>，
		  流程会继续以并行方式继续执行。
        </p><p>
          <span class="bold"><strong>注意：</strong></span>上面的讨论仅涉及BPMN 2.0节点（和事件），
		  不包括网关。网关会用特定的方式处理顺序流中的条件，
		  这与网关类型相关。
        </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="conditionalSequenceFlowGraphicalNotation"></a>图形标记</h4></div></div></div><p>
		  条件顺序流显示为一个正常的顺序流，不过在起点有一个菱形。
		  条件表达式也会显示在顺序流上。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_041.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="conditionalSequenceFlowXml"></a>XML内容</h4></div></div></div><p>
		  条件顺序流定义为一个正常的顺序流，
		  包含<span class="bold"><strong>conditionExpression</strong></span>子元素。
		  注意目前只支持<span class="emphasis"><em>tFormalExpressions</em></span>，
		  如果没有设置<span class="emphasis"><em>xsi:type=""</em></span>,
		  就会默认值支持目前支持的表达式类型。
          </p><pre class="prettyprint"><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theTask"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &lt;![CDATA[${order.price &gt; 100 &amp;&amp; order.price &lt; 250}]]&gt;<br>&nbsp; </span><span class="tag">&lt;/conditionExpression&gt;</span><span class="pln"><br></span><span class="tag">&lt;/sequenceFlow&gt;</span></pre><p>
        </p><p>
		  当前条件表达式<span class="bold"><strong>只能使用UEL</strong></span>，
		  可以参考<a class="link" href="#apiExpressions" title="表达式">表达式章节</a>获取更多信息。
		  使用的表达式需要返回boolean值，否则会在解析表达式时抛出异常。
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
			    下面的例子引用了流程变量的数据，
				通过getter调用JavaBean。
              </p><p>
</p><pre class="prettyprint"><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &lt;![CDATA[${order.price &gt; 100 &amp;&amp; order.price &lt; 250}]]&gt;<br></span><span class="tag">&lt;/conditionExpression&gt;</span></pre><p>
              </p></li><li class="listitem"><p>
			    这个例子通过调用方法返回一个boolean值。
</p><pre class="prettyprint"><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &lt;![CDATA[${order.isStandardOrder()}]]&gt;<br></span><span class="tag">&lt;/conditionExpression&gt;</span></pre><p>
              </p></li></ul></div><p>

        </p><p>
		  在activiti发布包中，包含以下流程实例，使用了值和方法表达式
		  （参考<span class="emphasis"><em>org.activiti.examples.bpmn.expression)</em></span>包）：
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_066.png" align="middle"></div><p>
        </p></div></div><div class="section" title="默认顺序流"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnDefaultSequenceFlow"></a>默认顺序流</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnDefaultSequenceFlowDescription"></a>描述</h4></div></div></div><p>
		  所有的BPMN 2.0任务和网关都可以设置一个<span class="bold"><strong>默认顺序流</strong></span>。
		  只有在节点的其他外出顺序流不能被选中是，才会使用它作为外出顺序流继续执行。
		  默认顺序流的条件设置不会生效。
        </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnDefaultSequenceFlowGraphicalNotation"></a>图形标记</h4></div></div></div><p>
		  默认顺序流显示为了普通顺序流，起点有一个“斜线”标记。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_019.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnDefaultSequenceFlowXmlRepresentation"></a>XML内容</h4></div></div></div><p>
		  默认顺序流通过对应节点的<span class="bold"><strong>default属性</strong></span>定义。
		  下面的XML代码演示了排他网关设置了默认顺序流<span class="emphasis"><em>flow 2</em></span>。
		  只有当<span class="emphasis"><em>conditionA</em></span>和<span class="emphasis"><em>conditionB</em></span>都返回false时，
		  才会选择它作为外出连线继续执行。
          </p><pre class="prettyprint"><span class="tag">&lt;exclusiveGateway</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"exclusiveGw"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Exclusive Gateway"</span><span class="pln"> </span><span class="bold"><strong><span class="atn">default</span><span class="pun">=</span><span class="atv">"flow2"</span></strong></span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow1"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"exclusiveGw"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"task1"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln">${conditionA}</span><span class="tag">&lt;/conditionExpression&gt;</span><span class="pln"><br></span><span class="tag">&lt;/sequenceFlow&gt;</span><span class="pln"><br></span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow2"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"exclusiveGw"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"task2"</span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow3"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"exclusiveGw"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"task3"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln">${conditionB}</span><span class="tag">&lt;/conditionExpression&gt;</span><span class="pln"><br></span><span class="tag">&lt;/sequenceFlow&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		  对应下面的图形显示：
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_058.png" align="middle"></div><p>
        </p></div></div></div><div class="section" title="网关"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="bpmnGateways"></a>网关</h2></div></div></div><p>
	    网关用来控制流程的流向（或像BPMN 2.0里描述的那样，流程的<span class="emphasis"><em>tokens</em></span>。）
		网关可以<span class="emphasis"><em>消费</em></span>也可以<span class="emphasis"><em>生成</em></span>token。
      </p><p>
	    网关显示成菱形图形，内部有有一个小图标。
		图标表示网关的类型。
        </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_054.png" align="middle"></div><p>
      </p><div class="section" title="排他网关"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnExclusiveGateway"></a>排他网关</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="exclusiveGatewayDescription"></a>描述</h4></div></div></div><p>
		  排他网关（也叫<span class="emphasis"><em>异或（XOR）网关</em></span>，或更技术性的叫法
		  <span class="emphasis"><em>基于数据的排他网关</em></span>），
		  用来在流程中实现<span class="bold"><strong>决策</strong></span>。
		  当流程执行到这个网关，所有外出顺序流都会被处理一遍。
		  其中条件解析为true的顺序流（或者没有设置条件，概念上在顺序流上定义了一个<span class="emphasis"><em>'true'</em></span>）
		  会被选中，让流程继续运行。
        </p><p>
          <span class="bold"><strong>注意这里的外出顺序流
		  与BPMN 2.0通常的概念是不同的。通常情况下，所有条件结果为true的顺序流
		  都会被选中，以并行方式执行，但排他网关只会选择一条顺序流执行。
		  就是说，虽然多个顺序流的条件结果为true，
		  那么XML中的第一个顺序流（也只有这一条）会被选中，并用来继续运行流程。
		  如果没有选中任何顺序流，会抛出一个异常。</strong></span>
        </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="exclusiveGatewayGraphNotation"></a>图形标记</h4></div></div></div><p>
		  排他网关显示成一个普通网关（比如，菱形图形），
		  内部是一个“X”图标，表示<span class="emphasis"><em>异或（XOR）</em></span>语义。
		  注意，没有内部图标的网关，默认为排他网关。
		  BPMN 2.0规范不允许在同一个流程定义中同时使用没有X和有X的菱形图形。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_059.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="exclusiveGatewayXML"></a>XML内容</h4></div></div></div><p>
		  排他网关的XML内容是很直接的：用一行定义了网关，
		  条件表达式定义在外出顺序流中。
		  参考<a class="link" href="#bpmnConditionalSequenceFlow" title="条件顺序流">条件顺序流</a>
		  获得这些表达式的可用配置。
       </p><p>
	      参考下面模型实例：
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_003.png" align="middle"></div><p>
          它对应的XML内容如下：
          </p><pre class="prettyprint"><span class="tag">&lt;exclusiveGateway</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"exclusiveGw"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Exclusive Gateway"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow2"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"exclusiveGw"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theTask1"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln">${input == 1}</span><span class="tag">&lt;/conditionExpression&gt;</span><span class="pln"><br></span><span class="tag">&lt;/sequenceFlow&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow3"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"exclusiveGw"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theTask2"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln">${input == 2}</span><span class="tag">&lt;/conditionExpression&gt;</span><span class="pln"><br></span><span class="tag">&lt;/sequenceFlow&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow4"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"exclusiveGw"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theTask3"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln">${input == 3}</span><span class="tag">&lt;/conditionExpression&gt;</span><span class="pln"><br></span><span class="tag">&lt;/sequenceFlow&gt;</span></pre><p>
        </p></div></div><div class="section" title="并行网关"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnParallelGateway"></a>并行网关</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnParallelGatewayDescription"></a>描述</h4></div></div></div><p>
		  网关也可以表示流程中的并行情况。最简单的并行网关是
		  <span class="bold"><strong>并行网关</strong></span>，它允许将流程
		  <span class="emphasis"><em>分</em></span>成多条分支，也可以把多条分支
		  <span class="emphasis"><em>汇聚</em></span>到一起。
          of execution.
        </p><p>
		  并行网关的功能是基于进入和外出的顺序流的：
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                <span class="bold"><strong>分支：</strong></span>
				并行后的所有外出顺序流，为每个顺序流都创建一个并发分支。
              </p></li><li class="listitem"><p>
                <span class="bold"><strong>汇聚：</strong></span>
				所有到达并行网关，在此等待的进入分支，
				直到所有进入顺序流的分支都到达以后，
				流程就会通过汇聚网关。
              </p></li></ul></div><p>
		  注意，如果同一个并行网关有多个进入和多个外出顺序流，
		  它就同时具有<span class="bold"><strong>分支和汇聚功能</strong></span>。
		  这时，网关会先汇聚所有进入的顺序流，然后再切分成多个并行分支。
        </p><p>
          <span class="bold"><strong>与其他网关的主要区别是，并行网关不会解析条件。
		  即使顺序流中定义了条件，也会被忽略。</strong></span>
        </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnParallelGatewayGraphicalNotation"></a>图形标记</h4></div></div></div><p>
		  并行网关显示成一个普通网关（菱形）内部是一个“加号”图标，
		  表示“与（AND）”语义。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_012.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnParallelGatewayyXML"></a>XML内容</h4></div></div></div><p>
		  定义并行网关只需要一行XML：
          </p><pre class="prettyprint"><span class="tag">&lt;parallelGateway</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myParallelGateway"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
		  实际发生的行为（分支，聚合，同时分支聚合），
		  要根据并行网关的顺序流来决定。
        </p><p>
		  参考如下代码：
</p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow1"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"fork"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;parallelGateway</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"fork"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"fork"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"receivePayment"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"fork"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"shipOrder"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"receivePayment"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Receive Payment"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"receivePayment"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"join"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"shipOrder"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Ship Order"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"shipOrder"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"join"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;parallelGateway</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"join"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"join"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"archiveOrder"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"archiveOrder"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Archive Order"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"archiveOrder"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
        </p><p>
		  上面例子中，流程启动之后，会创建两个任务：
          </p><pre class="prettyprint"><span class="typ">ProcessInstance</span><span class="pln"> pi </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"forkJoin"</span><span class="pun">);</span><span class="pln"><br></span><span class="typ">TaskQuery</span><span class="pln"> query </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">.</span><span class="pln">processInstanceId</span><span class="pun">(</span><span class="pln">pi</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">())</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">.</span><span class="pln">orderByTaskName</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">.</span><span class="pln">asc</span><span class="pun">();</span><span class="pln"><br><br></span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Task</span><span class="pun">&gt;</span><span class="pln"> tasks </span><span class="pun">=</span><span class="pln"> query</span><span class="pun">.</span><span class="pln">list</span><span class="pun">();</span><span class="pln"><br>assertEquals</span><span class="pun">(</span><span class="lit">2</span><span class="pun">,</span><span class="pln"> tasks</span><span class="pun">.</span><span class="pln">size</span><span class="pun">());</span><span class="pln"><br><br></span><span class="typ">Task</span><span class="pln"> task1 </span><span class="pun">=</span><span class="pln"> tasks</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="lit">0</span><span class="pun">);</span><span class="pln"><br>assertEquals</span><span class="pun">(</span><span class="str">"Receive Payment"</span><span class="pun">,</span><span class="pln"> task1</span><span class="pun">.</span><span class="pln">getName</span><span class="pun">());</span><span class="pln"><br></span><span class="typ">Task</span><span class="pln"> task2 </span><span class="pun">=</span><span class="pln"> tasks</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="lit">1</span><span class="pun">);</span><span class="pln"><br>assertEquals</span><span class="pun">(</span><span class="str">"Ship Order"</span><span class="pun">,</span><span class="pln"> task2</span><span class="pun">.</span><span class="pln">getName</span><span class="pun">());</span></pre><p>
		  当两个任务都完成时，第二个并行网关会汇聚两个分支，因为它只有一条外出连线，
		  不会创建并行分支，
		  只会创建<span class="emphasis"><em>归档订单</em></span>任务。
        </p><p>
		  注意并行网关不需要是“平衡的”（比如，
		  对应并行网关的进入和外出节点数目相等）。
		  并行网关只是等待所有进入顺序流，并为每个外出顺序流创建并发分支，
		  不会受到其他流程节点的影响。
		  所以下面的流程在BPMN 2.0中是合法的：
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_060.png" align="middle"></div><p>
        </p></div></div><div class="section" title="包含网关"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnInclusiveGateway"></a>包含网关</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnInclusiveGatewayDescription"></a>描述</h4></div></div></div><p>
		  <span class="bold"><strong>包含网关</strong></span>可以看做是排他网关和并行网关的结合体。
		  和排他网关一样，你可以在外出顺序流上定义条件，包含网关会解析它们。
		  但是主要的区别是包含网关可以选择多于一条顺序流，这和并行网关一样。
        </p><p>
		  包含网关的功能是基于进入和外出顺序流的：
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                <span class="bold"><strong>分支：</strong></span>
				所有外出顺序流的条件都会被解析，结果为true的顺序流会以并行方式继续执行，
				会为每个顺序流创建一个分支。
              </p></li><li class="listitem"><p>
                <span class="bold"><strong>汇聚：</strong></span>
				所有并行分支到达包含网关，会进入等待章台，
				直到每个包含流程token的进入顺序流的分支都到达。
				这是与并行网关的最大不同。换句话说，包含网关只会等待被选中执行了的进入顺序流。
				在汇聚之后，流程会穿过包含网关继续执行。
              </p></li></ul></div><p>
		  注意，如果同一个包含节点拥有多个进入和外出顺序流，
		  它就会同时<span class="bold"><strong>含有分支和汇聚功能</strong></span>。
		  这时，网关会先汇聚所有拥有流程token的进入顺序流，
		  再根据条件判断结果为true的外出顺序流，为它们生成多条并行分支。
        </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnInclusiveGatewayGraphicalNotation"></a>图形标记</h4></div></div></div><p>
		  并行网关显示为一个普通网关（菱形），内部包含一个圆圈图标。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_026.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnInclusiveGatewayXML"></a>XML内容</h4></div></div></div><p>
		  定义一个包含网关需要一行XML：
          </p><pre class="prettyprint"><span class="tag">&lt;inclusiveGateway</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myInclusiveGateway"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
		  实际的行为（分支，汇聚或同时分支汇聚），
		  是由连接在包含网关的顺序流决定的。
        </p><p>
		  参考如下代码：
</p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow1"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"fork"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;inclusiveGateway</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"fork"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"fork"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"receivePayment"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln">${paymentReceived == false}</span><span class="tag">&lt;/conditionExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/sequenceFlow&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"fork"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"shipOrder"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln">${shipOrder == true}</span><span class="tag">&lt;/conditionExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/sequenceFlow&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"receivePayment"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Receive Payment"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"receivePayment"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"join"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"shipOrder"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Ship Order"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"shipOrder"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"join"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;inclusiveGateway</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"join"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"join"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"archiveOrder"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"archiveOrder"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Archive Order"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"archiveOrder"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
        </p><p>
		  在上面的例子中，流程开始之后，如果流程变量为paymentReceived == false和shipOrder == true，
		  就会创建两个任务。如果，只有一个流程变量为true，就会只创建一个任务。
		  如果没有条件为true，就会抛出一个异常。
		  如果想避免异常，可以定义一个默认顺序流。下面的例子中，会创建一个任务，发货任务：
          </p><pre class="prettyprint"><span class="typ">HashMap</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> variableMap </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">HashMap</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; variableMap</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="str">"receivedPayment"</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; variableMap</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="str">"shipOrder"</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">ProcessInstance</span><span class="pln"> pi </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"forkJoin"</span><span class="pun">);</span><span class="pln"><br></span><span class="typ">TaskQuery</span><span class="pln"> query </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">.</span><span class="pln">processInstanceId</span><span class="pun">(</span><span class="pln">pi</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">())</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">.</span><span class="pln">orderByTaskName</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">.</span><span class="pln">asc</span><span class="pun">();</span><span class="pln"><br><br></span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Task</span><span class="pun">&gt;</span><span class="pln"> tasks </span><span class="pun">=</span><span class="pln"> query</span><span class="pun">.</span><span class="pln">list</span><span class="pun">();</span><span class="pln"><br>assertEquals</span><span class="pun">(</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> tasks</span><span class="pun">.</span><span class="pln">size</span><span class="pun">());</span><span class="pln"><br><br></span><span class="typ">Task</span><span class="pln"> task </span><span class="pun">=</span><span class="pln"> tasks</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="lit">0</span><span class="pun">);</span><span class="pln"><br>assertEquals</span><span class="pun">(</span><span class="str">"Ship Order"</span><span class="pun">,</span><span class="pln"> task</span><span class="pun">.</span><span class="pln">getName</span><span class="pun">());</span></pre><p>
		  当任务完成后，第二个包含网关会汇聚两个分支，
		  因为只有一个外出顺序流，所以不会创建并行分支，
		  只有<span class="emphasis"><em>归档订单</em></span>任务会被激活。
        </p><p>
		  注意，包含网关不需要“平衡”（比如，
		  对应包含网关的进入和外出数目需要相等）。
		  包含网关会等待所有进入顺序流完成，
		  并为每个外出顺序流创建并行分支，
		  不会受到流程中其他元素的影响。
        </p></div></div><div class="section" title="基于事件网关"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnEventbasedGateway"></a>基于事件网关</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="eventBasedGatewayDescription"></a>描述</h4></div></div></div><p>
			基于事件网关允许根据事件判断流向。网关的每个外出顺序流都要连接到一个中间捕获事件。
			当流程到达一个基于事件网关，网关会进入等待状态：会暂停执行。
			与此同时，会为每个外出顺序流创建相对的事件订阅。
        </p><p>
			注意基于事件网关的外出顺序流和普通顺序流不同。这些顺序流不会真的"执行"。
			相反，它们让流程引擎去决定执行到基于事件网关的流程需要订阅哪些事件。
			要考虑以下条件：
        	</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
						基于事件网关必须有两条或以上外出顺序流。
        			</p></li><li class="listitem"><p>
						基于事件网关后，只能使用<code class="code">intermediateCatchEvent</code>类型。
						（activiti不支持基于事件网关后连接ReceiveTask。）
        			</p></li><li class="listitem"><p>
						连接到基于事件网关的<code class="code">intermediateCatchEvent</code>只能有一条进入顺序流。
        			</p></li></ul></div><p>

        </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="eventBasedGatewayGraphNotation"></a>图形标记</h4></div></div></div><p>
		  基于事件网关和其他BPMN网关一样显示成一个菱形，
		  内部包含指定图标。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_063.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="eventBasedGatewayXML"></a>XML内容</h4></div></div></div><p>
		  用来定义基于事件网关的XML元素是<code class="code">eventBasedGateway</code>。
        </p></div><div class="section" title="实例"><div class="titlepage"><div><div><h4 class="title"><a name="eventBasedGatewayExample"></a>实例</h4></div></div></div><p>
			下面的流程是一个使用基于事件网关的例子。当流程执行到基于事件网关时，
			流程会暂停执行。与此同时，流程实例会订阅警告信号事件，并创建一个10分钟后触发的定时器。
			这会产生流程引擎为一个信号事件等待10分钟的效果。如果10分钟内发出信号，定时器就会取消，流程会沿着信号执行。
			如果信号没有出现，流程会沿着定时器的方向前进，信号订阅会被取消。

	      	</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_013.png" align="middle"></div><p>
</p><pre class="prettyprint"><span class="tag">&lt;definitions</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"definitions"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/BPMN/20100524/MODEL"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">xmlns:activiti</span><span class="pun">=</span><span class="atv">"http://activiti.org/bpmn"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">targetNamespace</span><span class="pun">=</span><span class="atv">"Examples"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;signal</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"alertSignal"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"alert"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"catchSignal"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"start"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"start"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"gw1"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;eventBasedGateway</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"gw1"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"gw1"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"signalEvent"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"gw1"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"timerEvent"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;intermediateCatchEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"signalEvent"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Alert"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;signalEventDefinition</span><span class="pln"> </span><span class="atn">signalRef</span><span class="pun">=</span><span class="atv">"alertSignal"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/intermediateCatchEvent&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;intermediateCatchEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"timerEvent"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Alert"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;timerEventDefinition&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;timeDuration&gt;</span><span class="pln">PT10M</span><span class="tag">&lt;/timeDuration&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/timerEventDefinition&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/intermediateCatchEvent&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"timerEvent"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"exGw1"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"signalEvent"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"task"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"task"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Handle alert"</span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;exclusiveGateway</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"exGw1"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"task"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"exGw1"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"exGw1"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"end"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"end"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/process&gt;</span><span class="pln"><br></span><span class="tag">&lt;/definitions&gt;</span></pre><p>
      	</p></div></div></div><div class="section" title="任务"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="bpmnTask"></a> 任务</h2></div></div></div><div class="section" title="用户任务"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnUserTask"></a>用户任务</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnUserTaskDescription"></a>描述</h4></div></div></div><p>
			   用户任务用来设置必须由人员完成的工作。
			   当流程执行到用户任务，会创建一个新任务，
			   并把这个新任务加入到分配人或群组的任务列表中。
			 </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnUserTaskGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			   用户任务显示成一个普通任务（圆角矩形），左上角有一个小用户图标。
			   </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_011.png" align="middle"></div><p>
			 </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnUserTaskXml"></a>XML内容</h4></div></div></div><p>
				  XML中的用户任务定义如下。<span class="emphasis"><em>id</em></span>属性是必须的。
				  <span class="emphasis"><em>name</em></span>属性是可选的。
				  </p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Important task"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
				</p><p>
				用户任务也可以设置描述。实际上所有BPMN 2.0元素都可以设置描述。
				添加<span class="bold"><strong>documentation</strong></span>元素可以定义描述。
				  </p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Schedule meeting"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;documentation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Schedule an engineering meeting for next week with the new hire.<br>&nbsp; </span><span class="tag">&lt;/documentation&gt;</span></pre><p>

				  描述文本可以通过标准的java方法来获得：
				  </p><pre class="prettyprint"><span class="pln">task</span><span class="pun">.</span><span class="pln">getDescription</span><span class="pun">()</span></pre><p>
				</p></div><div class="section" title="持续时间"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnUserTaskDueDate"></a>持续时间</h4></div></div></div><p>
			    任务可以用一个字段来描述任务的持续时间。可以使用查询API来对持续时间进行搜索，
				根据在时间之前或之后进行搜索。
              </p><p>
			    我们提供了一个节点扩展，在任务定义中设置一个表达式，
				这样在任务创建时就可以为它设置初始持续时间。表达式<span class="bold"><strong>应该是<code class="literal">java.util.Date</code>，
				<code class="literal">java.util.String (ISO8601格式)</code>，ISO8601 持续时间 (比如PT50M)或<code class="literal">null</code></strong></span>。
				例如：你可以在流程中使用上述格式输入日期，或在前一个服务任务中计算一个时间。
				这里使用了持续时间，持续时间会基于当前时间进行计算，再通过给定的时间段累加。
				比如，使用"PT30M"作为持续时间，任务就会从现在开始持续30分钟。
              </p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Important task"</span><span class="pln"> </span><span class="bold"><strong><span class="atn">activiti:dueDate</span><span class="pun">=</span><span class="atv">"${dateVariable}"</span></strong></span><span class="tag">/&gt;</span></pre></div><p>
			  任务的持续时间也可以通过<code class="literal">TaskService</code>修改，
			  或在<code class="literal">TaskListener</code>中通过传入的<code class="literal">DelegateTask</code>参数修改。
            </p><div class="section" title="用户分配"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnUserTaskAssignment"></a>用户分配</h4></div></div></div><p>
				  用户任务可以直接分配给一个用户。
				  这可以通过<span class="bold"><strong>humanPerformer</strong></span>元素定义。
				  <span class="emphasis"><em>humanPerformer</em></span>定义需要一个
				  <span class="bold"><strong>resourceAssignmentExpression</strong></span>来实际定义用户。
				  当前，只支持<span class="bold"><strong>formalExpressions</strong></span>。
				  </p><pre class="prettyprint"><span class="tag">&lt;process</span><span class="pln"> ... </span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; ...<br><br>&nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'theTask'</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">'important task'</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;humanPerformer&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;formalExpression&gt;</span><span class="pln">kermit</span><span class="tag">&lt;/formalExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/humanPerformer&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/userTask&gt;</span></pre><p>
				</p><p>
				  <span class="bold"><strong>只有一个</strong></span>用户可以坐拥任务的执行者分配给用户。
				  在activiti中，用户叫做<span class="bold"><strong>执行者</strong></span>。
				  拥有执行者的用户不会出现在其他人的任务列表中，
				  只能出现执行者的<span class="bold"><strong>个人任务列表</strong></span>中。
				</p><p>
				  直接分配给用户的任务可以通过TaskService像下面这样获取：
				  </p><pre class="prettyprint"><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Task</span><span class="pun">&gt;</span><span class="pln"> tasks </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">taskAssignee</span><span class="pun">(</span><span class="str">"kermit"</span><span class="pun">).</span><span class="pln">list</span><span class="pun">();</span></pre><p>
				</p><p>
		  任务也可以加入到人员的<span class="bold"><strong>候选任务列表</strong></span>中。
		  这时，需要使用<span class="bold"><strong>potentialOwner</strong></span>元素。
		  用法和<span class="emphasis"><em>humanPerformer</em></span>元素类似。注意它需要指定表达式中的每个项目是人员还是群组
		  （引擎猜不出来）。
          </p><pre class="prettyprint"><span class="tag">&lt;process</span><span class="pln"> ... </span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; ...<br><br>&nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'theTask'</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">'important task'</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;potentialOwner&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;formalExpression&gt;</span><span class="pln">user(kermit), group(management)</span><span class="tag">&lt;/formalExpression&gt;</span></strong></span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/potentialOwner&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/userTask&gt;</span></pre><p>
        </p><p>
		  使用<span class="emphasis"><em>potentialOwner</em></span>元素定义的任务，可以像下面这样获取
		  （使用<span class="emphasis"><em>TaskQuery</em></span>的发那个发与查询设置了执行者的任务类似）：
          </p><pre class="prettyprint"><span class="pln">&nbsp;</span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Task</span><span class="pun">&gt;</span><span class="pln"> tasks </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">taskCandidateUser</span><span class="pun">(</span><span class="str">"kermit"</span><span class="pun">);</span></pre><p>

		  这会获取所有kermit为<span class="bold"><strong>候选人</strong></span>的任务，
		  例如：表达式中包含<span class="emphasis"><em>user(kermit)</em></span>。
		  这也会获得所有<span class="bold"><strong>分配包含kermit这个成员的群组</strong></span>
		  （比如，<span class="emphasis"><em>group(management)</em></span>，前提是kermit是这个组的成员，
		  并且使用了activiti的账号组件）。
		  用户所在的群组是在运行阶段获取的，它们可以通过
		  <a class="link" href="#apiEngine" title="流程引擎的API和服务">IdentityService</a>进行管理。
        </p><p>
		  如果没有显示指定设置的是用户还是群组，
		  引擎会默认当做群组处理。所以下面的设置与<span class="emphasis"><em>使用group(accountancy)</em></span>效果一样。
          </p><pre class="prettyprint"><span class="tag">&lt;formalExpression&gt;</span><span class="pln">accountancy</span><span class="tag">&lt;/formalExpression&gt;</span></pre><p>
        </p></div><div class="section" title="Activiti对任务分配的扩展"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnUserTaskUserAssignmentExtension"></a>Activiti对任务分配的扩展</h4></div></div></div><p>
		    当分配不复杂时，用户和组的设置非常麻烦。
			为避免复杂性，可以使用用户任务的<a class="link" href="#bpmnCustomExtensions" title="自定义扩展">自定义扩展</a>。
          </p><p>
            </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                  <span class="bold"><strong>assignee属性</strong></span>：这个自定义扩展可以直接把用户任务分配给指定用户。
                  </p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"my task"</span><span class="pln"> </span><span class="atn">activiti:assignee</span><span class="pun">=</span><span class="atv">"kermit"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>

                  它和使用<a class="link" href="#bpmnUserTaskAssignment" title="用户分配">上面</a>定义的<span class="bold"><strong>humanPerformer</strong></span>
				  效果完全一样。
                </p></li><li class="listitem"><p>
                  <span class="bold"><strong>candidateUsers属性</strong></span>：这个自定义扩展可以为任务设置候选人。
                  </p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"my task"</span><span class="pln"> </span><span class="atn">activiti:candidateUsers</span><span class="pun">=</span><span class="atv">"kermit, gonzo"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>

                  它和使用<a class="link" href="#bpmnUserTaskAssignment" title="用户分配">上面</a>定义的<span class="bold"><strong>potentialOwner</strong></span>
				  效果完全一样。
				  注意它不需要像使用<span class="emphasis"><em>potentialOwner</em></span>通过<span class="emphasis"><em>user(kermit)</em></span>声明，
				  因为这个属性只能用于人员。
                </p></li><li class="listitem"><p>
                  <span class="bold"><strong>candidateGroups属性</strong></span>：这个自定义扩展可以为任务设置候选组。
                  </p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"my task"</span><span class="pln"> </span><span class="atn">activiti:candidateGroups</span><span class="pun">=</span><span class="atv">"management, accountancy"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>

                  它和使用<a class="link" href="#bpmnUserTaskAssignment" title="用户分配">上面</a>定义的<span class="bold"><strong>potentialOwner</strong></span>
				  效果完全一样。
				  注意它不需要像使用<span class="emphasis"><em>potentialOwner</em></span>通过<span class="emphasis"><em>group(management)</em></span>声明，
				  因为这个属性只能用于群组。
                </p></li><li class="listitem"><p>
                  <span class="emphasis"><em>candidateUsers</em></span> 和 <span class="emphasis"><em>candidateGroups</em></span> 可以同时设置在同一个用户任务中。
                </p></li></ul></div><p>
          </p><p>
		    注意：虽然activiti提供了一个账号管理组件，
			也提供了<a class="link" href="#apiEngine" title="流程引擎的API和服务">IdentityService</a>，
			但是账号组件不会检测设置的用户是否村爱。
			它嵌入到应用中，也允许activiti与其他已存的账户管理方案集成。
          </p><p>
		    如果上面的方式还不满足需求，还可以使用创建事件的<a class="link" href="#taskListeners" title="任务监听器">任务监听器</a>
			来实现自定义的分配逻辑：
            </p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"task1"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"My task"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:taskListener</span><span class="pln"> </span><span class="atn">event</span><span class="pun">=</span><span class="atv">"create"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.MyAssignmentHandler"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/userTask&gt;</span></pre><p>
            <code class="literal">DelegateTask</code>会传递给<code class="literal">TaskListener</code>的实现，
			通过它可以设置执行人，候选人和候选组：
            </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">MyAssignmentHandler</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">TaskListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> notify</span><span class="pun">(</span><span class="typ">DelegateTask</span><span class="pln"> delegateTask</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="com">// Execute custom identity lookups here</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">// and then for example call following methods:</span><span class="pln"><br>&nbsp; &nbsp; delegateTask</span><span class="pun">.</span><span class="pln">setAssignee</span><span class="pun">(</span><span class="str">"kermit"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; delegateTask</span><span class="pun">.</span><span class="pln">addCandidateUser</span><span class="pun">(</span><span class="str">"fozzie"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; delegateTask</span><span class="pun">.</span><span class="pln">addCandidateGroup</span><span class="pun">(</span><span class="str">"management"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span></pre><p>
          </p><p>
		    使用spring时，可以使用向上面章节中介绍的自定义分配属性，
			使用<a class="link" href="#springExpressions" title="表达式">表达式</a>
			把<a class="link" href="#taskListeners" title="任务监听器">任务监听器</a>设置为spring代理的bean，
			让这个监听器监听任务的<span class="emphasis"><em>创建</em></span>事件。
			下面的例子中，执行者会通过调用<code class="literal">ldapService</code>这个spring bean的<code class="literal">findManagerOfEmployee</code>方法获得。
			流程变量<span class="emphasis"><em>emp</em></span>会作为参数传递给bean。
            </p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"task"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"My Task"</span><span class="pln"> </span><span class="atn">activiti:assignee</span><span class="pun">=</span><span class="atv">"${ldapService.findManagerForEmployee(emp)}"</span><span class="tag">/&gt;</span></pre><p>
			也可以用来设置候选人和候选组：
            </p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"task"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"My Task"</span><span class="pln"> </span><span class="atn">activiti:candidateUsers</span><span class="pun">=</span><span class="atv">"${ldapService.findAllSales()}"</span><span class="tag">/&gt;</span></pre><p>
			注意方法返回类型只能为<code class="literal">String</code>或<code class="literal">Collection&lt;String&gt;</code>
			（对应候选人和候选组）：
            </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">FakeLdapService</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> findManagerForEmployee</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> employee</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> </span><span class="str">"Kermit The Frog"</span><span class="pun">;</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;</span><span class="pln"> findAllSales</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">Arrays</span><span class="pun">.</span><span class="pln">asList</span><span class="pun">(</span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"gonzo"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"fozzie"</span><span class="pun">);</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span></pre><p>
          </p></div></div><div class="section" title="脚本任务"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnScriptTask"></a>脚本任务</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnScriptTaskDescription"></a>描述</h4></div></div></div><p>
			  脚本任务时一个自动节点。当流程到达脚本任务，
			  会执行对应的脚本。
		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnScriptTaskGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			  脚本任务显示为标准BPMN 2.0任务（圆角矩形），
			  左上角有一个脚本小图标。
		      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_052.png" align="middle"></div><p>
		    </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnScriptTaskXml"></a>XML内容</h4></div></div></div><p>
			  脚本任务定义需要指定<span class="bold"><strong>script</strong></span>
		      和<span class="bold"><strong>scriptFormat</strong></span>。
</p><pre class="prettyprint"><span class="tag">&lt;scriptTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theScriptTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Execute script"</span><span class="pln"> </span><span class="atn">scriptFormat</span><span class="pun">=</span><span class="atv">"groovy"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;script&gt;</span><span class="pln"><br>&nbsp; &nbsp; sum </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> i in inputArray </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; sum </span><span class="pun">+=</span><span class="pln"> i<br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/script&gt;</span><span class="pln"><br></span><span class="tag">&lt;/scriptTask&gt;</span></pre><p>
		    </p><p>
			  <span class="bold"><strong>scriptFormat</strong></span>的值必须兼容
			  <a class="ulink" href="http://jcp.org/en/jsr/detail?id=223" target="_top">JSR-223</a>。
			  （java平台的脚本语言）。默认Javascript会包含在JDK中，不需要额外的依赖。
			  如果你想使用其他（JSR-223兼容）的脚本引擎，
			  需要把对应的jar添加到classpath下，并使用合适的名称。
			  比如，activiti单元测试经常使用groovy，
			  因为语法比java简单太多。
		    </p><p>
			  注意，groovy脚本引擎放在groovy-all.jar中。在2.0版本之前，
			  脚本引擎是groovy jar的一部分。这样，需要添加如下依赖：
		      </p><pre class="prettyprint"><span class="tag">&lt;dependency&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;groupId&gt;</span><span class="pln">org.codehaus.groovy</span><span class="tag">&lt;/groupId&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;artifactId&gt;</span><span class="pln">groovy-all</span><span class="tag">&lt;/artifactId&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;version&gt;</span><span class="pln">2.x.x</span><span class="tag">&lt;version&gt;</span><span class="pln"><br></span><span class="tag">&lt;/dependency&gt;</span></pre><p>
		    </p></div><div class="section" title="脚本中的变量"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnScriptTaskVariables"></a>脚本中的变量</h4></div></div></div><p>
			  到达脚本任务的流程可以访问的所有流程变量，都可以在脚本中使用。
			  实例中，脚本变量<span class="emphasis"><em>'inputArray'</em></span>其实是流程变量
			  （整数数组）。
</p><pre class="prettyprint"><span class="tag">&lt;script&gt;</span><span class="pln"><br>&nbsp; &nbsp; sum </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> i in </span><span class="bold"><strong><span class="pln">inputArray</span></strong></span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; sum </span><span class="pun">+=</span><span class="pln"> i<br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="tag">&lt;/script&gt;</span></pre><p>
		    </p><p>
			  也可以在脚本中设置流程变量，直接调用
		      <span class="emphasis"><em>execution.setVariable("variableName", variableValue)</em></span>。
			  默认，不会自动保存变量（<span class="bold"><strong>注意：activiti 5.12之前存在这个问题</strong></span>）。
			  可以在脚本中自动保存任何变量。
			  （比如上例中的<span class="emphasis"><em>sum</em></span>），只要把<code class="literal">scriptTask</code>
			  的<code class="literal">autoStoreVariables</code>属性设置为<code class="literal">true</code>。
			  然而，<span class="bold"><strong>最佳实践是不要用它，而是显示调用execution.setVariable()</strong></span>，
			  因为一些当前版本的JDK对于一些脚本语言，无法实现自动保存变量。
		      参考<a class="ulink" href="http://www.jorambarrez.be/blog/2013/03/25/bug-on-jdk-1-7-0_17-when-using-scripttask-in-activiti/" target="_top">这里</a>获得更多信息。
			</p><p>
</p><pre class="prettyprint"><span class="tag">&lt;scriptTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"script"</span><span class="pln"> </span><span class="atn">scriptFormat</span><span class="pun">=</span><span class="atv">"JavaScript"</span><span class="pln"> </span><span class="atn">activiti:autoStoreVariables</span><span class="pun">=</span><span class="atv">"false"</span><span class="tag">&gt;</span></pre><p>
			  参数默认为<code class="literal">false</code>，意思是如果没有为脚本任务定义设置参数，
			  所有声明的变量将只存在于脚本执行的阶段。
		    </p><p>
			  如何在脚本中设置变量的例子：
</p><pre class="prettyprint"><span class="tag">&lt;script&gt;</span><span class="pln"><br>&nbsp; &nbsp; def scriptVar </span><span class="pun">=</span><span class="pln"> </span><span class="str">"test123"</span><span class="pln"><br>&nbsp; &nbsp; execution</span><span class="pun">.</span><span class="pln">setVariable</span><span class="pun">(</span><span class="str">"myVar"</span><span class="pun">,</span><span class="pln"> scriptVar</span><span class="pun">)</span><span class="pln"><br></span><span class="tag">&lt;/script&gt;</span></pre><p>
		    </p><p>
			  注意：下面这些命名已被占用，<span class="bold"><strong>不能用作变量名</strong></span>：
			  <span class="bold"><strong>out, out:print, lang:import, context, elcontext</strong></span>。
		    </p></div><div class="section" title="脚本结果"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnScriptTaskResultValue"></a>脚本结果</h4></div></div></div><p>
			  脚本任务的返回值可以通过制定流程变量的名称，分配给已存或一个新流程变量，
			  使用脚本任务定义的<span class="emphasis"><em>'activiti:resultVariable'</em></span>属性。
			  任何已存的流程变量都会被脚本执行的结果覆盖。
			  如果没有指定返回变量名，脚本的返回值会被忽略。
</p><pre class="prettyprint"><span class="tag">&lt;scriptTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theScriptTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Execute script"</span><span class="pln"> </span><span class="atn">scriptFormat</span><span class="pun">=</span><span class="atv">"juel"</span><span class="pln"> </span><span class="atn">activiti:resultVariable</span><span class="pun">=</span><span class="atv">"myVar"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;script&gt;</span><span class="pun">#{</span><span class="pln">echo</span><span class="pun">}</span><span class="tag">&lt;/script&gt;</span><span class="pln"><br></span><span class="tag">&lt;/scriptTask&gt;</span></pre><p>

			  上例中，脚本的结果（表达式<span class="emphasis"><em>'#{echo}'</em></span>的值）
			  在脚本完成后，会设置到<span class="emphasis"><em>'myVar'</em></span>变量中。
		    </p></div></div><div class="section" title="Java服务任务"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnJavaServiceTask"></a>Java服务任务</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnJavaServiceTaskDescription"></a>描述</h4></div></div></div><p>
	       java服务任务用来调用外部java类。
	     </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnJavaServiceTaskGraphicalNotation"></a>图形标记</h4></div></div></div><p>
	    服务任务显示为圆角矩形，左上角有一个齿轮小图标。
        </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_025.png" align="middle"></div><p>
       </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnJavaServiceTaskXML"></a>XML内容</h4></div></div></div><p>
	     有4钟方法来声明java调用逻辑：
       </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>实现JavaDelegate或ActivityBehavior</p></li><li class="listitem"><p>执行解析代理对象的表达式</p></li><li class="listitem"><p>调用一个方法表达式</p></li><li class="listitem"><p>调用一直值表达式</p></li></ul></div><p>
	     执行一个在流程执行中调用的类，
		 需要在<span class="bold"><strong>'activiti:class'</strong></span>属性中设置全类名。
</p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"javaService"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">name</span><span class="pun">=</span><span class="atv">"My Java Service Task"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">activiti:class</span><span class="pun">=</span><span class="atv">"org.activiti.MyJavaDelegate"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
         参考<a class="link" href="#bpmnJavaServiceTaskImplementation" title="实现"><span class="emphasis"><em>实现</em></span>章节</a>
		 了解更多使用类的信息。
       </p><p>
	     也可以使用表达式调用一个对象。对象必须遵循一些规则，
		 并使用<code class="literal">activiti:class</code>属性进行创建。
		 （了解<a class="link" href="#bpmnJavaServiceTaskImplementation" title="实现">更多</a>）。
         </p><pre class="prettyprint"><span class="pln">&nbsp;</span><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"serviceTask"</span><span class="pln"> </span><span class="bold"><strong><span class="atn">activiti:delegateExpression</span><span class="pun">=</span><span class="atv">"${delegateExpressionBean}"</span></strong></span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
		 这里，<code class="literal">delegateExpressionBean</code>是一个实现了<code class="literal">JavaDelegate</code>接口的bean，
		 它定义在实例的spring容器中。
       </p><p>
	     要指定执行的UEL方法表达式，
		 需要使用<span class="bold"><strong>activiti:expression</strong></span>。
</p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"javaService"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">name</span><span class="pun">=</span><span class="atv">"My Java Service Task"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">activiti:expression</span><span class="pun">=</span><span class="atv">"#{printer.printMessage()}"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
         方法<code class="literal">printMessage</code>（无参数）会调用
		 名为<code class="literal">printer</code>对象的方法。
       </p><p>
	     也可以为表达式中的方法传递参数。
       	</p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"javaService"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">name</span><span class="pun">=</span><span class="atv">"My Java Service Task"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">activiti:expression</span><span class="pun">=</span><span class="atv">"#{printer.printMessage(execution, myVar)}"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
		这会调用名为<code class="literal">printer</code>对象上的方法<code class="literal">printMessage</code>。
		第一个参数是<code class="literal">DelegateExecution</code>，在表达式环境中默认名称为<code class="literal">execution</code>。
		第二个参数传递的是当前流程的名为<code class="literal">myVar</code>的变量。
       </p><p>
	     要指定执行的UEL值表达式，
		 需要使用<span class="bold"><strong>activiti:expression</strong></span>属性。
</p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"javaService"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">name</span><span class="pun">=</span><span class="atv">"My Java Service Task"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="atn">activiti:expression</span><span class="pun">=</span><span class="atv">"#{split.ready}"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
		 <code class="literal">ready</code>属性的getter方法，<code class="literal">getReady</code>（无参数），
		 会作用于名为<code class="literal">split</code>的bean上。
		 这个对象会被解析为流程对象和
		 （如果合适）spring环境中的对象。
       </p></div><div class="section" title="实现"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnJavaServiceTaskImplementation"></a>实现</h4></div></div></div><p>
	    要在流程执行中实现一个调用的类，这个类需要实现<span class="emphasis"><em>org.activiti.engine.delegate.JavaDelegate</em></span>接口，
		并在<span class="emphasis"><em>execute</em></span>方法中提供对应的业务逻辑。
		当流程执行到特定阶段，它会指定方法中定义好的业务逻辑，
		并按照默认BPMN 2.0中的方式离开节点。
      </p><p>
	    让我们创建一个java类的例子，它可以流程变量中字符串转换为大写。
		这个类需要实现<span class="emphasis"><em>org.activiti.engine.delegate.JavaDelegate</em></span>接口，
		这要求我们实现<span class="emphasis"><em>execute(DelegateExecution)</em></span>方法。
		它包含的业务逻辑会被引擎调用。流程实例信息，如流程变量和其他信息，
		可以通过
		<a class="ulink" href="http://activiti.org/javadocs/org/activiti/engine/delegate/DelegateExecution.html" target="_top">DelegateExecution</a>
		接口访问和操作（点击对应操作的javadoc的链接，获得更多信息）。
</p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ToUppercase</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">JavaDelegate</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> execute</span><span class="pun">(</span><span class="typ">DelegateExecution</span><span class="pln"> execution</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">String</span><span class="pln"> </span><span class="kwd">var</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">String</span><span class="pun">)</span><span class="pln"> execution</span><span class="pun">.</span><span class="pln">getVariable</span><span class="pun">(</span><span class="str">"input"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">var</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">var</span><span class="pun">.</span><span class="pln">toUpperCase</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; execution</span><span class="pun">.</span><span class="pln">setVariable</span><span class="pun">(</span><span class="str">"input"</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">var</span><span class="pun">);</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span></pre><p>
      </p><p>
	    注意：<span class="bold"><strong>serviceTask定义的class只会创建一个java类的实例</strong></span>。
		所有流程实例都会共享相同的类实例，并调用<span class="emphasis"><em>execute(DelegateExecution)</em></span>。
		这意味着，类不能使用任何成员变量，必须是线程安全的，它必须能模拟在不同线程中执行。
		这也影响着<a class="link" href="#serviceTaskFieldInjection" title="属性注入">属性注入</a>的处理方式。
      </p><p>
	    流程定义中引用的类（比如，使用<code class="literal">activiti:class</code>）<span class="bold"><strong>不会
        在部署时实例化</strong></span>。只有当流程第一次执行到使用类的时候，
		类的实例才会被创建。如果找不到类，会抛出一个<code class="literal">ActivitiException</code>。
		这个原因是部署环境（更确切是的<span class="emphasis"><em>classpath</em></span>）和真实环境往往是不同的。
		比如当使用<span class="emphasis"><em>ant</em></span>或业务归档上传到Activiti Explorer来发布流程
		classpath没有包含引用的类。
      </p><p><a class="link" href="#internal" title="内部实现类"><span class="bold"><strong>[内部：非公共实现类]</strong></span></a>
	    也可以提供实现
        <span class="emphasis"><em>org.activiti.engine.impl.pvm.delegate.ActivityBehavior</em></span>接口的类。
		实现可以访问更强大的<span class="emphasis"><em>ActivityExecution</em></span>,
		它可以影响流程的流向。注意，这不是一个很好的实践，
		应该尽量避免。所以，建议只有在高级情况下并且你确切知道你要做什么的情况下，
		再使用<span class="emphasis"><em>ActivityBehavior</em></span>接口。
      </p></div><div class="section" title="属性注入"><div class="titlepage"><div><div><h4 class="title"><a name="serviceTaskFieldInjection"></a>属性注入</h4></div></div></div><p>
		  可以为代理类的属性注入数据。支持如下类型的注入：
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>固定的字符串</p></li><li class="listitem"><p>表达式</p></li></ul></div><p>
        </p><p>
		  如果有效的话，数值会通过代理类的setter方法注入，遵循java bean的命名规范（比如<code class="literal">fistName</code>属性对应<code class="literal">setFirstName(...)</code>方法）。
		  如果属性没有对应的setter方法，数值会直接注入到私有属性中。
		  一些环境的SecurityManager不允许修改私有属性，所以最好还是把你想注入的属性暴露出对应的setter方法来。
		  <span class="bold"><strong>无论流程定义中的数据是什么类型，注入目标的属性类型都应该是
		  <code class="literal">org.activiti.engine.delegate.Expression</code>。</strong></span>
        </p><p>
		  下面代码演示了如何把一个常量注入到属性中。
		  属性注入可以使用<span class="emphasis"><em>'class'</em></span>属性。
		  注意我们需要<span class="bold"><strong>定义一个'extensionElements' XML元素，
		  在声明实际的属性注入之前</strong></span>，这是BPMN 2.0 XML格式要求的。
          </p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"javaService"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Java service invocation"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">activiti:class</span><span class="pun">=</span><span class="atv">"org.activiti.examples.bpmn.servicetask.ToUpperCaseFieldInjected"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"text"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"Hello World"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span></strong></span><span class="pln"><br></span><span class="tag">&lt;/serviceTask&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		  <code class="literal">ToUpperCaseFieldInjected</code>类有一个<code class="literal">text</code>属性，
		  类型是<code class="literal">org.activiti.engine.delegate.Expression</code>。
		  调用<code class="literal">text.getValue(execution)</code>时，会返回定义的字符串<code class="literal">Hello World</code>。
        </p><p>
		  也可以使用长文字（比如，内嵌的email），可以使用<span class="emphasis"><em>'activiti:string'</em></span>子元素：
          </p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"javaService"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Java service invocation"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">activiti:class</span><span class="pun">=</span><span class="atv">"org.activiti.examples.bpmn.servicetask.ToUpperCaseFieldInjected"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"text"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;activiti:string&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Hello World<br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/activiti:string&gt;</span></strong></span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/activiti:field&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/serviceTask&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p><p>
		可以使用表达式，实现在运行期动态解析注入的值。这些表达式可以使用流程变量或spring定义的bean（如果使用了spring）。
		像<a class="link" href="#bpmnJavaServiceTaskImplementation" title="实现">服务任务实现</a>里说的那样，服务任务中的java类实例会在所有流程实例中共享。
		为了动态注入属性的值，我们可以在<code class="literal">org.activiti.engine.delegate.Expression</code>中使用值和方法表达式，
		它会使用传递给<code class="literal">execute</code>方法的<code class="literal">DelegateExecution</code>参数进行解析。
</p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"javaService"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Java service invocation"</span><span class="pln"><br>&nbsp; </span><span class="atn">activiti:class</span><span class="pun">=</span><span class="atv">"org.activiti.examples.bpmn.servicetask.ReverseStringsFieldInjected"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"text1"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;activiti:expression&gt;</span><span class="pln">${genderBean.getGenderString(gender)}</span><span class="tag">&lt;/activiti:expression&gt;</span></strong></span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/activiti:field&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"text2"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp;</span><span class="bold"><strong><span class="tag">&lt;activiti:expression&gt;</span><span class="pln">Hello ${gender == 'male' ? 'Mr.' : 'Mrs.'} ${name}</span><span class="tag">&lt;/activiti:expression&gt;</span></strong></span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/activiti:field&gt;</span><span class="pln"><br>&nbsp; &lt;/ extensionElements&gt;<br>&lt;/ serviceTask&gt;</span></pre><p>
  </p><p>
  下面的例子中，注入了表达式，并使用在传入的当前<code class="literal">DelegateExecution</code>解析它们。
  完整代码可以参考<code class="literal">org.activiti.examples.bpmn.servicetask.JavaServiceTaskTest.testExpressionFieldInjection</code>。
</p><pre class="prettyprint"><span class="pln"><br></span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ReverseStringsFieldInjected</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">JavaDelegate</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Expression</span><span class="pln"> text1</span><span class="pun">;</span><span class="pln"><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Expression</span><span class="pln"> text2</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> execute</span><span class="pun">(</span><span class="typ">DelegateExecution</span><span class="pln"> execution</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">String</span><span class="pln"> value1 </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">String</span><span class="pun">)</span><span class="pln"> text1</span><span class="pun">.</span><span class="pln">getValue</span><span class="pun">(</span><span class="pln">execution</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; execution</span><span class="pun">.</span><span class="pln">setVariable</span><span class="pun">(</span><span class="str">"var1"</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">StringBuffer</span><span class="pun">(</span><span class="pln">value1</span><span class="pun">).</span><span class="pln">reverse</span><span class="pun">().</span><span class="pln">toString</span><span class="pun">());</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="typ">String</span><span class="pln"> value2 </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">String</span><span class="pun">)</span><span class="pln"> text2</span><span class="pun">.</span><span class="pln">getValue</span><span class="pun">(</span><span class="pln">execution</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; execution</span><span class="pun">.</span><span class="pln">setVariable</span><span class="pun">(</span><span class="str">"var2"</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">StringBuffer</span><span class="pun">(</span><span class="pln">value2</span><span class="pun">).</span><span class="pln">reverse</span><span class="pun">().</span><span class="pln">toString</span><span class="pun">());</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
  </p><p>
  另外，你也可以把表达式设置成一个属性，而不是字元素，让XML更简单一些。
</p><pre class="prettyprint"><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"text1"</span><span class="pln"> </span><span class="bold"><strong><span class="atn">expression</span><span class="pun">=</span><span class="atv">"${genderBean.getGenderString(gender)}"</span></strong></span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"text1"</span><span class="pln"> </span><span class="bold"><strong><span class="atn">expression</span><span class="pun">=</span><span class="atv">"Hello ${gender == 'male' ? 'Mr.' : 'Mrs.'} ${name}"</span></strong></span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
        </p><p>
          <span class="bold"><strong>
		    因为java类实例会被重用，注入只会发生一次，当服务任务调用第一次的时候。
			当你的代码中的属性改变了，值也不会重新注入，
			所以你应该把它们看做是不变的，不用修改它们。
          </strong></span>
        </p></div><div class="section" title="服务任务结果"><div class="titlepage"><div><div><h4 class="title"><a name="serviceTaskResultValue"></a>服务任务结果</h4></div></div></div><p>
		   服务流程返回的结果（使用表达式的服务任务）可以分配给已经存在的或新的流程变量，
		   可以通过指定服务任务定义的<span class="emphasis"><em>'activiti:resultVariable'</em></span>属性来实现。
		   指定的路程比那两的值会被服务流程的返回结果覆盖。
		   如果没有指定返回变量名，就会忽略返回结果。
</p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"aMethodExpressionServiceTask"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">activiti:expression</span><span class="pun">=</span><span class="atv">"#{myService.doSomething()}"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">activiti:resultVariable</span><span class="pun">=</span><span class="atv">"myVar"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>

		   在上面的例子中，服务流程的返回值（在<span class="emphasis"><em>'myService'</em></span>上调用<span class="emphasis"><em>'doSomething()'</em></span>方法的返回值，
		   myService可能是流程变量，也可能是spring的bean），会设置到名为<span class="emphasis"><em>'myVar'</em></span>的流程变量里，
		   在服务执行完成之后。
         </p></div><div class="section" title="处理异常"><div class="titlepage"><div><div><h4 class="title"><a name="serviceTaskExceptionHandling"></a>处理异常</h4></div></div></div><p>
	    执行自定义逻辑时，常常需要捕获对应的业务异常，在流程内部进行处理。
		activiti提供了不同的方式来处理这个问题。
      </p><div class="section" title="抛出BPMN Errors"><div class="titlepage"><div><div><h5 class="title"><a name="serviceTaskBpmnErrors"></a>抛出BPMN Errors</h5></div></div></div><p>
		    可以在服务任务或脚本任务的代码里抛出BPMN error。
			为了实现这个，要从JavaDelegate，脚本，表达式和代理表达式中抛出名为
			<span class="emphasis"><em>BpmnError</em></span>的特殊ActivitiExeption。
			引擎会捕获这个异常，把它转发到对应的错误处理中。
			比如，边界错误事件或错误事件子流程。
            </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ThrowBpmnErrorDelegate</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">JavaDelegate</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> execute</span><span class="pun">(</span><span class="typ">DelegateExecution</span><span class="pln"> execution</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; executeBusinessLogic</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">BusinessException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">BpmnError</span><span class="pun">(</span><span class="str">"BusinessExceptionOccured"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span></pre><p>
			构造参数是错误代码，会被用来决定
			哪个错误处理器会来响应这个错误。
			参考<a class="link" href="#bpmnBoundaryErrorEvent" title="错误边界事件">边界错误事件</a>
			获得更多捕获BPMN error的信息。
          </p><p>
			这个机制应该<span class="bold"><strong>只用于业务失败</strong></span>，
			它应该被流程定义中设置的边界错误事件或错误事件子流程处理。
			技术上的错误应该使用其他异常类型，通常不会在流程里处理。
          </p></div><div class="section" title="异常顺序流"><div class="titlepage"><div><div><h5 class="title"><a name="serviceTaskExceptionSequenceFlow"></a>异常顺序流</h5></div></div></div><p>
            <a class="link" href="#internal" title="内部实现类">
              <span class="bold"><strong>[内部，公开实现类]</strong></span>
            </a>
			另一种选择是在一些异常发生时，让路程进入其他路径。
			下面的代码演示了如何实现。
            </p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"javaService"</span><span class="pln"><br>&nbsp; </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Java service invocation"</span><span class="pln"><br>&nbsp; </span><span class="atn">activiti:class</span><span class="pun">=</span><span class="atv">"org.activiti.ThrowsExceptionBehavior"</span><span class="tag">&gt;</span><span class="pln"><br></span><span class="tag">&lt;/serviceTask&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"no-exception"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"javaService"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"exception"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"javaService"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"fixException"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
			这里的服务任务有两个外出顺序流，分别叫<code class="literal">exception</code>和
			<code class="literal">no-exception</code>。异常出现时会使用顺序流的id来决定流向：
            </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ThrowsExceptionBehavior</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">ActivityBehavior</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> execute</span><span class="pun">(</span><span class="typ">ActivityExecution</span><span class="pln"> execution</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">String</span><span class="pln"> </span><span class="kwd">var</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">String</span><span class="pun">)</span><span class="pln"> execution</span><span class="pun">.</span><span class="pln">getVariable</span><span class="pun">(</span><span class="str">"var"</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="typ">PvmTransition</span><span class="pln"> transition </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; executeLogic</span><span class="pun">(</span><span class="kwd">var</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; transition </span><span class="pun">=</span><span class="pln"> execution</span><span class="pun">.</span><span class="pln">getActivity</span><span class="pun">().</span><span class="pln">findOutgoingTransition</span><span class="pun">(</span><span class="str">"no-exception"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Exception</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; transition </span><span class="pun">=</span><span class="pln"> execution</span><span class="pun">.</span><span class="pln">getActivity</span><span class="pun">().</span><span class="pln">findOutgoingTransition</span><span class="pun">(</span><span class="str">"exception"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; execution</span><span class="pun">.</span><span class="pln">take</span><span class="pun">(</span><span class="pln">transition</span><span class="pun">);</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span></pre><p>
          </p></div></div><div class="section" title="在JavaDelegate里使用activiti服务"><div class="titlepage"><div><div><h4 class="title"><a name="serviceTaskCallActivitiService"></a>在JavaDelegate里使用activiti服务</h4></div></div></div><p>
		    一些场景下，需要在java服务任务中使用activiti服务
			（比如，通过RuntimeService启动流程实例，而callActivity不满足你的需求）。
			<span class="emphasis"><em>org.activiti.engine.delegate.DelegateExecution</em></span>允许通过
			<span class="emphasis"><em>org.activiti.engine.EngineServices</em></span>接口直接获得这些服务：
            </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">StartProcessInstanceTestDelegate</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">JavaDelegate</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> execute</span><span class="pun">(</span><span class="typ">DelegateExecution</span><span class="pln"> execution</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">RuntimeService</span><span class="pln"> runtimeService </span><span class="pun">=</span><span class="pln"> execution</span><span class="pun">.</span><span class="pln">getEngineServices</span><span class="pun">().</span><span class="pln">getRuntimeService</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"myProcess"</span><span class="pun">);</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
			所有activiti服务的API都可以通过这个接口获得。
            </p><p>
			使用这些API调用出现的所有数据改变，都是在当前事务中的。
			在像spring和CDI这样的依赖注入环境也会起作用，无论是否启用了JTA数据源。
			比如，下面的代码功能与上面的代码一致，
			这是RuntimeService是通过依赖注入获得的，而不是通过<span class="emphasis"><em>org.activiti.engine.EngineServices</em></span>接口。
            </p><pre class="prettyprint"><span class="lit">@Component</span><span class="pun">(</span><span class="str">"startProcessInstanceDelegate"</span><span class="pun">)</span><span class="pln"><br></span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">StartProcessInstanceTestDelegateWithInjection</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="lit">@Autowired</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">RuntimeService</span><span class="pln"> runtimeService</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> startProcess</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"oneTaskProcess"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
          </p><p>
            <span class="bold"><strong>重要技术提示：</strong></span>因为服务调用是在当前事务里，
			数据的产生或改变，在服务任务执行完<span class="emphasis"><em>之前</em></span>，还没有提交到数据库。
			所有API对于数据库数据的操作，意味着未提交的操作在服务任务的API调用中都是不可见的。
          </p></div></div><div class="section" title="Web Service任务"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnWebserviceTask"></a>Web Service任务</h3></div></div></div><a class="link" href="#experimental" title="试验性功能">
		<span class="bold"><strong>[EXPERIMENTAL]</strong></span>
	</a><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnWebserviceTaskDescription"></a>描述</h4></div></div></div><p>
			Web Service任务可以用来同步调用一个外部的Web service。
		</p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnWebserviceTaskGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			Web Service任务与Java服务任务显示效果一样。
			</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_039.png" align="middle"></div><p>
		</p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnWebserviceTaskXML"></a>XML内容</h4></div></div></div><p>
			要使用Web Service我们需要导入它的操作和类型。
			可以自动使用import标签来指定Web Service的WSDL：
       </p><pre class="prettyprint"><span class="tag">&lt;import</span><span class="pln"> </span><span class="atn">importType</span><span class="pun">=</span><span class="atv">"http://schemas.xmlsoap.org/wsdl/"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">location</span><span class="pun">=</span><span class="atv">"http://localhost:63081/counter?wsdl"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">namespace</span><span class="pun">=</span><span class="atv">"http://webservice.activiti.org/"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
			上面的声明告诉activiti导入WSDL定义，但没有创建item定义和消息。
			假设我们想调用一个名为'prettyPrint'的方法，
			我们必须创建为请求和响应信息对应的消息和item定义：
		</p><pre class="prettyprint"><span class="tag">&lt;message</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"prettyPrintCountRequestMessage"</span><span class="pln"> </span><span class="atn">itemRef</span><span class="pun">=</span><span class="atv">"tns:prettyPrintCountRequestItem"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;message</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"prettyPrintCountResponseMessage"</span><span class="pln"> </span><span class="atn">itemRef</span><span class="pun">=</span><span class="atv">"tns:prettyPrintCountResponseItem"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;itemDefinition</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"prettyPrintCountRequestItem"</span><span class="pln"> </span><span class="atn">structureRef</span><span class="pun">=</span><span class="atv">"counter:prettyPrintCount"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;itemDefinition</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"prettyPrintCountResponseItem"</span><span class="pln"> </span><span class="atn">structureRef</span><span class="pun">=</span><span class="atv">"counter:prettyPrintCountResponse"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
			在申请服务任务之前，我们必须定义实际引用Web Service的BPMN接口和操作。
			基本上，我们定义接口和必要的操作。对每个奥做我们都会重用上面定义的信息作为输入和输出。
			比如，下面定义了'counter'接口和'prettyPrintCountOperation'操作：
		</p><pre class="prettyprint"><span class="tag">&lt;interface</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Counter Interface"</span><span class="pln"> </span><span class="atn">implementationRef</span><span class="pun">=</span><span class="atv">"counter:Counter"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;operation</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"prettyPrintCountOperation"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"prettyPrintCount Operation"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">implementationRef</span><span class="pun">=</span><span class="atv">"counter:prettyPrintCount"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;inMessageRef&gt;</span><span class="pln">tns:prettyPrintCountRequestMessage</span><span class="tag">&lt;/inMessageRef&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;outMessageRef&gt;</span><span class="pln">tns:prettyPrintCountResponseMessage</span><span class="tag">&lt;/outMessageRef&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/operation&gt;</span><span class="pln"><br></span><span class="tag">&lt;/interface&gt;</span></pre><p>
			然后我们可以定义Web Service任务使用##WebService实现，
			并引用Web Service操作。
		</p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"webService"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Web service invocation"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">implementation</span><span class="pun">=</span><span class="atv">"##WebService"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">operationRef</span><span class="pun">=</span><span class="atv">"tns:prettyPrintCountOperation"</span><span class="tag">&gt;</span></pre></div><div class="section" title="Web Service任务IO规范"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnWebserviceTaskIOSpecification"></a>Web Service任务IO规范</h4></div></div></div><p>
			除非我们使用简化方式处理数据输入和输出关联（如下所示），每个Web Service任务可以定义任务的输入输出IO规范。
			配置方式与BPMN 2.0完全兼容，下面格式化后的例子，我们根据之前定义item定义，定义了输入和输出。
		</p><pre class="prettyprint"><span class="tag">&lt;ioSpecification&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;dataInput</span><span class="pln"> </span><span class="atn">itemSubjectRef</span><span class="pun">=</span><span class="atv">"tns:prettyPrintCountRequestItem"</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"dataInputOfServiceTask"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;dataOutput</span><span class="pln"> </span><span class="atn">itemSubjectRef</span><span class="pun">=</span><span class="atv">"tns:prettyPrintCountResponseItem"</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"dataOutputOfServiceTask"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;inputSet&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;dataInputRefs&gt;</span><span class="pln">dataInputOfServiceTask</span><span class="tag">&lt;/dataInputRefs&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/inputSet&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;outputSet&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;dataOutputRefs&gt;</span><span class="pln">dataOutputOfServiceTask</span><span class="tag">&lt;/dataOutputRefs&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/outputSet&gt;</span><span class="pln"><br></span><span class="tag">&lt;/ioSpecification&gt;</span></pre></div><div class="section" title="Web Service任务数据输入关联"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnWebserviceTaskDataInputAssociation"></a>Web Service任务数据输入关联</h4></div></div></div><p>
			有两种方式指定数据输入关联：
		</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>使用表达式</p></li><li class="listitem"><p>使用简化方式</p></li></ul></div><p>
			要使用表达式指定数据输入关联，我们需要定义来源和目的item，并指定每个item属性之间的对应关系。
			下面的例子中我们分配了这些item的前缀和后缀：
       </p><pre class="prettyprint"><span class="tag">&lt;dataInputAssociation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sourceRef&gt;</span><span class="pln">dataInputOfProcess</span><span class="tag">&lt;/sourceRef&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;targetRef&gt;</span><span class="pln">dataInputOfServiceTask</span><span class="tag">&lt;/targetRef&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;assignment&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;from&gt;</span><span class="pln">${dataInputOfProcess.prefix}</span><span class="tag">&lt;/from&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;to&gt;</span><span class="pln">${dataInputOfServiceTask.prefix}</span><span class="tag">&lt;/to&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/assignment&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;assignment&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;from&gt;</span><span class="pln">${dataInputOfProcess.suffix}</span><span class="tag">&lt;/from&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;to&gt;</span><span class="pln">${dataInputOfServiceTask.suffix}</span><span class="tag">&lt;/to&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/assignment&gt;</span><span class="pln"><br></span><span class="tag">&lt;/dataInputAssociation&gt;</span></pre><p>
			另外，我们可以使用更简单的简化方式。'sourceRef'元素是activiti的变量名，
			'targetRef'元素是item定义的一个属性。在下面的例子中，我们把'PrefixVariable'变量的值分配给'field'属性，
			把'SuffixVariable'变量的值分配给'suffix'属性。
       </p><pre class="prettyprint"><span class="tag">&lt;dataInputAssociation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sourceRef&gt;</span><span class="pln">PrefixVariable</span><span class="tag">&lt;/sourceRef&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;targetRef&gt;</span><span class="pln">prefix</span><span class="tag">&lt;/targetRef&gt;</span><span class="pln"><br></span><span class="tag">&lt;/dataInputAssociation&gt;</span><span class="pln"><br></span><span class="tag">&lt;dataInputAssociation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sourceRef&gt;</span><span class="pln">SuffixVariable</span><span class="tag">&lt;/sourceRef&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;targetRef&gt;</span><span class="pln">suffix</span><span class="tag">&lt;/targetRef&gt;</span><span class="pln"><br></span><span class="tag">&lt;/dataInputAssociation&gt;</span></pre></div><div class="section" title="Web Service任务数据输出关联"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnWebserviceTaskDataOutputAssociation"></a>Web Service任务数据输出关联</h4></div></div></div><p>
			有两种方式指定数据输出关联：
		</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>使用表达式</p></li><li class="listitem"><p>使用简化方式</p></li></ul></div><p>
			要使用表达式指定数据输出关联，我们需要定义目的变量和来源表达式。
			方法和数据输入关联完全一样：
       </p><pre class="prettyprint"><span class="tag">&lt;dataOutputAssociation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;targetRef&gt;</span><span class="pln">dataOutputOfProcess</span><span class="tag">&lt;/targetRef&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;transformation&gt;</span><span class="pln">${dataOutputOfServiceTask.prettyPrint}</span><span class="tag">&lt;/transformation&gt;</span><span class="pln"><br></span><span class="tag">&lt;/dataOutputAssociation&gt;</span></pre><p>
			另外，我们可以使用更简单的简化方式。'sourceRef'元素是item定义的一个属性，
			'targetRef'元素是activiti的变量名。
			方法和数据输入关联完全一样：
       </p><pre class="prettyprint"><span class="tag">&lt;dataOutputAssociation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sourceRef&gt;</span><span class="pln">prettyPrint</span><span class="tag">&lt;/sourceRef&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;targetRef&gt;</span><span class="pln">OutputVariable</span><span class="tag">&lt;/targetRef&gt;</span><span class="pln"><br></span><span class="tag">&lt;/dataOutputAssociation&gt;</span></pre></div></div><div class="section" title="业务规则任务"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnBusinessRuleTask"></a>业务规则任务</h3></div></div></div><a class="link" href="#experimental" title="试验性功能">
			<span class="bold"><strong>[EXPERIMENTAL]</strong></span>
		</a><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBusinessRuleTaskDescription"></a>描述</h4></div></div></div><p>
				业务规则用户用来同步执行一个或多个规则。activiti使用drools规则引擎执行业务规则。
				目前，包含业务规则的.drl文件必须和流程定义一起发布，流程定义里包含了执行这些规则的业务规则任务。
				意味着流程使用的所有.drl文件都必须打包在流程BAR文件里，比如任务表单。
				更多使用Drools Expert创建业务规则的信息，请参考<a class="ulink" href="http://www.jboss.org/drools/documentation" target="_top">JBoss Drools</a>的文档。
			</p><p>
			  如果想要使用你的规则任务的实现，比如，因为你想用不同方式使用drools，或你想使用完全不同的规则引擎，
			  你可以使用BusinessRuleTask上的class或表达式属性，它用起来就和
			  <a class="ulink" href="#bpmnJavaServiceTask" target="_top">ServiceTask</a>一样。
			</p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBusinessRuleTaskGraphicalNotation"></a>图形标记</h4></div></div></div><p>
				业务规则任务使用一个表格小图标进行显示。
				</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_006.png" align="middle"></div><p>
			</p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnBusinessRuleTaskXML"></a>XML内容</h4></div></div></div><p>
				要执行部署流程定义的BAR文件中的一个或多个业务规则，我们需要定义输入和输出变量。
				对于输入变量定义，可以使用逗号分隔的一些流程变量。
				输出变量定义智能包含一个变量名，，它会把执行业务规则后返回的对象保存到对应的流程变量中。
				注意，结果变量会包含一个对象列表。如果没有指定输出变量名称，默认会使用
				org.activiti.engine.rules.OUTPUT。
	   	</p><p>
		下面的业务规则任务会执行和流程定义一起部署的素有业务规则：
        </p><pre class="prettyprint"><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"simpleBusinessRuleProcess"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"businessRuleTask"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="bold"><strong><span class="tag">&lt;businessRuleTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"businessRuleTask"</span><span class="pln"> </span><span class="atn">activiti:ruleVariablesInput</span><span class="pun">=</span><span class="atv">"${order}"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="atn">activiti:resultVariable</span><span class="pun">=</span><span class="atv">"rulesOutput"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"businessRuleTask"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/process&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
			</p><p>
				业务规则任务也可以配置成只执行部署的.drl文件中的一些规则。
				这时要设置逗号分隔的规则名。
				</p><pre class="prettyprint"><span class="tag">&lt;businessRuleTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"businessRuleTask"</span><span class="pln"> </span><span class="atn">activiti:ruleVariablesInput</span><span class="pun">=</span><span class="atv">"${order}"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="atn">activiti:rules</span><span class="pun">=</span><span class="atv">"rule1, rule2"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
			  这时，只会执行rule1和rule2。
	   	</p><p>
				你也可以定义哪些规则不用执行。
				</p><pre class="prettyprint"><span class="tag">&lt;businessRuleTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"businessRuleTask"</span><span class="pln"> </span><span class="atn">activiti:ruleVariablesInput</span><span class="pun">=</span><span class="atv">"${order}"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="atn">activiti:rules</span><span class="pun">=</span><span class="atv">"rule1, rule2"</span><span class="pln"> </span><span class="atn">exclude</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
			  这时除了rule1和rule2以外，所有部署到流程定义同一个BAR文件中的规则都会执行。
			</p><p>
				像之前提到的，可以用一个选项修改BusinessRuleTask的实现：
				</p><pre class="prettyprint"><span class="tag">&lt;businessRuleTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"businessRuleTask"</span><span class="pln"> </span><span class="atn">activiti:class</span><span class="pun">=</span><span class="atv">"${MyRuleServiceDelegate}"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
			  注意BusinessRuleTask的功能和ServiceTask一样，但是我们使用BusinessRuleTask的图标来表示
			  我们在这里要执行业务规则。
			</p></div></div><div class="section" title="邮件任务"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnEmailTask"></a>邮件任务</h3></div></div></div><p>
		    activiti强化了业务流程，支持了自动邮件任务，它可以发送邮件给一个或多个参与者，
			包括支持cc, bcc, HTML内容等等。
			注意邮件任务<span class="bold"><strong>不是</strong></span>BPMN 2.0规范定义的官方任务。
			（它也没有对应的图标）。
			因此，activiti中邮件任务是用专门的服务任务实现的。
		  </p><div class="section" title="邮件服务器配置"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnEmailTaskServerConfiguration"></a>邮件服务器配置</h4></div></div></div><p>
			  activiti引擎要通过支持SMTP功能的外部邮件服务器发送邮件。
			  为了实际发送邮件，引擎穾知道如何访问邮件服务器。
			  下面的配置可以设置到<span class="emphasis"><em>activiti.cfg.xml</em></span>配置文件中：
		      </p><div class="table"><a name="N11CAE"></a><p class="title"><b>Table&nbsp;8.1.&nbsp;邮件服务器配置</b></p><div class="table-contents"><table summary="邮件服务器配置" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>属性</th><th>是否必须</th><th>描述</th></tr></thead><tbody><tr><td>mailServerHost</td><td>否</td><td>邮件服务器的主机名（比如：mail.mycorp.com）。默认为<code class="literal">localhost</code></td></tr><tr><td>mailServerPort</td><td>是，如果没有使用默认端口</td><td>邮件服务器上的SMTP传输端口。默认为<span class="emphasis"><em>25</em></span></td></tr><tr><td>mailServerDefaultFrom</td><td>否</td><td>如果用户没有指定发送邮件的邮件地址，默认设置的发送者的邮件地址。默认为<span class="emphasis"><em>activiti@activiti.org</em></span></td></tr><tr><td>mailServerUsername</td><td>如果服务器需要</td><td>一些邮件服务器需要认证才能发送邮件。默认不设置。</td></tr><tr><td>mailServerPassword</td><td>如果服务器需要</td><td>一些邮件服务器需要认证才能发送邮件。默认不设置。</td></tr><tr><td>mailServerUseSSL</td><td>如果服务器需要</td><td>一些邮件服务器需要ssl交互。默认为false。</td></tr><tr><td>mailServerUseTLS</td><td>如果服务器需要</td><td>一些邮件服务器（比如gmail）需要支持TLS。默认为false。</td></tr></tbody></table></div></div><p><br class="table-break">
		    </p></div><div class="section" title="定义一个邮件任务"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnEmailTaskUsage"></a>定义一个邮件任务</h4></div></div></div><p>
			  邮件任务是一个专用的<a class="link" href="#bpmnJavaServiceTask" title="Java服务任务">服务任务</a>，
			  这个服务任务的<span class="emphasis"><em>type</em></span>设置为<span class="emphasis"><em>'mail'</em></span>。
		      </p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"sendMail"</span><span class="pln"> </span><span class="bold"><strong><span class="atn">activiti:type</span><span class="pun">=</span><span class="atv">"mail"</span></strong></span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		    </p><p>
			  邮件任务是通过<a class="link" href="#serviceTaskFieldInjection" title="属性注入">属性注入</a>进行配置的。
			  所有这些属性都可以使用EL表达式，可以在流程执行中解析。
			  下面的属性都可以设置：
		      </p><div class="table"><a name="N11D11"></a><p class="title"><b>Table&nbsp;8.2.&nbsp;邮件服务器配置</b></p><div class="table-contents"><table summary="邮件服务器配置" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>属性</th><th>是否必须</th><th>描述</th></tr></thead><tbody><tr><td>to</td><td>是</td><td>邮件的接受者。可以使用逗号分隔多个接受者</td></tr><tr><td>from</td><td>否</td><td>邮件发送者的地址。如果不提供，会使用<a class="link" href="#bpmnEmailTaskServerConfiguration" title="邮件服务器配置">默认配置</a>的地址。</td></tr><tr><td>subject</td><td>否</td><td>邮件的主题</td></tr><tr><td>cc</td><td>否</td><td>邮件抄送人。可以使用逗号分隔多个接收者</td></tr><tr><td>bcc</td><td>否</td><td>邮件暗送人。可以使用逗号分隔多个接收者</td></tr><tr><td>charset</td><td>否</td><td>可以修改邮件的字符集，对很多非英语语言是必须设置的。
                 </td></tr><tr><td>html</td><td>否</td><td>作为邮件内容的HTML。</td></tr><tr><td>text</td><td>否</td><td>邮件的内容，在需要使用原始文字（非富文本）的邮件时使用。
				 可以与<span class="emphasis"><em>html</em></span>一起使用，对于不支持富客户端的邮件客户端。
				 客户端会降级到仅显示文本的方式。
                 </td></tr><tr><td>htmlVar</td><td>否</td><td>使用对应的流程变量作为e-mail的内容。它和html的不同之处是它内容中包含的表达式会在mail任务发送之前被替换掉。</td></tr><tr><td>textVar</td><td>否</td><td>使用对应的流程变量作为e-mail的纯文本内容。它和html的不同之处是它内容中包含的表达式会在mail任务发送之前被替换掉。</td></tr><tr><td>ignoreException</td><td>否</td><td>处理邮件失败时，是否忽略异常，不抛出ActivitiException，默认为false。</td></tr><tr><td>exceptionVariableName</td><td>否</td><td>当设置了<span class="emphasis"><em>ignoreException = true</em></span>处理email时不抛出异常，可以指定一个变量名来存储失败信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="使用实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnEmailTaskExampleUsage"></a>使用实例</h4></div></div></div><p>
			  下面的XML演示了使用邮件任务的例子。
		      </p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"sendMail"</span><span class="pln"> </span><span class="atn">activiti:type</span><span class="pun">=</span><span class="atv">"mail"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"from"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"order-shipping@thecompany.com"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"to"</span><span class="pln"> </span><span class="atn">expression</span><span class="pun">=</span><span class="atv">"${recipient}"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"subject"</span><span class="pln"> </span><span class="atn">expression</span><span class="pun">=</span><span class="atv">"Your order ${orderId} has been shipped"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"html"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:expression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;![CDATA[<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;html&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;body&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Hello ${male ? 'Mr.' : 'Mrs.' } ${recipientName},</span><span class="tag">&lt;br/&gt;&lt;br/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; As of ${now}, your order has been </span><span class="tag">&lt;b&gt;</span><span class="pln">processed and shipped</span><span class="tag">&lt;/b&gt;</span><span class="pln">.</span><span class="tag">&lt;br/&gt;&lt;br/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Kind regards,</span><span class="tag">&lt;br/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; TheCompany.<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/body&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/html&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; ]]&gt;<br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/activiti:expression&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/activiti:field&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/serviceTask&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
			  结果如下：
		      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/email.png" align="middle"></div><p>
		    </p></div></div><div class="section" title="Mule任务"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnMuleTask"></a>Mule任务</h3></div></div></div><p>
		    mule任务可以向mule发送消息，以强化activiti的集成能力。
			注意mule任务<span class="bold"><strong>不是</strong></span>BPMN 2.0规范定义的官方任务。
			（它也没有对应的图标）。
			因此，activiti中mule任务是用专门的服务任务实现的。
		  </p><div class="section" title="定义一个mule任务"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnMuleTaskUsage"></a>定义一个mule任务</h4></div></div></div><p>
			  mule任务是一个专用的<a class="link" href="#bpmnJavaServiceTask" title="Java服务任务">服务任务</a>，
			  这个服务任务的<span class="emphasis"><em>type</em></span>设置为<span class="emphasis"><em>'mule'</em></span>。
		      </p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"sendMule"</span><span class="pln"> </span><span class="bold"><strong><span class="atn">activiti:type</span><span class="pun">=</span><span class="atv">"mule"</span></strong></span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		    </p><p>
			  mule任务是通过<a class="link" href="#serviceTaskFieldInjection" title="属性注入">属性注入</a>进行配置的。
			  所有这些属性都可以使用EL表达式，可以在流程执行中解析。
			  下面的属性都可以设置：
		      </p><div class="table"><a name="N11DB4"></a><p class="title"><b>Table&nbsp;8.3.&nbsp;Mule服务器配置</b></p><div class="table-contents"><table summary="Mule服务器配置" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>属性</th><th>是否必须</th><th>描述</th></tr></thead><tbody><tr><td>endpointUrl</td><td>是</td><td>希望调用的Mule终端</td></tr><tr><td>language</td><td>是</td><td>你要使用解析荷载表达式（payloadExpression）属性的语言。</td></tr><tr><td>payloadExpression</td><td>是</td><td>作为消息荷载的表达式。</td></tr><tr><td>resultVariable</td><td>否</td><td>将要保存调用结果的变量名称。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="应用实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnMuleTaskExampleUsage"></a>应用实例</h4></div></div></div><p>
			  下面是一个使用mule任务的例子。
		      </p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"endpointUrl"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:string&gt;</span><span class="pln">vm://in</span><span class="tag">&lt;/activiti:string&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/activiti:field&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"language"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:string&gt;</span><span class="pln">juel</span><span class="tag">&lt;/activiti:string&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/activiti:field&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"payloadExpression"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:string&gt;</span><span class="pln">"hi"</span><span class="tag">&lt;/activiti:string&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/activiti:field&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"resultVariable"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:string&gt;</span><span class="pln">theVariable</span><span class="tag">&lt;/activiti:string&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/activiti:field&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		    </p></div></div><div class="section" title="Camel任务"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnCamelTask"></a>Camel任务</h3></div></div></div><p>
	    Camel任务可以从Camel发送和介绍消息，由此强化了activiti的集成功能。
		注意camel任务<span class="bold"><strong>不是</strong></span>BPMN 2.0规范定义的官方任务。
		（它也没有对应的图标）。
		在activiti中，camel任务时由专用的服务任务实现的。
		要使用camel任务功能时，也要记得吧activiti camel包含到项目里。
      </p><div class="section" title="定义camel任务"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCamelTaskUsage"></a>定义camel任务</h4></div></div></div><p>
		  camel任务是一个专用的<a class="link" href="#bpmnJavaServiceTask" title="Java服务任务">服务任务</a>，
		  这个服务任务的<span class="emphasis"><em>type</em></span>设置为<span class="emphasis"><em>'camel'</em></span>。
          </p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"sendCamel"</span><span class="pln"> </span><span class="bold"><strong><span class="atn">activiti:type</span><span class="pun">=</span><span class="atv">"camel"</span></strong></span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p><p>
		  流程定义只需要在服务任务中定义camel类型。
		  集成逻辑都会代理给camel容器。默认activiti引擎会在spring容器中查找camelContext bean。
		  camelContext定义了camel容器加载的路由规则。下面的例子中路由规则是从指定的java包下加载的。
		  但是你也可以通过spring配置直接定义路由规则。
         </p><pre class="prettyprint"><span class="tag">&lt;camelContext</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"camelContext"</span><span class="pln"> </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://camel.apache.org/schema/spring"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;packageScan&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;package&gt;</span><span class="pln">org.activiti.camel.route</span><span class="tag">&lt;/package&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/packageScan&gt;</span><span class="pln"><br></span><span class="tag">&lt;/camelContext&gt;</span></pre><p>
        </p><p>
          如果想了解更多关于camel路由的信息，可以访问<a class="ulink" href="http://camel.apache.org/" target="_top">Camel的网站</a>。
		  在这里只通过很小的例子演示了基础的概念。
		  在第一个例子中，我们会通过activiti工作流实现最简单的Camel调用。我们称其为SimpleCamelCall。
		</p><p>
		如果想定义多个Camel环境bean，并且（或者）想使用不同的bean名称，可以重载CamelTask的定义，如下所示：
		</p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"serviceTask1"</span><span class="pln"> </span><span class="atn">activiti:type</span><span class="pun">=</span><span class="atv">"camel"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"camelContext"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"customCamelContext"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/serviceTask&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		</p></div><div class="section" title="简单Camel调用"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCamelTaskSimpleCamelCall"></a>简单Camel调用</h4></div></div></div><p>
		这个例子对应的文件都可以在activiti camel模块的org.activiti.camel.examples.simpleCamelCall包下找到。我们的目标是简单激活一个特定的camel路由。
		首先，我们需要一个Spring环境，它要包含之前介绍的路由。这些文件的目的如下：
</p><pre class="prettyprint"><span class="tag">&lt;camelContext</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"camelContext"</span><span class="pln"> </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://camel.apache.org/schema/spring"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;packageScan&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;package&gt;</span><span class="pln">org.activiti.camel.examples.simpleCamelCall</span><span class="tag">&lt;/package&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/packageScan&gt;</span><span class="pln"><br></span><span class="tag">&lt;/camelContext&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre>
	   包含名为SimpleCamelCallRoute的路由的类文件，放在PackageScan标签的扫描目录下。
	   下面就是路由的定义：

         <pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">SimpleCamelCallRoute</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">RouteBuilder</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> configure</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">from</span><span class="pun">(</span><span class="str">"activiti:SimpleCamelCallProcess:simpleCall"</span><span class="pun">).</span><span class="pln">to</span><span class="pun">(</span><span class="str">"log: org.activiti.camel.examples.SimpleCamelCall"</span><span class="pun">);</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span></pre>
这个规则仅仅打印消息体，不会做其他事情。注意终端的格式。它包含三部分：
<div class="table"><a name="N11E25"></a><p class="title"><b>Table&nbsp;8.4.&nbsp;终端URL：</b></p><div class="table-contents"><table summary="终端URL：" border="1"><colgroup><col><col></colgroup><thead><tr><th>部分</th><th>说明</th></tr></thead><tbody><tr><td>终端URL</td><td>引用activiti终端</td></tr><tr><td>SimpleCamelCallProcess</td><td>流程名</td></tr><tr><td>simpleCall</td><td>流程中的Camel服务</td></tr></tbody></table></div></div><br class="table-break">
	OK，我们的规则已经配置好，也可以让Camel使用了。
	现在看工作流部分。工作流看起来像这样：

          <pre class="prettyprint"><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"SimpleCamelCallProcess"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"start"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow1"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"start"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"simpleCall"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="bold"><strong><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"simpleCall"</span><span class="pln"> </span><span class="atn">activiti:type</span><span class="pun">=</span><span class="atv">"camel"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></strong></span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow2"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"simpleCall"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"end"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"end"</span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/process&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre>
在serviceTask部分，它只注明服务的类型是Camel，目标规则名为simpleCall。这与上面的activiti终端相匹配。初始化流程后，我们会看到一个空的日志。
好，我们已经完成了这个最简单的例子了。
      </div><div class="section" title="乒乓实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCamelTaskPingPong"></a>乒乓实例</h4></div></div></div><p>
我们的例子成功执行了，但是Camel和Activiti之间没有任何交互，而且这样做也没有任何优势。在这个例子里，我们尝试向Camel发送和接收数据。
我们发送一个字符串，camel进行一些处理，然后返回结果。
发送部分很简单，我们把变量里的消息发送给camel。这里是我们的调用代码：
		</p><pre class="prettyprint"><span class="lit">@Deployment</span><span class="pln"><br></span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> testPingPong</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> variables </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">HashMap</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;();</span><span class="pln"><br><br>&nbsp; variables</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="str">"input"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Hello"</span><span class="pun">);</span><span class="pln"><br>&nbsp; </span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pun">&gt;</span><span class="pln"> outputMap </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">HashMap</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pun">&gt;();</span><span class="pln"><br>&nbsp; variables</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="str">"outputMap"</span><span class="pun">,</span><span class="pln"> outputMap</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"PingPongProcess"</span><span class="pun">,</span><span class="pln"> variables</span><span class="pun">);</span><span class="pln"><br>&nbsp; assertEquals</span><span class="pun">(</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> outputMap</span><span class="pun">.</span><span class="pln">size</span><span class="pun">());</span><span class="pln"><br>&nbsp; assertNotNull</span><span class="pun">(</span><span class="pln">outputMap</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="str">"outputValue"</span><span class="pun">));</span><span class="pln"><br>&nbsp; assertEquals</span><span class="pun">(</span><span class="str">"Hello World"</span><span class="pun">,</span><span class="pln"> outputMap</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="str">"outputValue"</span><span class="pun">));</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
	变量"input"是Camel规则的实际输入，outputMap会记录camel返回的结果。流程应该像是这样：
	</p><pre class="prettyprint"><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"PingPongProcess"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"start"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow1"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"start"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"ping"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"ping"</span><span class="pln"> </span><span class="atn">activiti:type</span><span class="pun">=</span><span class="atv">"camel"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow2"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"ping"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"saveOutput"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"saveOutput"</span><span class="pln"> &nbsp;</span><span class="atn">activiti:class</span><span class="pun">=</span><span class="atv">"org.activiti.camel.examples.pingPong.SaveOutput"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow3"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"saveOutput"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"end"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"end"</span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/process&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span></pre><p>
	注意，SaveOuput这个serviceTask，会把"Output"变量的值从上下文保存到上面提到的OutputMap中。
	现在，我们必须了解变量是如何发送给Camel，再返回的。这里就要涉及到camel实际执行的行为了。
	变量提交给camel的方法是由CamelBehavior控制的。这里我们使用默认的配置，其他的会在后面提及。
	使用这些代码，我们就可以配置一个期望的camel行为：
	</p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"serviceTask1"</span><span class="pln"> </span><span class="atn">activiti:type</span><span class="pun">=</span><span class="atv">"camel"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"camelBehaviorClass"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"org.activiti.camel.impl.CamelBehaviorCamelBodyImpl"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/serviceTask&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
	如果你没有特别指定一个行为，就会使用org.activiti.camel.impl.CamelBehaviorDefaultImpl。
	这个行为会把变量复制成名称相同的Camel属性。
	在返回时，无论选择什么行为，如果camel消息体是一个map，每个元素都会复制成一个变量，
	否则整个对象会复制到指定名称为"camelBody"的变量中。
	了解这些后，就可以看看我们第二个例子的camel规则了：
	</p><pre class="prettyprint"><span class="lit">@Override</span><span class="pln"><br></span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> configure</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="kwd">from</span><span class="pun">(</span><span class="str">"activiti:PingPongProcess:ping"</span><span class="pun">).</span><span class="pln">transform</span><span class="pun">().</span><span class="pln">simple</span><span class="pun">(</span><span class="str">"${property.input} World"</span><span class="pun">);</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		在这个规则中，字符串"world"会被添加到"input"属性的后面，结果会写入消息体。
		这时可以检查javaServiceTask中的"camelBody"变量，复制到"outputMap"中，并在testcase进行判断。
		现在这个例子是在默认的行为下运行的，然后我们看一起其他的方案。
		在启动的所有camel规则中，流程实例id会复制到camel的名为"PROCESS_ID_PROPERTY"的属性中。
		后续可以用它关联流程实例和camel规则。他也可以在camel规则中直接使用。
	</p><p>
		Activiti中可以使用三种不同的行为。这些行为可以通过在规则URL中指定对应的环节来实现覆盖。
		这里有一个在URL中覆盖现存行为的例子：
		</p><pre class="prettyprint"><span class="kwd">from</span><span class="pun">(</span><span class="str">"activiti:asyncCamelProcess:serviceTaskAsync2?copyVariablesToProperties=true"</span><span class="pun">).</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
下面的表格提供了三种camel行为的概述：
</p><div class="table"><a name="N11E63"></a><p class="title"><b>Table&nbsp;8.5.&nbsp;已有的camel行为：</b></p><div class="table-contents"><table summary="已有的camel行为：" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>行为</th><th>URL</th><th>描述</th></tr></thead><tbody><tr><td>CamelBehaviorDefaultImpl</td><td>copyVariablesToProperties</td><td>把Activiti变量复制为Camel属性</td></tr><tr><td>CamelBehaviorCamelBodyImpl</td><td>copyCamelBodyToBody</td><td>只把名为"camelBody"Activiti变量复制成camel的消息体</td></tr><tr><td>CamelBehaviorBodyAsMapImpl</td><td>copyVariablesToBodyAsMap</td><td>把activiti的所有变量复制到一个map里，作为Camel的消息体</td></tr></tbody></table></div></div><p><br class="table-break">
	上面的表格解释和activiti变量如何传递给camel。下面的表格解释和camel的变量如何返回给activiti。
	它只能配置在规则URL中。
</p><div class="table"><a name="N11E87"></a><p class="title"><b>Table&nbsp;8.6.&nbsp;已有的camel行为：</b></p><div class="table-contents"><table summary="已有的camel行为：" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>Url</th><th>描述</th><td class="auto-generated">&nbsp;</td></tr></thead><tbody><tr><td>默认</td><td>如果Camel消息体是一个map，把每个元素复制成activiti的变量，否则把整个camel消息体作为activiti的"camelBody"变量。</td><td class="auto-generated">&nbsp;</td></tr><tr><td>copyVariablesFromProperties</td><td>将Camel属性以相同名称复制为Activiti变量</td><td class="auto-generated">&nbsp;</td></tr><tr><td>copyCamelBodyToBodyAsString</td><td>和默认一样，但是如果camel消息体不是map时，先把它转换成字符串，再设置为"camelBody"。</td><td class="auto-generated">&nbsp;</td></tr><tr><td>copyVariablesFromHeader</td><td>额外把camel头部以相同名称复制成Activiti变量</td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
		例子的源码放在activiti-camel模块的org.activiti.camel.examples.pingPong包下。
	</p></div><div class="section" title="异步乒乓实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCamelTaskAsyncPingPong"></a>异步乒乓实例</h4></div></div></div><p>
		之前的例子都是同步的。流程会等到camel规则返回之后才会停止。
		一些情况下，我们需要activiti工作流继续运行。这时camelServiceTask的异步功能就特别有用。
		你可以通过设置camelServiceTask的async属性来启用这个功能。
		</p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"serviceAsyncPing"</span><span class="pln"> </span><span class="atn">activiti:type</span><span class="pun">=</span><span class="atv">"camel"</span><span class="pln"> </span><span class="atn">activiti:async</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		通过设置这个功能，camel规则会被activiti的jobExecutor异步执行。
		当你在camel规则中定义了一个队列，activiti流程会在camelServiceTask执行时继续运行。
		camel规则会以完全异步的方式执行。
		如果你想在什么地方等待camelServiceTask的返回值，你可以使用一个receiveTask。
		</p><pre class="prettyprint"><span class="tag">&lt;receiveTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"receiveAsyncPing"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Wait State"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		</p>
		流程实例会等到接收一个signal，比如来自camel。在camel中你可以发送一个signal给流程实例，通过对应的activiti终端发送消息。
		<pre class="prettyprint"><span class="pln">&nbsp;</span><span class="kwd">from</span><span class="pun">(</span><span class="str">"activiti:asyncPingProcess:serviceAsyncPing"</span><span class="pun">).</span><span class="pln">to</span><span class="pun">(</span><span class="str">"activiti:asyncPingProcess:receiveAsyncPing"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre>
	 对于一个常用的终端，会使用冒号分隔的三个部分：
	 	<div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
			   常量字符串"activiti"
			  </p></li><li class="listitem"><p>
			    流程名称
			  </p></li><li class="listitem"><p>
			    接收任务名
			  </p></li></ul></div></div><div class="section" title="从camel规则中实例化工作流"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCamelTaskAsyncPingPong"></a>从camel规则中实例化工作流</h4></div></div></div><p>
		之前的所有例子中，activiti工作流会先启动，然后在流程中启动camel规则。
		也可以使用另外一种方法。在已经启动的camel规则中启动一个工作流。
		这会触发一个receiveTask十分类似，除了最后的部分。这是一个实例规则：
	</p><pre class="prettyprint"><span class="kwd">from</span><span class="pun">(</span><span class="str">"direct:start"</span><span class="pun">).</span><span class="pln">to</span><span class="pun">(</span><span class="str">"activiti:camelProcess"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
	我们看到url有两个部分，第一个部分是常量字符串"activiti"，第二部分是流程的名称。
	很明显，流程应该已经部署完成，并且是可以启动的。
		</p></div></div><div class="section" title="手工任务"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnManualTask"></a>手工任务</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnManualTaskDescription"></a>描述</h4></div></div></div><p>
			  <span class="emphasis"><em>手工任务</em></span>定义了BPM引擎外部的任务。
			  用来表示工作需要某人完成，而引擎不需要知道，也没有对应的系统和UI接口。
			  对于引擎，手工任务是<span class="bold"><strong>直接通过的活动</strong></span>，
			  流程到达它之后会自动向下执行。
		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnManualTaskGraphicalNotation"></a>图形标记</h4></div></div></div><p>
			  手工任务显示为一个圆角矩形，左上角是一个手型小图标。
		      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_044.png" align="middle"></div><p>
		    </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnManualTaskXml"></a>XML内容</h4></div></div></div><p>
		      </p><pre class="prettyprint"><span class="tag">&lt;manualTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myManualTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Call client for more information"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
		    </p></div></div><div class="section" title="Java接收任务"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnReceiveTask"></a>Java接收任务</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnReceiveTaskDescription"></a>描述</h4></div></div></div><p>
		  接收任务是一个简单任务，它会等待对应消息的到达。
		  当前，我们只实现了这个任务的java语义。
		  当流程达到接收任务，流程状态会保存到存储里。
		  意味着流程会等待在这个等待状态，
		  直到引擎接收了一个特定的消息，
		  这会触发流程穿过接收任务继续执行。
		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="N11EFB"></a>图形标记</h4></div></div></div><p>
		  接收任务显示为一个任务（圆角矩形），右上角有一个消息小标记。
		  消息是白色的（黑色图标表示发送语义）
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_034.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="N11F06"></a>XML内容</h4></div></div></div><p>
          </p><pre class="prettyprint"><span class="tag">&lt;receiveTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"waitState"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"wait"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"> &nbsp; &nbsp;</span></pre><p>
        </p><p>
		  要在接收任务等待的流程实例继续执行，
		  可以调用<span class="emphasis"><em>runtimeService.signal(executionId)</em></span>，传递接收任务上流程的id。
		  下面的代码演示了实际是如何工作的：
          </p><pre class="prettyprint"><span class="typ">ProcessInstance</span><span class="pln"> pi </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"receiveTask"</span><span class="pun">);</span><span class="pln"><br></span><span class="typ">Execution</span><span class="pln"> execution </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">createExecutionQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">processInstanceId</span><span class="pun">(</span><span class="pln">pi</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">())</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">activityId</span><span class="pun">(</span><span class="str">"waitState"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">singleResult</span><span class="pun">();</span><span class="pln"><br>assertNotNull</span><span class="pun">(</span><span class="pln">execution</span><span class="pun">);</span><span class="pln"><br><br></span><span class="bold"><strong><span class="pln">runtimeService</span><span class="pun">.</span><span class="pln">signal</span><span class="pun">(</span><span class="pln">execution</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">());</span></strong></span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p></div></div><div class="section" title="Shell任务"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnShellTask"></a>Shell任务</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnShellTaskDescription"></a>描述</h4></div></div></div><p>
				shell任务可以执行shell脚本和命令。
				注意shell任务<span class="bold"><strong>不是</strong></span>BPMN 2.0规范定义的官方任务。
				（它也没有对应的图标）。
				</p></div><div class="section" title="定义shell任务"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnShellTaskUsage"></a>定义shell任务</h4></div></div></div><p>shell任务是一个专用的<a class="link" href="#bpmnJavaServiceTask" title="Java服务任务">服务任务</a>，
				这个服务任务的<span class="emphasis"><em>type</em></span>设置为<span class="emphasis"><em>'shell'</em></span>。
		      </p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"shellEcho"</span><span class="pln"> </span><span class="bold"><strong><span class="atn">activiti:type</span><span class="pun">=</span><span class="atv">"shell"</span></strong></span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		    </p><p>
			  shell任务使用<a class="link" href="#serviceTaskFieldInjection" title="属性注入">属性注入</a>进行配置。
			  所有属性都可以包含EL表达式，会在流程执行过程中解析。
			  可以配置以下属性：
		      </p><div class="table"><a name="N11F45"></a><p class="title"><b>Table&nbsp;8.7.&nbsp;Shell任务参数配置</b></p><div class="table-contents"><table summary="Shell任务参数配置" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>属性</th><th>是否必须</th><th>类型</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>command</td><td>是</td><td>String</td><td>执行的shell命令</td><td>&nbsp;</td></tr><tr><td>arg0-5</td><td>否</td><td>String</td><td>参数0至5</td><td>&nbsp;</td></tr><tr><td>wait</td><td>否</td><td>true/false</td><td>是否需要等待到shell进程结束</td><td>true</td></tr><tr><td>redirectError</td><td>否</td><td>true/false</td><td>把标准错误打印到标准流中</td><td>false</td></tr><tr><td>cleanEnv</td><td>否</td><td>true/false</td><td>shell进行不继承当前环境</td><td>false</td></tr><tr><td>outputVariable</td><td>否</td><td>String</td><td>保存输出的变量名</td><td>不会记录输出结果</td></tr><tr><td>errorCodeVariable</td><td>否</td><td>String</td><td>包含结果错误代码的变量名</td><td>不会注册错误级别</td></tr><tr><td>directory</td><td>否</td><td>String</td><td>shell进程的默认目录</td><td>当前目录</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="应用实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnShellTaskExampleUsage"></a>应用实例</h4></div></div></div><p>
			  下面的代码演示了使用shell任务的实例。它会执行shell脚本"cmd /c echo EchoTest"，等到它结束，再把输出结果保存到resultVar中。
		      </p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"shellEcho"</span><span class="pln"> </span><span class="atn">activiti:type</span><span class="pun">=</span><span class="atv">"shell"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"command"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"cmd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"arg1"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"/c"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"arg2"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"echo"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"arg3"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"EchoTest"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"wait"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"outputVariable"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"resultVar"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/serviceTask&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>

		    </p></div></div><div class="section" title="执行监听器"><div class="titlepage"><div><div><h3 class="title"><a name="executionListeners"></a>执行监听器</h3></div></div></div><p><span class="bold"><strong>兼容性提醒</strong></span>：在发布5.3后，我们发现执行监听器，
	  任务监听器，表达式还是非公开API。这些类在<code class="literal">org.activiti.engine.impl...</code>的子包，
	  包名中有一个<code class="literal">impl</code>。
      <code class="literal">org.activiti.engine.impl.pvm.delegate.ExecutionListener</code>,
      <code class="literal">org.activiti.engine.impl.pvm.delegate.TaskListener</code> and
      <code class="literal">org.activiti.engine.impl.pvm.el.Expression</code>已经废弃了。
	  从现在开始，应该使用<code class="literal">org.activiti.engine.delegate.ExecutionListener</code>,
      <code class="literal">org.activiti.engine.delegate.TaskListener</code> 和 <code class="literal">org.activiti.engine.delegate.Expression</code>。
	  在新的公开API中，删除了<code class="literal">ExecutionListenerExecution.getEventSource()</code>。
	  因为已经设置了废弃编译警告，所以已存的代码应该可以正常运行。但是要考虑切换到新的公共API接口
	  （包名中没有.impl.）。
      </p><p>执行监听器可以执行外部java代码或执行表达式，当流程定义中发生了某个事件。
	  可以捕获的事件有：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>流程实例的启动和结束。</p></li><li class="listitem"><p>选中一条连线。</p></li><li class="listitem"><p>节点的开始和结束。</p></li><li class="listitem"><p>网关的开始和结束。</p></li><li class="listitem"><p>中间事件的开始和结束。</p></li><li class="listitem"><p>开始时间结束或结束事件开始。</p></li></ul></div><p>
      </p><p>
	    下面的流程定义包含了3个流程监听器：
        </p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"executionListenersProcess"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:executionListener</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.examples.bpmn.executionlistener.ExampleExecutionListenerOne"</span><span class="pln"> </span><span class="atn">event</span><span class="pun">=</span><span class="atv">"start"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span></strong></span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"firstTask"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"firstTask"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"firstTask"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"secondTask"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:executionListener</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.examples.bpmn.executionListener.ExampleExecutionListenerTwo"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span></strong></span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/sequenceFlow&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"secondTask"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:executionListener</span><span class="pln"> </span><span class="atn">expression</span><span class="pun">=</span><span class="atv">"${myPojo.myMethod(execution.event)}"</span><span class="pln"> </span><span class="atn">event</span><span class="pun">=</span><span class="atv">"end"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span></strong></span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/userTask&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"secondTask"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"thirdTask"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"thirdTask"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"thirdTask"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;/process&gt;</span></pre><p>
        </p><p>第一个流程监听器监听流程开始。监听器是一个外部java类（像是<code class="literal">ExampleExecutionListenerOne</code>），
		需要实现<code class="literal">org.activiti.engine.delegate.ExecutionListener</code>接口。
		当事件发生时（这里是<code class="literal">end</code>事件），
		会调用<code class="literal">notify(ExecutionListenerExecution execution)</code>方法。
        </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ExampleExecutionListenerOne</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="bold"><strong><span class="typ">ExecutionListener</span></strong></span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="bold"><strong><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> notify</span><span class="pun">(</span><span class="typ">ExecutionListenerExecution</span><span class="pln"> execution</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> </span><span class="pun">{</span></strong></span><span class="pln"><br>&nbsp; &nbsp; execution</span><span class="pun">.</span><span class="pln">setVariable</span><span class="pun">(</span><span class="str">"variableSetInExecutionListener"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"firstValue"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; execution</span><span class="pun">.</span><span class="pln">setVariable</span><span class="pun">(</span><span class="str">"eventReceived"</span><span class="pun">,</span><span class="pln"> execution</span><span class="pun">.</span><span class="pln">getEventName</span><span class="pun">());</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
		也可以使用实现<code class="literal">org.activiti.engine.delegate.JavaDelegate</code>接口的代理类。
		代理类可以在结构中重用，比如serviceTask的代理。
        </p><p>
		   第二个流程监听器在连线执行时调用。注意这个<code class="literal">listener</code>元素不能定义<code class="literal">event</code>，
		   因为连线只能触发<code class="literal">take</code>事件。
		   <span class="bold"><strong>为连线定义的监听器的<code class="literal">event</code>属性会被忽略。</strong></span>
        </p><p>
		  最后一个流程监听器在节点<code class="literal">secondTask</code>结束时调用。这里使用<code class="literal">expression</code>
		  代替<code class="literal">class</code>来在事件触发时执行/调用。
        </p><pre class="prettyprint"><span class="tag">&lt;activiti:executionListener</span><span class="pln"> </span><span class="atn">expression</span><span class="pun">=</span><span class="atv">"</span><span class="bold"><strong><span class="atv">${myPojo.myMethod(execution.eventName)}</span></strong></span><span class="atv">"</span><span class="pln"> </span><span class="atn">event</span><span class="pun">=</span><span class="atv">"end"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
		  和其他表达式一样，流程变量可以处理和使用。因为流程实现对象有一个保存事件名称的属性，
		  可以在方法中使用<code class="literal">execution.eventName</code>获的事件名称。
        </p><p>
		  流程监听器也支持使用<code class="literal">delegateExpression</code>,
          <a class="link" href="#bpmnJavaServiceTaskXML" title="XML内容">和服务任务相同</a>。
          </p><pre class="prettyprint"><span class="tag">&lt;activiti:executionListener</span><span class="pln"> </span><span class="atn">event</span><span class="pun">=</span><span class="atv">"start"</span><span class="pln"> </span><span class="atn">delegateExpression</span><span class="pun">=</span><span class="atv">"${myExecutionListenerBean}"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
        </p><p>
		  在activiti 5.12中，我们也介绍了新的流程监听器，org.activiti.engine.impl.bpmn.listener.ScriptExecutionListener。
		  这个脚本流程监听器可以为某个流程监听事件执行一段脚本。
</p><pre class="prettyprint"><span class="tag">&lt;activiti:executionListener</span><span class="pln"> </span><span class="atn">event</span><span class="pun">=</span><span class="atv">"start"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.impl.bpmn.listener.ScriptExecutionListener"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"script"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:string&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; def bar = "BAR"; &nbsp;// local variable<br>&nbsp; &nbsp; &nbsp; foo = "FOO"; // pushes variable to execution context<br>&nbsp; &nbsp; &nbsp; execution.setVariable("var1", "test"); // test access to execution instance<br>&nbsp; &nbsp; &nbsp; bar // implicit return value<br>&nbsp; &nbsp; </span><span class="tag">&lt;/activiti:string&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/activiti:field&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"language"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"groovy"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"resultVariable"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"myVar"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;activiti:executionListener&gt;</span></pre><p>
        </p><div class="section" title="流程监听器的属性注入"><div class="titlepage"><div><div><h4 class="title"><a name="executionListenerFieldInjection"></a>流程监听器的属性注入</h4></div></div></div><p>
		 使用流程监听器时，可以配置<code class="literal">class</code>属性，可以使用属性注入。
		 这和使用<a class="link" href="#serviceTaskFieldInjection" title="属性注入">服务任务属性注入</a>相同，
		 参考它可以获得属性注入的很多信息。
        </p><p>
		 下面的代码演示了使用了属性注入的流程监听器的流程的简单例子。
        </p><pre class="prettyprint"><span class="pln">&nbsp;</span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"executionListenersProcess"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:executionListener</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.examples.bpmn.executionListener.ExampleFieldInjectedExecutionListener"</span><span class="pln"> </span><span class="atn">event</span><span class="pun">=</span><span class="atv">"start"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"fixedValue"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"Yes, I am "</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"dynamicValue"</span><span class="pln"> </span><span class="atn">expression</span><span class="pun">=</span><span class="atv">"${myVar}"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/activiti:executionListener&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span></strong></span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"firstTask"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"firstTask"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"firstTask"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/process&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p><p>
          </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ExampleFieldInjectedExecutionListener</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">ExecutionListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="bold"><strong><span class="kwd">private</span><span class="pln"> </span><span class="typ">Expression</span><span class="pln"> fixedValue</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Expression</span><span class="pln"> dynamicValue</span><span class="pun">;</span></strong></span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> notify</span><span class="pun">(</span><span class="typ">ExecutionListenerExecution</span><span class="pln"> execution</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; execution</span><span class="pun">.</span><span class="pln">setVariable</span><span class="pun">(</span><span class="str">"var"</span><span class="pun">,</span><span class="pln"> </span><span class="bold"><strong><span class="pln">fixedValue</span><span class="pun">.</span><span class="pln">getValue</span><span class="pun">(</span><span class="pln">execution</span><span class="pun">).</span><span class="pln">toString</span><span class="pun">()</span></strong></span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="bold"><strong><span class="pln">dynamicValue</span><span class="pun">.</span><span class="pln">getValue</span><span class="pun">(</span><span class="pln">execution</span><span class="pun">).</span><span class="pln">toString</span><span class="pun">()</span></strong></span><span class="pun">);</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		  <code class="literal">ExampleFieldInjectedExecutionListener</code>类串联了两个注入的属性。
		  （一个是固定的，一个是动态的），把他们保存到流程变量'<code class="literal">var</code>'中。
        </p><p>
        </p><pre class="prettyprint"><span class="lit">@Deployment</span><span class="pun">(</span><span class="pln">resources </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="str">"org/activiti/examples/bpmn/executionListener/ExecutionListenersFieldInjectionProcess.bpmn20.xml"</span><span class="pun">})</span><span class="pln"><br></span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> testExecutionListenerFieldInjection</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> variables </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">HashMap</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;();</span><span class="pln"><br>&nbsp; </span><span class="bold"><strong><span class="pln">variables</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="str">"myVar"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"listening!"</span><span class="pun">);</span></strong></span><span class="pln"><br><br>&nbsp; </span><span class="typ">ProcessInstance</span><span class="pln"> processInstance </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"executionListenersProcess"</span><span class="pun">,</span><span class="pln"> variables</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; </span><span class="typ">Object</span><span class="pln"> varSetByListener </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">getVariable</span><span class="pun">(</span><span class="pln">processInstance</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">(),</span><span class="pln"> </span><span class="str">"var"</span><span class="pun">);</span><span class="pln"><br>&nbsp; assertNotNull</span><span class="pun">(</span><span class="pln">varSetByListener</span><span class="pun">);</span><span class="pln"><br>&nbsp; assertTrue</span><span class="pun">(</span><span class="pln">varSetByListener </span><span class="kwd">instanceof</span><span class="pln"> </span><span class="typ">String</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; </span><span class="com">// Result is a concatenation of fixed injected field and injected expression</span><span class="pln"><br>&nbsp; </span><span class="bold"><strong><span class="pln">assertEquals</span><span class="pun">(</span><span class="str">"Yes, I am listening!"</span><span class="pun">,</span><span class="pln"> varSetByListener</span><span class="pun">);</span></strong></span><span class="pln"><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p></div></div><div class="section" title="任务监听器"><div class="titlepage"><div><div><h3 class="title"><a name="taskListeners"></a>任务监听器</h3></div></div></div><p>
      <span class="emphasis"><em>任务监听器</em></span>可以在发生对应的任务相关事件时执行自定义java逻辑
	  或表达式。
    </p><p>
	  任务监听器只能添加到流程定义中的<a class="link" href="#bpmnUserTask" title="用户任务">用户任务</a>中。
	  注意它必须定义在<span class="emphasis"><em>BPMN 2.0 extensionElements</em></span>的子元素中，
	  并使用<span class="emphasis"><em>activiti</em></span>命名空间，因为任务监听器是activiti独有的结构。
      </p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"My Task"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;activiti:taskListener</span><span class="pln"> </span><span class="atn">event</span><span class="pun">=</span><span class="atv">"create"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.MyTaskCreateListener"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/userTask&gt;</span></pre><p>
      <span class="emphasis"><em>任务监听器</em></span>支持以下属性：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>event</strong></span>（必选）：任务监听器会被调用的任务类型。
			可能的类型为：
            </p><div class="itemizedlist"><ul class="itemizedlist" type="circle"><li class="listitem"><p>
                  <span class="bold"><strong>create</strong></span>：任务创建并<span class="bold"><strong>设置所有属性后</strong></span>触发。
                </p></li><li class="listitem"><p>
                  <span class="bold"><strong>assignment</strong></span>：任务分配给一些人时触发。
				  当流程到达userTask， <span class="emphasis"><em>assignment</em></span>事件
				  会在<span class="emphasis"><em>create</em></span>事件<span class="bold"><strong>之前</strong></span>发生。
				  这样的顺序似乎不自然，但是原因很简单：当获得<span class="emphasis"><em>create</em></span>时间时，
				  我们想获得任务的所有属性，包括执行人。
                </p></li><li class="listitem"><p>
                  <span class="bold"><strong>complete</strong></span>：当任务完成，并尚未从运行数据中删除时触发。
                </p></li><li class="listitem"><p>
                  <span class="bold"><strong>delete</strong></span>：只在任务删除之前发生。
				  注意在通过completeTask正常完成时，也会执行。
                </p></li></ul></div><p>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>class</strong></span>：必须调用的代理类。
			这个类必须实现<code class="literal">org.activiti.engine.delegate.TaskListener</code>接口。
            </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">MyTaskCreateListener</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">TaskListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> notify</span><span class="pun">(</span><span class="typ">DelegateTask</span><span class="pln"> delegateTask</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="com">// Custom logic goes here</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span></pre><p>

			可以使用<a class="link" href="#serviceTaskFieldInjection" title="属性注入">属性注入</a>把流程变量或执行传递给代理类。
			注意代理类的实例是在部署时创建的
			（和activiti中其他类代理的情况一样），这意味着所有流程实例都会共享同一个实例。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>expression</strong></span>：（无法同时与<span class="emphasis"><em>class</em></span>属性一起使用）：
			指定事件发生时执行的表达式。
			可以把<code class="literal">DelegateTask</code>对象和事件名称（使用<code class="literal">task.eventName</code>）
			作为参数传递给调用的对象。
            </p><pre class="prettyprint"><span class="tag">&lt;activiti:taskListener</span><span class="pln"> </span><span class="atn">event</span><span class="pun">=</span><span class="atv">"create"</span><span class="pln"> </span><span class="atn">expression</span><span class="pun">=</span><span class="atv">"${myObject.callMethod(task, task.eventName)}"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>delegateExpression</strong></span>可以指定一个表达式，解析一个实现了<code class="literal">TaskListener</code>接口的对象，
			<a class="link" href="#bpmnJavaServiceTaskXML" title="XML内容">这与服务任务一致</a>。
            </p><pre class="prettyprint"><span class="tag">&lt;activiti:taskListener</span><span class="pln"> </span><span class="atn">event</span><span class="pun">=</span><span class="atv">"create"</span><span class="pln"> </span><span class="atn">delegateExpression</span><span class="pun">=</span><span class="atv">"${myTaskListenerBean}"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
          </p></li><li class="listitem"><p>
		  在activiti 5.12中，我们也介绍了新的任务监听器，org.activiti.engine.impl.bpmn.listener.ScriptTaskListener。
		  脚本任务监听器可以为任务监听器事件执行脚本。
</p><pre class="prettyprint"><span class="tag">&lt;activiti:taskListener</span><span class="pln"> </span><span class="atn">event</span><span class="pun">=</span><span class="atv">"complete"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.impl.bpmn.listener.ScriptTaskListener"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"script"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:string&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; def bar = "BAR"; &nbsp;// local variable<br>&nbsp; &nbsp; &nbsp; foo = "FOO"; // pushes variable to execution context<br>&nbsp; &nbsp; &nbsp; task.setOwner("kermit"); // test access to task instance<br>&nbsp; &nbsp; &nbsp; bar // implicit return value<br>&nbsp; &nbsp; </span><span class="tag">&lt;/activiti:string&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/activiti:field&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"language"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"groovy"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;activiti:field</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"resultVariable"</span><span class="pln"> </span><span class="atn">stringValue</span><span class="pun">=</span><span class="atv">"myVar"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;activiti:taskListener&gt;</span></pre><p>
        </p></li></ul></div><p>
    </p></div><div class="section" title="多实例（循环）"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnMultiInstance"></a>多实例（循环）</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnMultiInstanceDescription"></a>描述</h4></div></div></div><p>
		  <span class="emphasis"><em>多实例节点</em></span>是在业务流程中定义重复环节的一个方法。
		  从开发角度讲，多实例和<span class="bold"><strong>循环</strong></span>是一样的：
		  它可以根据给定的集合，为每个元素执行一个环节甚至一个完整的子流程，
		  <span class="bold"><strong>既可以顺序依次执行也可以并发同步执行</strong></span>。
        </p><p>
		  <span class="emphasis"><em>多实例</em></span>是在一个普通的节点上添加了额外的属性定义
		  （所以叫做<span class="emphasis"><em>'多实例</em></span>特性'），这样运行时节点就会执行多次。
		  下面的节点都可以成为一个<span class="emphasis"><em>多实例节点：</em></span>
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><a class="link" href="#bpmnUserTask" title="用户任务">User Task</a></p></li><li class="listitem"><p><a class="link" href="#bpmnScriptTask" title="脚本任务">Script Task</a></p></li><li class="listitem"><p><a class="link" href="#bpmnJavaServiceTask" title="Java服务任务">Java Service Task</a></p></li><li class="listitem"><p><a class="link" href="#bpmnWebserviceTask" title="Web Service任务">Web Service Task</a></p></li><li class="listitem"><p><a class="link" href="#bpmnBusinessRuleTask" title="业务规则任务">Business Rule Task</a></p></li><li class="listitem"><p><a class="link" href="#bpmnEmailTask" title="邮件任务">Email Task</a></p></li><li class="listitem"><p><a class="link" href="#bpmnManualTask" title="手工任务">Manual Task</a></p></li><li class="listitem"><p><a class="link" href="#bpmnReceiveTask" title="Java接收任务">Receive Task</a></p></li><li class="listitem"><p><a class="link" href="#bpmnSubProcess" title="子流程">(Embedded) Sub-Process</a></p></li><li class="listitem"><p><a class="link" href="#bpmnCallActivity" title="调用活动（子流程）">Call Activity</a></p></li></ul></div><p>
          <a class="link" href="#bpmnGateways" title="网关">网关</a>和<a class="link" href="#bpmnEvents" title="事件（Event）">事件</a>
		  <span class="bold"><strong>不能</strong></span>设置多实例。
        </p><p>
		  根据规范的要求，每个上级流程为每个实例创建分支时都要提供如下变量：
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><span class="bold"><strong>nrOfInstances</strong></span>：实例总数</p></li><li class="listitem"><p><span class="bold"><strong>nrOfActiveInstances</strong></span>：当前活动的，比如，还没完成的，实例数量。
			对于顺序执行的多实例，值一直为1。</p></li><li class="listitem"><p><span class="bold"><strong>nrOfCompletedInstances</strong></span>：已经完成实例的数目。</p></li></ul></div><p>
		  可以通过<code class="literal">execution.getVariable(x)</code>方法获得这些变量。
        </p><p>
		  另外，每个创建的分支都会有分支级别的本地变量（比如，其他实例不可见，
		  不会保存到流程实例级别）：
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><span class="bold"><strong>loopCounter</strong></span>：表示特定实例的<span class="emphasis"><em>在循环的索引值</em></span>。可以使用activiti的<span class="bold"><strong>elementIndexVariable</strong></span>属性修改loopCounter的变量名。</p></li></ul></div><p>
        </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnMultiInstanceGraphicalNotation"></a>图形标记</h4></div></div></div><p>
		  如果节点是多实例的，会在节点底部显示三条短线。
		  三条<span class="emphasis"><em>竖</em></span>线表示实例会并行执行。
		  三条<span class="emphasis"><em>横</em></span>线表示顺序执行。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_040.png" align="middle"></div><p>
        </p></div><div class="section" title="Xml内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnMultiInstanceXml"></a>Xml内容</h4></div></div></div><p>
		 要把一个节点设置为多实例，节点xml元素必须设置一个<code class="literal">multiInstanceLoopCharacteristics</code>子元素。
         </p><pre class="prettyprint"><span class="tag">&lt;multiInstanceLoopCharacteristics</span><span class="pln"> </span><span class="atn">isSequential</span><span class="pun">=</span><span class="atv">"false|true"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp;...<br></span><span class="tag">&lt;/multiInstanceLoopCharacteristics&gt;</span></pre><p>
         <span class="bold"><strong>isSequential</strong></span>属性表示节点是进行
		 顺序执行还是并行执行。
        </p><p>
		  实例的数量会<span class="bold"><strong>在进入节点时计算一次</strong></span>。
		  有一些方法配置它。一种方法是使用<span class="bold"><strong>loopCardinality</strong></span>子元素直接指定一个数字。
          </p><pre class="prettyprint"><span class="tag">&lt;multiInstanceLoopCharacteristics</span><span class="pln"> </span><span class="atn">isSequential</span><span class="pun">=</span><span class="atv">"false|true"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;loopCardinality&gt;</span><span class="pln">5</span><span class="tag">&lt;/loopCardinality&gt;</span><span class="pln"><br></span><span class="tag">&lt;/multiInstanceLoopCharacteristics&gt;</span></pre><p>
		  也可以使用结果为整数的表达式：
          </p><pre class="prettyprint"><span class="tag">&lt;multiInstanceLoopCharacteristics</span><span class="pln"> </span><span class="atn">isSequential</span><span class="pun">=</span><span class="atv">"false|true"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;loopCardinality&gt;</span><span class="pln">${nrOfOrders-nrOfCancellations}</span><span class="tag">&lt;/loopCardinality&gt;</span><span class="pln"><br></span><span class="tag">&lt;/multiInstanceLoopCharacteristics&gt;</span></pre><p>
        </p><p>
		  另一个定义实例数目的方法是，通过<code class="literal">loopDataInputRef</code>子元素，设置一个类型为集合的流程变量名。
		  对于集合中的每个元素，都会创建一个实例。
		  也可以通过<code class="literal">inputDataItem</code>子元素指定集合。
		  下面的代码演示了这些配置：
          </p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"miTasks"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"My Task ${loopCounter}"</span><span class="pln"> </span><span class="atn">activiti:assignee</span><span class="pun">=</span><span class="atv">"${assignee}"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;multiInstanceLoopCharacteristics</span><span class="pln"> </span><span class="atn">isSequential</span><span class="pun">=</span><span class="atv">"false"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;loopDataInputRef&gt;</span><span class="pln">assigneeList</span><span class="tag">&lt;/loopDataInputRef&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;inputDataItem</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"assignee"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/multiInstanceLoopCharacteristics&gt;</span><span class="pln"><br></span><span class="tag">&lt;/userTask&gt;</span></pre><p>
		  假设<code class="literal">assigneeList</code>变量包含这些值<code class="literal">[kermit, gonzo, foziee]</code>。
		  在上面代码中，三个用户任务会同时创建。每个分支都会拥有一个用名为<code class="literal">assignee</code>的流程变量，
		  这个变量会包含集合中的对应元素，在例子中会用来设置用户任务的分配者。
        </p><p>
		  <code class="literal">loopDataInputRef</code>和<code class="literal">inputDataItem</code>的缺点是1）名字不好记，
		  2）根据BPMN 2.0格式定义，它们不能包含表达式。activiti通过在
		  <code class="literal">multiInstanceCharacteristics</code>中设置
		  <span class="bold"><strong>collection</strong></span>和
		  <span class="bold"><strong>elementVariable</strong></span>属性解决了这个问题：
          </p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"miTasks"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"My Task"</span><span class="pln"> </span><span class="atn">activiti:assignee</span><span class="pun">=</span><span class="atv">"${assignee}"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;multiInstanceLoopCharacteristics</span><span class="pln"> </span><span class="atn">isSequential</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp;</span><span class="bold"><strong><span class="atn">activiti:collection</span><span class="pun">=</span><span class="atv">"${myService.resolveUsersForTask()}"</span><span class="pln"> </span><span class="atn">activiti:elementVariable</span><span class="pun">=</span><span class="atv">"assignee"</span><span class="pln"> </span></strong></span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/multiInstanceLoopCharacteristics&gt;</span><span class="pln"><br></span><span class="tag">&lt;/userTask&gt;</span></pre><p>
        </p><p>
		  多实例节点在所有实例都完成时才会结束。也可以指定一个表达式在每个实例结束时执行。
		  如果表达式返回true，所有其他的实例都会销毁，多实例节点也会结束，流程会继续执行。
		  这个表达式必须定义在<span class="bold"><strong>completionCondition</strong></span>子元素中。
          </p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"miTasks"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"My Task"</span><span class="pln"> </span><span class="atn">activiti:assignee</span><span class="pun">=</span><span class="atv">"${assignee}"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;multiInstanceLoopCharacteristics</span><span class="pln"> </span><span class="atn">isSequential</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp;</span><span class="atn">activiti:collection</span><span class="pun">=</span><span class="atv">"assigneeList"</span><span class="pln"> </span><span class="atn">activiti:elementVariable</span><span class="pun">=</span><span class="atv">"assignee"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;completionCondition&gt;</span><span class="pln">${nrOfCompletedInstances/nrOfInstances &gt;= 0.6 }</span><span class="tag">&lt;/completionCondition&gt;</span></strong></span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/multiInstanceLoopCharacteristics&gt;</span><span class="pln"><br></span><span class="tag">&lt;/userTask&gt;</span></pre><p>
		  在这里例子中，会为<code class="literal">assigneeList</code>集合的每个元素创建一个并行的实例。
		  当60%的任务完成时，其他任务就会删除，流程继续执行。
        </p></div><div class="section" title="边界事件和多实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnMultiInstanceBoundaryEvent"></a>边界事件和多实例</h4></div></div></div><p>
		  因为多实例是一个普通节点，它也可以在边缘使用<a class="link" href="#bpmnBoundaryEvent" title="边界事件">边界事件</a>。
		  对于中断型边界事件，当捕获事件时，<span class="bold"><strong>所有激活的实例</strong></span>都会销毁。
		  参考以下多实例子流程：
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_047.png" align="middle"></div><p>
		  这里，子流程的所有实例都会在定时器触发时销毁，无论有多少实例，
		  也不管内部哪个节点没有完成。
        </p></div></div><div class="section" title="补偿处理器"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnCompensationHandlers"></a>补偿处理器</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCompensationHandlerDescription"></a>描述</h4></div></div></div><a class="link" href="#experimental" title="试验性功能">
			<span class="bold"><strong>[EXPERIMENTAL]</strong></span>
		</a><p>
		 如果一个节点用来补偿另一个节点的业务，它可以声明为一个补偿处理器。
		 补偿处理器不包含普通的流，只在补偿事件触发时执行。
        </p><p>
			补偿处理器不能包含进入和外出顺序流。
        </p><p>
			补偿处理器必须使用直接关联分配给一个补偿边界事件。
        </p></div><div class="section" title="图形标志"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCompensationHandlerGraphicalNotation"></a>图形标志</h4></div></div></div><p>
		  如果节点是补偿处理器，补偿事件图标会显示在中间底部区域。下面的流程图显示了一个服务任务，附加了一个补偿边界事件，
		  并分配了一个补偿处理器。
		  注意"cancel hotel reservation"服务任务中间底部区域显示的补偿处理器图标。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_068.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCompensationHandlerXml"></a>XML内容</h4></div></div></div>
		为了声明作为补偿处理器的节点，我们需要把<code class="code">isForCompensation</code>设置为<code class="code">true</code>：
      	<pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"undoBookHotel"</span><span class="pln"> </span><span class="atn">isForCompensation</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="atn">activiti:class</span><span class="pun">=</span><span class="atv">"..."</span><span class="tag">&gt;</span><span class="pln"><br></span><span class="tag">&lt;/serviceTask&gt;</span></pre></div></div></div><div class="section" title="子流程和调用节点"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="bpmnSubprocessAndCallActivity"></a>子流程和调用节点</h2></div></div></div><div class="section" title="子流程"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnSubProcess"></a>子流程</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnSubProcessDescription"></a>描述</h4></div></div></div><p>
			  <span class="emphasis"><em>子流程（Sub-process）</em></span>是一个包含其他节点，网关，事件等等的节点。
			  它自己就是一个流程，同时是更大流程的一部分。
			  <span class="emphasis"><em>子流程</em></span>是完全定义在父流程里的
			  （这就是为什么叫做<span class="emphasis"><em>内嵌</em></span>子流程）。
		    </p><p>
			  子流程有两种主要场景：
		      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
				    子流程可以使用<span class="bold"><strong>继承式建模</strong></span>。
					很多建模工具的子流程可以<span class="emphasis"><em>折叠</em></span>，
					把子流程的内部细节隐藏，显示一个高级别的端对端的业务流程总览。
		          </p></li><li class="listitem"><p>
				    子流程会创建一个新的<span class="bold"><strong>事件作用域</strong></span>。
					子流程运行过程中抛出的事件，可以被子流程边缘定义的
					<a class="link" href="#bpmnBoundaryEvent" title="边界事件">边界事件</a>捕获，
					这样就可以创建一个仅限于这个子流程的事件作用范围。
		          </p></li></ul></div><p>
		    </p><p>
			  使用子流程要考虑如下限制：
		      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
				    子流程只能包含<span class="bold"><strong>一个空开始事件</strong></span>，
					不能使用其他类型的开始事件。子路程必须<span class="bold"><strong>
					至少有一个结束节点</strong></span>。注意，BPMN 2.0规范允许忽略子流程的
					开始和结束节点，但是当前activiti的实现并不支持。
		          </p></li><li class="listitem"><p>
		            <span class="bold"><strong>顺序流不能跨越子流程的边界。</strong></span>
		          </p></li></ul></div><p>
		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnSubProcessGraphicalNotation"></a>图形标记</h4></div></div></div><p>
		  子流程显示为标准的节点，圆角矩形。
		  这时子流程是<span class="emphasis"><em>折叠的</em></span>，只显示名称和一个加号标记，
		  展示了高级别的流程总览：
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_021.png" align="middle"></div><p>
        </p><p>
		  这时子流程是<span class="emphasis"><em>展开的</em></span>，子流程的步骤都显示在子流程边界内：
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_015.png" align="middle"></div><p>
        </p><p>
		  使用子流程的主要原因，是定义对应事件的作用域。
		  下面流程模型演示了这个功能：<span class="emphasis"><em>调查软件/调查引荐</em></span>任务需要同步执行，
		  两个任务需要在同时完成，在<span class="emphasis"><em>二线支持</em></span>解决之前。
		  这里，定时器的作用域（比如，节点需要及时完成）是由子流程限制的。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_028.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnSubProcessXML"></a>XML内容</h4></div></div></div><p>
		  子流程定义为<span class="emphasis"><em>subprocess</em></span>元素。
		  所有节点，网关，事件，等等。它是子流程的一部分，需要放在这个元素里。
          </p><pre class="prettyprint"><span class="tag">&lt;subProcess</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"subProcess"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"subProcessStart"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; ... other Sub-Process elements ...<br><br>&nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"subProcessEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp;</span><span class="tag">&lt;/subProcess&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p></div></div><div class="section" title="事件子流程"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnEventSubprocess"></a>事件子流程</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnEventSubprocessDescription"></a>描述</h4></div></div></div><p>
			  事件子流程是BPMN 2.0中的新元素。事件子流程是由事件触发的子流程。
			  事件子流程可以添加到流程级别或任意子流程级别。用于触发事件子流程的事件是使用开始事件配置的。
			  为此，事件子流程是不支持空开始事件的。
			  事件子流程可以被消息事件，错误事件，信号事件，定时器事件，或补偿事件触发。
			  开始事件的订阅在包含事件子流程的作用域（流程实例或子流程）创建时就会创建。
			  当作用域销毁也会删除订阅。
		    </p><p>
				事件子流程可以是中断的或非中断的。一个中断的子流程会取消当前作用域内的所有流程。
				非中断事件子流程会创建那一个新的同步分支。中断事件子流程只会被每个激活状态的宿主触发一次，
				非中断事件子流程可以触发多次。子流程是否是终端的，配置使用事件子流程的开始事件配置。
		   	</p><p>
				事件子流程不能有任何进入和外出流程。当事件触发一个事件子流程时，输入顺序流是没有意义的。
				当事件子流程结束时，无论当前作用域已经结束了（中断事件子流程的情况），
				或为非中断子流程生成同步分支会结束。
		   	</p><p>
		   		<span class="bold"><strong>当前的限制：</strong></span>
		   		</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
							activiti只支持中断事件子流程。
		   				</p></li><li class="listitem"><p>
							activiti只支持使用错误开始事件或消息开始事件的事件子流程。
		   				</p></li></ul></div><p>
		   	</p></div><div class="section" title="图像标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnEventSubprocessGraphicalNotation"></a>图像标记</h4></div></div></div><p>
		  事件子流程可以显示为边框为虚线的<a class="link" href="#bpmnSubProcessGraphicalNotation" title="图形标记">内嵌子流程</a>。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_061.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnEventSubprocessXMLRepresentation"></a>XML内容</h4></div></div></div><p>
			事件子流程的XML内容与<a class="link" href="#">内嵌子流程</a>是一样的。
			另外，要把<code class="code">triggeredByEvent</code>属性设置为<code class="code">true</code>：
</p><pre class="prettyprint"><span class="tag">&lt;subProcess</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"eventSubProcess"</span><span class="pln"> </span><span class="atn">triggeredByEvent</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; ...<br></span><span class="tag">&lt;/subProcess&gt;</span></pre><p>
        </p></div><div class="section" title="实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnEventSubprocessExample"></a>实例</h4></div></div></div><p>
			下面是一个使用错误开始事件触发的事件子流程的实例。事件子流程是放在“流程级别”的，
			意思是，作用于流程实例：
  			</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_016.png" align="middle"></div><p>
			事件子流程的XML如下所示：
</p><pre class="prettyprint"><span class="tag">&lt;subProcess</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"eventSubProcess"</span><span class="pln"> </span><span class="atn">triggeredByEvent</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"catchError"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;errorEventDefinition</span><span class="pln"> </span><span class="atn">errorRef</span><span class="pun">=</span><span class="atv">"error"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/startEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow2"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"catchError"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"taskAfterErrorCatch"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"taskAfterErrorCatch"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Provide additional data"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/subProcess&gt;</span></pre><p>
        </p><p>
			如上面所述，事件子流程也可以添加成内嵌子流程。如果添加为内嵌子流程，它其实是边界事件的一种替代方案。
			考虑下面两个流程图。两种情况内嵌子流程会抛出一个错误事件。两种情况错误都会被捕获并使用一个用户任务处理。
        	</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_065.png" align="middle"></div><p>
        	</p><p>相对于：</p><p>
        	</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_067.png" align="middle"></div><p>
			 两种场景都会执行相同的任务。然而，两种建模的方式是不同的：
        	</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
						内嵌子流程是使用与执行作用域宿主相同的流程执行的。意思是内嵌子流程可以访问它作用域内的内部变量。
						当使用边界事件时，执行内嵌子流程的流程会删除，并生成一个流程根据边界事件的顺序流继续执行。
						这意味着内嵌子流程创建的变量不再起作用了。
        			</p></li><li class="listitem"><p>
						当使用事件子流程时，事件是完全由它添加的子流程处理的。
						当使用边界事件时，事件由父流程处理。
        			</p></li></ul></div><p>
			这两个不同点可以帮助我们决定是使用边界事件还是内嵌事件子流程来解决特定的流程建模/实现问题。
        </p></div></div><div class="section" title="事务子流程"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnTransactionSubprocess"></a>事务子流程</h3></div></div></div><a class="link" href="#experimental" title="试验性功能">
			<span class="bold"><strong>[EXPERIMENTAL]</strong></span>
		</a><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnTransactionSubprocessDescription"></a>描述</h4></div></div></div><p>
			  事务子流程是内嵌子流程，可以用来把多个流程放到一个事务里。
			  事务是一个逻辑单元，可以把一些单独的节点放在一起，这样它们就可以一起成功或一起失败。
		    </p><p>
		    	<span class="bold"><strong>事务可能的结果：</strong></span>
		    	事务可以有三种可能的结果：
		    	</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
							事务<span class="emphasis"><em>成功</em></span>，如果没有取消也没有因为问题终结。如果事务子流程是成功的，
							就会使用外出顺序流继续执行。
							如果流程后来抛出了一个补偿事件，成功的事务可能被补偿。
							   	</p><p>
							   		<span class="bols">注意：</span>和普通内嵌子流程一样，事务可能在成功后，
									使用中间补偿事件进行补偿。
							   	</p><p>
		    			</p></li><li class="listitem"><p>
							事务<span class="emphasis"><em>取消</em></span>，如果流程到达取消结束事件。这时，
							所有流程都会终结和删除。触发补偿的一个单独的流程，会通过取消边界事件继续执行。
							在补偿完成之后，事务子流程会使用取消边界事务的外出顺序流向下执行。
		    			</p></li><li class="listitem"><p>
							事务被<span class="emphasis"><em>问题</em></span>结束，如果跑出了一个错误事件，
							而且没有在事务子流程中捕获。（如果错误被事务子流程的边界事件处理了，也会这样应用。）
							这时，不会执行补偿。
		    			</p></li></ul></div><p>
				下面的图形演示了三种不同的结果：
		    	</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn.png" align="middle"></div><p>
		    </p><p>
				<span class="bold"><strong>与ACID事务的关系：</strong></span>一定不要吧bpmn事务子流程与技术（ACID）事务相混淆。
				bpmn事务子流程不是技术事务领域的东西。要理解activiti中的事务管理，请参考
				<a class="link" href="#bpmnConcurrencyAndTransactions" title="事务和并发">并发与事务</a>。
				bpmn事务和技术事务有以下不同点：
		   		</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
							ACID事务一般是短期的，bpmn事务可能持续几小时，几天，甚至几个月才能完成。
							（考虑事务中包含的节点可能有用户任务，一般人员响应的时间比应用时间要长。或者，
							或者，在其他情况下，bpmn事务可能要等待发生一些事务事件，就像要根据某种次序执行。）
							这种操作通常要相比更新数据库的一条数据，或把一条信息保存到事务性队列中，消耗更长的时间来完成。
		   				</p></li><li class="listitem"><p>
							因为不能在整个业务节点的过程中保持一个技术性的事务，所以bpmn事务一般要跨越多个ACID事务。
		   				</p></li><li class="listitem"><p>
							因为bpmn事务会跨越多个ACID事务，所以会丧失ACID的特性。比如，考虑上述例子。
							假设“约定旅店”和“刷信用卡”操作在单独的ACID事务中执行。
							也假设“预定旅店”节点已经成功了。现在我们处于一个中间不稳定状态，因为我们预定了酒店，但是还没有刷信用卡。
							现在，在一个ACID事务中，我们要依次执行不同的操作，也会有一个中间不稳定状态。
							不同的是，这个中间状态对事务的外部是可见的。
							比如，如果通过外部预定服务进行了预定，其他使用相同预定服务的部分就可以看到旅店被预定了。
							这意味着实现业务事务时，我们完全失去了隔离属性
							（注：我们也经常放弃隔离性，来为ACID事务获得更高的并发，但是我们可以完全控制，中间不稳定状态也只持续很短的时间）。
		   				</p></li><li class="listitem"><p>
							bpmn业务事务也不能使用通常的方式回滚。因为它跨越了多个事务，bpmn事务取消时一些ACID事务可能已经提交了。
							这时，它们不能被回滚了。
		   				</p></li></ul></div><p>
		   	</p><p>
				因为bpmn事务实际上运行时间很长，缺乏隔离性和回滚机制都需要被区别对待。
				实际上，这里也没有更好的办法在特定领域处理这些问题：
		   		</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
							使用补偿执行回滚。如果事务范围抛出了取消事件，会影响已经执行成功的节点，
							并使用补偿处理器执行补偿。
		   				</p></li><li class="listitem"><p>
							隔离性的缺乏通常使用特定领域的解决方法来解决。比如，上面的例子中，
							一个旅店房间可能会展示给第二个客户，在我们确认第一个客户付费之前。
							虽然这可能与业务预期不符，预定服务可能选择允许一些过度的预约。
		   				</p></li><li class="listitem"><p>
							另外，因为事务会因为风险而中断，预定服务必须处理这种情况，已经预定了旅店，但是一直没有付款的情况。
							（因为事务被中断了）。这时预定服务需要选择一个策略，在旅店房间预定超过最大允许时间后，
							如果还没有付款，预定就会取消。
		   				</p></li></ul></div><p>
				综上所述：ACID处理的是通常问题（回滚，隔离级别和启发式结果），
				在实现业务事务时，我们需要找到特定领域的解决方案来处理这些问题。
		   	</p><p>
		   		<span class="bold"><strong>目前的限制：</strong></span>
		   		</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
							bpmn规范要求流程引擎能根据底层事务的协议处理事件，比如如果底层协议触发了取消事件，事务就会取消。
							作为内嵌引擎，activiti目前不支持这项功能。（对此造成的后果，可以参考下面的一致性讨论）。
		   				</p></li></ul></div><p>
		   	</p><p>
		   		<span class="bold"><strong>ACID事务顶层的一致性和优化并发：</strong></span>
				bpmn事务保证一致性，要么所有节点都成功，或者一些节点成功，对其他成功的节点进行补偿。
				无论哪种方式，都会有一致性的结果。不过要讨论一些activiti内部的情况，bpmn事务的一致性模型是叠加在流程的一致性模型之上的。
				activiti执行流程是事务性的。并发使用了乐观锁。在activiti中，bpmn错误，取消和补偿事件都建立在同样的acid事务与乐观锁之上。
				比如，取消结束事件只能触发它实际到达的补偿。如果之前服务任务抛出了未声明的异常。或者，
				补偿处理器的效果无法提交，如果底层的acid事务的参与者把事务设置成必须回滚。
				或者当两个并发流程到达了取消结束事件，可能会触发两次补偿，并因为乐观锁异常失败。
				所有这些都说明activiti中实现bpmn事务时，相同的规则也作用域普通的流程和子流程。
				所以为了保证一致性，重要的是使用一种方式考虑实现乐观事务性的执行模型。
		   	</p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnEventSubprocessGraphicalNotation"></a>图形标记</h4></div></div></div><p>
		  事务子流程显示为<a class="link" href="#bpmnSubProcessGraphicalNotation" title="图形标记">内嵌子流程</a>，使用双线边框。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_032.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnEventSubprocessXMLRepresentation"></a>XML内容</h4></div></div></div><p>
			事务子流程使用<code class="code">transaction</code>标签：
</p><pre class="prettyprint"><span class="tag">&lt;transaction</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"myTransaction"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; ...<br></span><span class="tag">&lt;/transaction&gt;</span></pre><p>
        </p></div><div class="section" title="实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnEventSubprocessExample"></a>实例</h4></div></div></div><p>
			下面是事务子流程的实例：
        	</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_007.png" align="middle"></div><p>
        </p></div></div><div class="section" title="调用活动（子流程）"><div class="titlepage"><div><div><h3 class="title"><a name="bpmnCallActivity"></a>调用活动（子流程）</h3></div></div></div><div class="section" title="描述"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCallActivityDescription"></a>描述</h4></div></div></div><p>
			  bpmn 2.0区分了普通<span class="emphasis"><em><a class="link" href="#bpmnSubProcess" title="子流程">子流程</a></em></span>，
			  也叫做<span class="emphasis"><em>内嵌子流程</em></span>，和调用节点，看起来很相似。
			  上概念上讲，当流程抵达及诶单时，两者都会调用子流程。
		    </p><p>
			  不同点是调用节点引用流程定义外部的一个流程，<span class="emphasis"><em><a class="link" href="#bpmnSubProcess" title="子流程">子流程</a></em></span>
			  会内嵌到原始的流程定义中。使用调用节点的主要场景是需要重用流程定义，
			  这个流程定义需要被很多其他流程定义调用的时候。
		    </p><p>
			  当流程执行到<span class="emphasis"><em>调用节点</em></span>，会创建一个新分支，它是到达调用节点的流程的分支。
			  这个分支会用来执行子流程，默认创建并行子流程，就像一个普通的流程。
			  上级流程会等待子流程完成，然后才会继续向下执行。
		    </p></div><div class="section" title="图形标记"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCallActivityGraphicalNotation"></a>图形标记</h4></div></div></div><p>
		  调用节点显示与<a class="link" href="#bpmnSubProcessGraphicalNotation" title="图形标记">子流程</a>相同，
		  不过是粗边框（无论是折叠和展开的）。
		  根据不同的建模工具，调用节点也可以展开，但是显示为折叠的子流程。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_018.png" align="middle"></div><p>
        </p></div><div class="section" title="XML内容"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCallActivityXMLRepresentation"></a>XML内容</h4></div></div></div><p>
          A call activity is a regular activity, that requires a <span class="emphasis"><em>calledElement</em></span>
          that references a process definition by its <span class="bold"><strong>key</strong></span>.
          In practice, this means that the <span class="bold"><strong>id of the process</strong></span> is
          used in the <span class="emphasis"><em>calledElement</em></span>.
</p><pre class="prettyprint"><span class="tag">&lt;callActivity</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"callCheckCreditProcess"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Check credit"</span><span class="pln"> </span><span class="atn">calledElement</span><span class="pun">=</span><span class="atv">"checkCreditProcess"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
        </p><p>
		  注意，子流程的流程定义是<span class="bold"><strong>在执行阶段解析的</strong></span>。
		  就是说子流程可以与调用的流程分开部署，如果需要的话。
        </p></div><div class="section" title="传递变量"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCallActivityPassVariables"></a>传递变量</h4></div></div></div><p>
		  可以把流程变量传递给子流程，反之亦然。数据会复制给子流程，当它启动的时候，
		  并在它结束的时候复制回主流程。
</p><pre class="prettyprint"><span class="tag">&lt;callActivity</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"callSubProcess"</span><span class="pln"> </span><span class="atn">calledElement</span><span class="pun">=</span><span class="atv">"checkCreditProcess"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:in</span><span class="pln"> </span><span class="atn">source</span><span class="pun">=</span><span class="atv">"someVariableInMainProcess"</span><span class="pln"> </span><span class="atn">target</span><span class="pun">=</span><span class="atv">"nameOfVariableInSubProcess"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:out</span><span class="pln"> </span><span class="atn">source</span><span class="pun">=</span><span class="atv">"someVariableInSubProcss"</span><span class="pln"> </span><span class="atn">target</span><span class="pun">=</span><span class="atv">"nameOfVariableInMainProcess"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/callActivity&gt;</span></pre><p>
		  我们使用activiti扩展来简化BPMN标准元素调用<span class="emphasis"><em>dataInputAssociation</em></span>和
		  <span class="emphasis"><em>dataOutputAssociation</em></span>，这只在你使用BPMN 2.0标准方式声明流程变量才管用。
        </p><p>
		  这里也可以使用表达式：
</p><pre class="prettyprint"><span class="tag">&lt;callActivity</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"callSubProcess"</span><span class="pln"> </span><span class="atn">calledElement</span><span class="pun">=</span><span class="atv">"checkCreditProcess"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:in</span><span class="pln"> </span><span class="atn">sourceExpression</span><span class="pun">=</span><span class="atv">"${x+5}"" target="</span><span class="atn">y</span><span class="atv">" /&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:out</span><span class="pln"> </span><span class="atn">source</span><span class="pun">=</span><span class="atv">"${y+5}"</span><span class="pln"> </span><span class="atn">target</span><span class="pun">=</span><span class="atv">"z"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/callActivity&gt;</span></pre><p>
		  最后z = y + 5 = x + 5 + 5
        </p></div><div class="section" title="实例"><div class="titlepage"><div><div><h4 class="title"><a name="bpmnCallActivityExample"></a>实例</h4></div></div></div><p>
		 下面的流程图演示了简单订单处理。先判断客户端信用，这可能与很多其他流程相同。
		  <span class="emphasis"><em>检查信用阶段</em></span>这里设计成调用节点。
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_050.png" align="middle"></div><p>
		  流程看起来像下面这样：
</p><pre class="prettyprint"><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow1"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"receiveOrder"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;manualTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"receiveOrder"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Receive Order"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow2"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"receiveOrder"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"callCheckCreditProcess"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br></span><span class="bold"><strong><span class="tag">&lt;callActivity</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"callCheckCreditProcess"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Check credit"</span><span class="pln"> </span><span class="atn">calledElement</span><span class="pun">=</span><span class="atv">"checkCreditProcess"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br></span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow3"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"callCheckCreditProcess"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"prepareAndShipTask"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"prepareAndShipTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Prepare and Ship"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow4"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"prepareAndShipTask"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"end"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"end"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
		  子流程看起来像下面这样：
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_048.png" align="middle"></div><p>
		  子流程的流程定义没有什么特别的。
		  它也可以单独使用，不用其他流程调用。
        </p></div></div></div><div class="section" title="事务和并发"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="bpmnConcurrencyAndTransactions"></a>事务和并发</h2></div></div></div><div class="section" title="异步操作"><div class="titlepage"><div><div><h3 class="title"><a name="asyncContinuations"></a>异步操作</h3></div></div></div><p>
		activiti通过事务方式执行流程，可以根据你的需求定制。现在开始看一下activiti通常是如何处理事务的。
		如果触发了activiti的操作（比如，开始流程，完成任务，触发流程继续执行），
		activiti会推进流程，直到每个分支都进入等待状态。更抽象的说，它会流程图执行深度优先搜索，
		如果每个分支都遇到等待状态，就会返回。等待状态是"稍后"需要执行任务，
		就是说activiti会把当前状态保存到数据库中，然后等待下一次触发。
		触发可能来自外部，比如用户任务或接收到一个消息，也可能来自activiti本身，比如我们设置了定时器事件。
		下面图片展示了这种操作：

        </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/activiti_002.PNG" align="middle"></div><p>

		我们可以看到包含用户任务，服务任务和定时器事件的流程。完成用户任务，和校验地址是在同一个工作单元中，
		所以它们的成功和失败是原子性的。意味着如果服务任务抛出异常，我们要回滚当前事务，
		这样流程会退回到用户任务，用户任务就依然在数据库里。
		这就是activiti默认的行为。在（1）中应用或客户端线程完成任务。这会执行服务，流程推进，直到遇到一个等待状态，
		这里就是定时器（2）。然后它会返回给调用者（3），并提交事务（如果事务是由activiti开启的）。
    </p><p>
		有的时候，这不是我们想要的。有时我们需要自己控制流程中事务的边界，这样就能把业务逻辑包裹在一起。
		这就需要使用异步执行了。参考下面的流程（判断）：

        </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/activiti.PNG" align="middle"></div><p>

		这次我们完成了用户任务，生成一个发票，把发票发送给客户。
		这次生成发票不在同一个工作单元内了，所以我们不想对用户任务进行回滚，如果生成发票出错了。
		所以，我们想让activiti实现的是完成用户任务（1），提交事务，返回给调用者应用。然后在后台的线程中，异步执行生成发票。
		后台线程就是activiti的job执行器（其实是一个线程池）周期对数据库的job进行扫描。
		所以后面的场景，当我们到达"generate invoice"任务，我们为activiti创建一个稍后执行的job"消息"，
		并把它保存到数据库。
		job会被job执行器获取并执行。我们也会给本地job执行器一个提醒，告诉它有一个新job，来增加性能。
	</p><p>
		要想使用这个特性，我们要使用<span class="emphasis"><em>activiti:async="true"</em></span>扩展。例子中，服务任务看起来就是这样：
        </p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"service1"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Generate Invoice"</span><span class="pln"> </span><span class="atn">activiti:class</span><span class="pun">=</span><span class="atv">"my.custom.Delegate"</span><span class="pln"> </span><span class="atn">activiti:async</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        activiti:async可以使用到如下bpmn任务类型中：
        task, serviceTask, scriptTask, businessRuleTask, sendTask, receiveTask, userTask, subProcess, callActivity
    </p><p>
		对于userTask，receiveTask和其他等待装填，异步执行的作用是让开始流程监听器运行在一个单独的线程/事务中。
    </p></div><div class="section" title="排他任务"><div class="titlepage"><div><div><h3 class="title"><a name="exclusiveJobs"></a>排他任务</h3></div></div></div>

		从activiti 5.9开始，JobExecutor能保证同一个流程实例中的job不会并发执行。为啥呢？

        <div class="section" title="为什么要使用排他任务？"><div class="titlepage"><div><div><h4 class="title"><a name="N1247D"></a>为什么要使用排他任务？</h4></div></div></div><p>参考如下流程定义：</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/bpmn_036.png" align="middle"></div><p>我们有一个并行网关，后面有三个服务任务，它们都设置为异步执行。这样会添加三个job到数据库里。
			一旦job进入数据库，它就可以被jobExecutor执行了。JobExecutor会获取job，把它们代理到工作线程的线程池中，会在那里真正执行job。
			就是说，使用异步执行，你可以吧任务分配给这个线程池（在集群环境，可能会使用多个线程池）。这通常是个好事情。
			然而它也会产生问题：一致性。考虑一下服务任务后的汇聚。
			当服务任务完成后，我们到达并发汇聚节点，需要决定是等待其他分支，还是继续向下执行。
			就是说，对每个到达并行汇聚的分支，我们都需要判断是继续还是等待其他分支的一个或多个分支。</p><p>
			为什么这就是问题了呢？因为服务任务配置成使用异步执行，可能相关的job都在同一时间被获取，被JobExecutor分配给不同的工作线程执行。
			结果是三个单独的服务执行使用的事务在到达并发汇聚时可能重叠。如果出现了这个问题，这些事务是互相不可见的，
			其他事务同时到达了相同的并发汇聚，假设它们都在等待其他分支。然而，每个事务都假设它们在等待其他分支，
			所以没有分支会越过并发汇聚继续执行，流程实例会一直在等待状态，无法继续执行。
	         </p><p>
			 activiti是如何解决这个问题的？activiti使用了乐观锁。当我们基于判断的数据看起来不是最新的时
			 （因为其他事务可能在我们提交之前进行了修改，我们会在每个事务里增加数据库同一行的版本）。这时，第一个提交的事务会成功，
			 其他会因为乐观锁异常导致失败。这就解决了我们上面讨论的流程的问题：如果多个分支同步到达并行汇聚，
			 它们会假设它们都在登录，并增加它们父流程的版本号（流程实例）然后尝试提交。
			 第一个分支会成功提交，其他分支会因为乐观锁导致失败。因为流程是被job触发的，
			 activiti会尝试在等待一段时间后尝试执行同一个job，想这段时间可以同步网关的状态。
	         </p><p>
			 这是一个很好的解决方案吗？像我们看到的一样，乐观锁允许activiti避免非一致性。它确定我们不会“堵在汇聚网关”，
			 意思是：或者所有分支都通过网关，或者数据库中的job正在尝试通过。然而，虽然这是一个对于持久性和一致性的完美解决方案，
			 但对于上层来说不一定是期望的行为：

	          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
					  activiti只会对同一个job重试估计次数（默认配置为3）。之后，job还会在数据库里，但是不会再重试了。
					  意味着这个操作必须手工执行job的触发。
			        </p></li><li class="listitem"><p>
					  如果job有非事务方面的效果，它不会因为失败的事务回滚。比如，如果“预定演唱会门票”服务没有与activiti共享事务，
					  重试job可能导致我们预定了过多门票。
			        </p></li></ul></div><p>

	         </p>
			 在activiti中，我们推荐了新的概念，并已经在jbpm4中实现了，叫做“排他job”。

         </div><div class="section" title="什么是排他job？"><div class="titlepage"><div><div><h4 class="title"><a name="N12498"></a>什么是排他job？</h4></div></div></div><p>
				对于一个流程实例，排他任务不能同时执行两个。考虑上面的流程：
				如果我们把服务任务申请为排他任务，JobExecutor会保证对应的job不会并发执行。
				相反，它会保证无论什么时候获取一个流程实例的排他任务，都会把同一个流程实例的其他任务都取出来，放在同一个工作线程中执行。
				它保证job是顺序执行的。
        	</p><p>
				如何启用这个特性？从activiti 5.9开始，排他任务已经是默认配置了。所以异步执行和定时器事件默认都是排他任务。
				另外，如果你想把job设置为非塔牌，可以使用<code class="code">activiti:exclusive="false"</code>进行配置。
				比如，下面的服务任务就是异步但是非排他的。

        		</p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"service"</span><span class="pln"> </span><span class="atn">activiti:expression</span><span class="pun">=</span><span class="atv">"${myService.performBooking(hotel, dates)}"</span><span class="pln"> </span><span class="atn">activiti:async</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="atn">activiti:exclusive</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        	</p><p>
				这是一个好方案吗？
				有一些人文我们这是否是一个好方案。他们的结论会帮你在并发和性能问题方面节省时间。
				这个问题上需要考虑两件事情：
        		  </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
					  如果是你专家并且知道自己在做什么时（理解“为什么排他任务”这章的内容），也可以关闭这个功能，
					  否则，对于大多数使用异步执行和定时器的用户来说，这个功能是没问题的。
			        </p></li><li class="listitem"><p>
					  它也没有性能问题，在高负载的情况下性能是个问题。高负载意味着JobExecutor的所有工作线程都一直在忙碌着。
					  使用排他任务，activiti可以简单的分布不同的负载。排他任务意味着同一个流程实例的异步执行会由相同的线程顺序执行。
					  但是要考虑：如果你有多个流程实例时。
					  所有其他流程实例的job也会分配给其他线程同步执行。
					  意味着虽然activiti不会同时执行一个流程实例的排他job，但是还会同步执行多个流程实例的一步执行。
				通过一个总体的预测，在大多数场景下，它都会让单独的实例运行的更迅速。
				而且，对于同一流程实例中的job，需要用到的数据也会利用执行的集群节点的缓存。
				如果任务没有在同一个节点执行，数据就必须每次从数据库重新读取了。
			        </p></li></ul></div><p>

        	</p></div></div></div><div class="section" title="流程实例授权"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="security"></a>流程实例授权</h2></div></div></div>
	  默认所有人在部署的流程定义上启动一个新流程实例。通过流程初始化授权功能定义的用户和组，web客户端可以限制哪些用户可以启动一个新流程实例。
	  <span class="bold"><strong>注意</strong></span>：activiti引擎<span class="bold"><strong>不会</strong></span>校验授权定义。
	  这个功能只是为减轻web客户端开发者实现校验规则的难度。
	  设置方法与用户任务用户分配类似。
	  用户或组可以使用&lt;activiti:potentialStarter&gt;标签分配为流程的默认启动者。下面是一个例子：
 <pre class="prettyprint"><span class="pln">&nbsp; &nbsp;</span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"potentialStarter"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp;</span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp;</span><span class="tag">&lt;activiti:potentialStarter&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="tag">&lt;resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="tag">&lt;formalExpression&gt;</span><span class="pln">group2, group(group3), user(user3)</span><span class="tag">&lt;/formalExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="tag">&lt;/resourceAssignmentExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp;</span><span class="tag">&lt;/activiti:potentialStarter&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp;</span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp;...<br>&nbsp;</span></pre>
上面的XML中，user(user3)是直接引用了用户user3，group(group3)是引用了组group3。如果没显示设置，默认认为是群组。
也可以使用&lt;process&gt;标签的属性，&lt;activiti:candidateStarterUsers&gt;和&lt;activiti:candidateStarterGroups&gt;。
下面是一个例子：

  <pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"potentialStarter"</span><span class="pln"> </span><span class="atn">activiti:candidateStarterUsers</span><span class="pun">=</span><span class="atv">"user1, user2"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">activiti:candidateStarterGroups</span><span class="pun">=</span><span class="atv">"group1"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; ...<br>&nbsp; </span></pre><p>
可以同时使用这两个属性。
</p><p>
定义流程初始化授权后，开发者可以使用如下方法获得授权定义。
这些代码可以获得给定的用户可以启动哪些流程定义：
   </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; processDefinitions </span><span class="pun">=</span><span class="pln"> repositoryService</span><span class="pun">.</span><span class="pln">createProcessDefinitionQuery</span><span class="pun">().</span><span class="pln">startableByUser</span><span class="pun">(</span><span class="str">"userxxx"</span><span class="pun">).</span><span class="pln">list</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp;</span></pre><p>
</p><p>
也可以获得指定流程定义设置的潜在启动者对应的IdentityLink。
   </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; identityLinks </span><span class="pun">=</span><span class="pln"> repositoryService</span><span class="pun">.</span><span class="pln">getIdentityLinksForProcessDefinition</span><span class="pun">(</span><span class="str">"processDefinitionId"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp;</span></pre><p>
</p><p>
下面例子演示了如何获得可以启动给定流程的用户列表：
   </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">User</span><span class="pun">&gt;</span><span class="pln"> authorizedUsers </span><span class="pun">=</span><span class="pln"> &nbsp;identityService</span><span class="pun">().</span><span class="pln">createUserQuery</span><span class="pun">().</span><span class="pln">potentialStarter</span><span class="pun">(</span><span class="str">"processDefinitionId"</span><span class="pun">).</span><span class="pln">list</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp;</span></pre><p>
</p><p>
相同的方式，获得可以启动给定流程配置的群组：
   </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Group</span><span class="pun">&gt;</span><span class="pln"> authorizedGroups </span><span class="pun">=</span><span class="pln"> &nbsp;identityService</span><span class="pun">().</span><span class="pln">createGroupQuery</span><span class="pun">().</span><span class="pln">potentialStarter</span><span class="pun">(</span><span class="str">"processDefinitionId"</span><span class="pun">).</span><span class="pln">list</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp;</span></pre><p>
</p></div><div class="section" title="数据对象"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="dataobjects"></a>数据对象</h2></div></div></div><a class="link" href="#experimental" title="试验性功能">
      <span class="bold"><strong>[试验功能]</strong></span>
    </a><p>
      BPMN提供了一种功能，可以在流程定义或子流程中定义数据对象。根据BPMN规范，流程定义可以包含复杂XML结构，
	  可以导入XSD定义。对于Activiti来说，作为Activiti首次支持的数据对象，可以支持如下的XSD类型：
    </p><div class="itemizedlist"><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;dataObject</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"dObj1"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"StringTest"</span><span class="pln"> </span><span class="atn">itemSubjectRef</span><span class="pun">=</span><span class="atv">"xsd:string"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;dataObject</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"dObj2"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"BooleanTest"</span><span class="pln"> </span><span class="atn">itemSubjectRef</span><span class="pun">=</span><span class="atv">"xsd:boolean"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;dataObject</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"dObj3"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"DateTest"</span><span class="pln"> </span><span class="atn">itemSubjectRef</span><span class="pun">=</span><span class="atv">"xsd:datetime"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;dataObject</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"dObj4"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"DoubleTest"</span><span class="pln"> </span><span class="atn">itemSubjectRef</span><span class="pun">=</span><span class="atv">"xsd:double"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;dataObject</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"dObj5"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"IntegerTest"</span><span class="pln"> </span><span class="atn">itemSubjectRef</span><span class="pun">=</span><span class="atv">"xsd:int"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;dataObject</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"dObj6"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"LongTest"</span><span class="pln"> </span><span class="atn">itemSubjectRef</span><span class="pun">=</span><span class="atv">"xsd:long"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><ul class="itemizedlist" type="disc"></ul></div><p>
	  数据对象定义会自动转换为流程变量，名称与'name'属性对应。
	  除了数据对象的定义之外，activiti也支持使用扩展元素来为这个变量赋予默认值。下面的BPMN片段就是对应的例子：
    </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"dataObjectScope"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Data Object Scope"</span><span class="pln"> </span><span class="atn">isExecutable</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;dataObject</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"dObj123"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"StringTest123"</span><span class="pln"> </span><span class="atn">itemSubjectRef</span><span class="pun">=</span><span class="atv">"xsd:string"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:value&gt;</span><span class="pln">Testing123</span><span class="tag">&lt;/activiti:value&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/dataObject&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre></div></div>

1

<div class="chapter" title="Chapter&nbsp;9.&nbsp;表单"><div class="titlepage"><div><div><h2 class="title"><a name="forms"></a>Chapter&nbsp;9.&nbsp;表单</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#formProperties">表单属性</a></span></dt><dt><span class="section"><a href="#externalFormRendering">外置表单的渲染</a></span></dt></dl></div><p>Activiti提供了一种方便而且灵活的方式在业务流程中以手工方式添加表单。我们对表单的支持有2种方式：
	通过表单属性对内置表单进行渲染和外置表单进行渲染。
	</p><div class="section" title="表单属性"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="formProperties"></a>表单属性</h2></div></div></div><p>
	业务流程相关联的所有信息要么是包含自身的流程变量，要么是通过流程变量的引用。Activiti支持存储复杂的Java对象作为流程变量，如 <code class="literal">序列化</code>对象，
	Jpa实体对象或者整个XML文档作为<code class="literal">字符串</code>。
    </p><p>
	用户是在启动一个流程和完成用户任务时，与流程进行交互的。表单需要某个UI技术渲染之后才能够与用户进行交互。为了能够使用不同UI技术变得容易，流程定义包含一个对流程变量中复杂的Java类型对象到一个<span class="bold"><strong>'properties'</strong></span>的<code class="literal">Map&lt;String,String&gt;</code>类型的转换逻辑。
    </p><p>
	使用Activiti API的方法查看公开的属性信息。然后，任意UI技术都能够在这些属性上面构建一个表单。该属性专门（并且更多局限性）为流程变量提供了一个视图。
	表单所需要显示的属性可以从下面例子中的返回值<span class="bold"><strong>FormData</strong></span>中获取。
    </p><pre class="prettyprint"><span class="typ">StartFormData</span><span class="pln"> </span><span class="typ">FormService</span><span class="pun">.</span><span class="pln">getStartFormData</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> processDefinitionId</span><span class="pun">)</span></pre><p>
    or </p><pre class="prettyprint"><span class="typ">TaskFormdata</span><span class="pln"> </span><span class="typ">FormService</span><span class="pun">.</span><span class="pln">getTaskFormData</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> taskId</span><span class="pun">)</span></pre><p>.
    </p><p>
	在默认情况下，内置的表单引擎，'sees'这些变量就像对待流程变量一样。如果任务表单属性和流程变量是一对一的关系，那么任务表单属性就不需要进行申明了，例如，下面的申明：
    </p><pre class="prettyprint"><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"start"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
	当执行到开始事件时，所有的流程变量都是可用的，但
    </p><pre class="prettyprint"><span class="pln">formService</span><span class="pun">.</span><span class="pln">getStartFormData</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> processDefinitionId</span><span class="pun">).</span><span class="pln">getFormProperties</span><span class="pun">()</span></pre><p>
	会是一个空值，因为没有定义具体的映射。
    </p><p>
	在上面的实例中，所有被提交的属性都将会作为流程变量被存储在Activiti使用的数据库中。这意味着在一个表单中新添加一个简单的input输入字段，也会作为一个新的变量被存储。
    </p><p>
	属性来自于流程变量，但不一定非要作为流程变量存储起来，例如，一个流程变量可能是JPA实体如类Address。在某种UI技术中使用的表单属性<code class="literal">StreetName</code>可能会关联到一个表达式 <code class="literal">#{address.street}</code>。
    </p><p>类似的，用户提交的表单属性应该作为流程变量进行存储或者使用UEL值表达式将其作为流程变量的一个嵌套属性进行存储，例如<code class="literal">#{address.street}</code>。
    </p><p>同样的，提交的表单属性默认的行为是作为流程变量进行存储，除非一个 <code class="literal">formProperty</code> 申明了其他的规则。
	</p><p>
	类型转换同样也可以应用于表单数据和流程变量之间处理的一部分。
	</p><p>例如:</p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"task"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"room"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"duration"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"long"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"speaker"</span><span class="pln"> </span><span class="atn">variable</span><span class="pun">=</span><span class="atv">"SpeakerName"</span><span class="pln"> </span><span class="atn">writable</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"street"</span><span class="pln"> </span><span class="atn">expression</span><span class="pun">=</span><span class="atv">"#{address.street}"</span><span class="pln"> </span><span class="atn">required</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/userTask&gt;</span></pre><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
		  表单属性 <code class="literal">room</code> 将会被映射为String类型流程变量 <code class="literal">room</code>。
		  </p></li><li class="listitem"><p>
		  表单属性 <code class="literal">duration</code> 将会被映射为java.lang.Long类型流程变量 <code class="literal">duration</code>。
		  </p></li><li class="listitem"><p>
		  表单属性<code class="literal">speaker</code>将会被映射为流程变量 <code class="literal">SpeakerName</code>。它只能够在TaskFormData对象中使用。如果
		  属性speaker提交，将会抛出一个ActivitiException的异常。类似的，将其属性设置为<code class="literal">readable="false"</code>,该属性就会在FormData进行排除，但是在提交后仍然会对其进行处理。
		  </p></li><li class="listitem"><p>
		  表单属性<code class="literal">street</code>将会映射为Java Bean <code class="literal">address</code>的属性<code class="literal">street</code> 作为String类型的流程变量。
	      当提交的表单属性并没有提供并且 required="true" 时，那么就会抛出一个异常。
		  </p></li></ul></div><p>
	表单数据也可以作为FormData的一部分提供类型元数据。该FormData可以从<code class="literal">StartFormData FormService.getStartFormData(String processDefinitionId)</code>和<code class="literal">TaskFormdata FormService.getTaskFormData(String taskId)</code>方法的返回值中获取。
	</p><p>我们支持以下的几种表单属性类型：</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">string</code> (org.activiti.engine.impl.form.StringFormType)</p></li><li class="listitem"><p><code class="literal">long</code> (org.activiti.engine.impl.form.LongFormType)</p></li><li class="listitem"><p><code class="literal">enum</code> (org.activiti.engine.impl.form.EnumFormType)</p></li><li class="listitem"><p><code class="literal">date</code> (org.activiti.engine.impl.form.DateFormType)</p></li><li class="listitem"><p><code class="literal">boolean</code> (org.activiti.engine.impl.form.BooleanFormType)</p></li></ul></div><p>
	对于申明每一个表单属性，以下的<code class="literal">FormProperty</code>信息可以通过<code class="literal">List&lt;FormProperty&gt; formService.getStartFormData(String processDefinitionId).getFormProperties()</code>
    和 <code class="literal">List&lt;FormProperty&gt; formService.getTaskFormData(String taskId).getFormProperties()</code>获取。
    </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">interface</span><span class="pln"> </span><span class="typ">FormProperty</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="com">/**<br><br>&nbsp; the key used to submit the property in {@link FormService#submitStartFormData(String, java.util.Map)}<br>&nbsp; &nbsp;* or {@link FormService#submitTaskFormData(String, java.util.Map)} */</span><span class="pln"><br>&nbsp; </span><span class="typ">String</span><span class="pln"> getId</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="com">/** the display label */</span><span class="pln"><br>&nbsp; </span><span class="typ">String</span><span class="pln"> getName</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="com">/** one of the types defined in this interface like e.g. {@link #TYPE_STRING} */</span><span class="pln"><br>&nbsp; </span><span class="typ">FormType</span><span class="pln"> getType</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="com">/** optional value that should be used to display in this property */</span><span class="pln"><br>&nbsp; </span><span class="typ">String</span><span class="pln"> getValue</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="com">/** is this property read to be displayed in the form and made accessible with the methods<br>&nbsp; &nbsp;* {@link FormService#getStartFormData(String)} and {@link FormService#getTaskFormData(String)}. */</span><span class="pln"><br>&nbsp; </span><span class="kwd">boolean</span><span class="pln"> isReadable</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="com">/** is this property expected when a user submits the form? */</span><span class="pln"><br>&nbsp; </span><span class="kwd">boolean</span><span class="pln"> isWritable</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="com">/** is this property a required input field */</span><span class="pln"><br>&nbsp; </span><span class="kwd">boolean</span><span class="pln"> isRequired</span><span class="pun">();</span><span class="pln"><br></span><span class="pun">}</span></pre><p>例子:</p><pre class="prettyprint"><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"start"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"speaker"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Speaker"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="atn">variable</span><span class="pun">=</span><span class="atv">"SpeakerName"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"string"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"start"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"date"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="atn">datePattern</span><span class="pun">=</span><span class="atv">"dd-MMM-yyyy"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"direction"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"enum"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:value</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"left"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Go Left"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:value</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"right"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Go Right"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:value</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"up"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Go Up"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:value</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"down"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Go Down"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/activiti:formProperty&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/startEvent&gt;</span></pre><p>
	所有的表单属性的信息都是可以通过API进行访问的。可以通过 <code class="literal">formProperty.getType().getName()</code>获取类型的名称。
	甚至可以通过 <code class="literal">formProperty.getType().getInformation("datePattern")</code>获取日期的匹配方式。通过 <code class="literal">formProperty.getType().getInformation("values")</code>可以获取到枚举值。
	</p><p>
	  Activiti控制台支持表单属性并且可以根据表单定义对表单进行渲染。例如下面的XML片段
      </p><pre class="prettyprint"><span class="tag">&lt;startEvent</span><span class="pln"> ... </span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"numberOfDays"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Number of days"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"${numberOfDays}"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"long"</span><span class="pln"> </span><span class="atn">required</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"startDate"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"First day of holiday (dd-MM-yyy)"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"${startDate}"</span><span class="pln"> </span><span class="atn">datePattern</span><span class="pun">=</span><span class="atv">"dd-MM-yyyy hh:mm"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"date"</span><span class="pln"> </span><span class="atn">required</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"vacationMotivation"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Motivation"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"${vacationMotivation}"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"string"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/userTask&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><p>
	  当使用 Activiti控制台时，它将会被渲染成流程的启动表单。
     </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/forms.png" align="middle"></div><p>
    </p></div><div class="section" title="外置表单的渲染"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="externalFormRendering"></a>外置表单的渲染</h2></div></div></div><p>
	该API同样也允许你执行Activiti流程引擎之外的方式渲染你自己的任务表单。这些步骤说明你可以用你自己的方式对任务表单进行渲染。
	</p><p>
	本质上，所有需要渲染的表单属性都是通过2个服务方法中的一个进行装配的：
    <code class="literal">StartFormData FormService.getStartFormData(String processDefinitionId)</code>
    和 <code class="literal">TaskFormdata FormService.getTaskFormData(String taskId)</code>.
    </p><p>
	表单属性可以通过 <code class="literal">ProcessInstance FormService.submitStartFormData(String processDefinitionId, Map&lt;String,String&gt; properties)</code>
    and <code class="literal">void FormService.submitStartFormData(String taskId, Map&lt;String,String&gt; properties)</code>2种方式进行提交。
	</p><p>
	想要了解更多表单属性如何映射为流程变量，可以查看 <a class="xref" href="#formProperties" title="表单属性">the section called “表单属性”</a>
	 </p><p>
	你可以将任何表单模版资源放进你要部署的业务文档之中（如果你想要将它们按照流程的版本进行存储）。它将会在部署中作为一种可用的资源。你可以使用<code class="literal">String ProcessDefinition.getDeploymentId()</code> 和 <code class="literal">InputStream RepositoryService.getResourceAsStream(String deploymentId, String resourceName);</code>
	获取部署上去的表单模版。这样就可以获取你的表单模版定义文件 ，那么你就可以在你自己的应用中渲染/显示你的表单。
    </p><p>
	你也可以使用该功能获取任务表单之外的其他的部署资源用于其他的目的。</p><p>
	属性<code class="literal">&lt;userTask activiti:formKey="..."</code>通过API   <code class="literal">String FormService.getStartFormData(String processDefinitionId).getFormKey()</code>
    和 <code class="literal">String FormService.getTaskFormData(String taskId).getFormKey()</code>暴露出来的。
	你可以使用这个存储你部署的模版中的全名（例如<code class="literal">org/activiti/example/form/my-custom-form.xml</code>）,但是这并不是必须的。
	例如，你可以在表单属性中存储一个通用的key，然后运用一种算法或者换转去得到你实际使用的模版。当你想要通过不同UI技术渲染不能的表单，这可能更加方便，例如，使用正常屏幕大小的web应用程序的表单，
	移动手机小屏幕的表单和甚至可能是IM表单和email表单模版。
    </p></div></div><div class="chapter" title="Chapter&nbsp;10.&nbsp;JPA"><div class="titlepage"><div><div><h2 class="title"><a name="N125E9"></a>Chapter&nbsp;10.&nbsp;JPA</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#N125FC">要求</a></span></dt><dt><span class="section"><a href="#jpaconfiguration">配置</a></span></dt><dt><span class="section"><a href="#N1268C">用法</a></span></dt><dd><dl><dt><span class="section"><a href="#N1268F">简单例子</a></span></dt><dt><span class="section"><a href="#N126D6">查询JPA流程变量</a></span></dt><dt><span class="section"><a href="#N12703">使用Spring beans和JPA结合的高级例子</a></span></dt></dl></dd></dl></div><p>
	你可以使用JPA实体作为流程变量，并且可以这样做：
    </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>基于流程变量更新已有的JPA实体，它可以在用户任务的表单中填写或者由服务任务生成。</p></li><li class="listitem"><p>重用已有的领域模型不需要编写显示的服务获取实体或者更新实体的值。</p></li><li class="listitem"><p>根据已有实体的属性做出判断（网关即分支聚合）。</p></li><li class="listitem"><p>...</p></li></ul></div><p>
  </p><div class="section" title="要求"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N125FC"></a>要求</h2></div></div></div><p>
	  只支持符合以下要求的实体：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>实体应该使用JPA注解进行配置，我们支持字段和属性访问两种方式。@MappedSuperclass也能够被使用。</p></li><li class="listitem"><p>
			实体中应该有一个使用<code class="literal">@Id</code>注解的主键，不支持复合主键
			(<code class="literal">@EmbeddedId</code> 和 <code class="literal">@IdClass</code>)。Id 字段/属性能够使用JPA规范支持的任意类型：
            原生态数据类型和他们的包装类型（boolean除外），<code class="literal">String</code>, <code class="literal">BigInteger</code>, <code class="literal">BigDecimal</code>,
            <code class="literal">java.util.Date</code> 和 <code class="literal">java.sql.Date</code>.
          </p></li></ul></div><p>
    </p></div><div class="section" title="配置"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="jpaconfiguration"></a>配置</h2></div></div></div><p>为了能够使用JPA的实体，引擎必须有一个对<code class="literal">EntityManagerFactory</code>的引用。
	这可以通过配置引用或者提供一个持久化单元名称。作为变量的JPA实体将会被自动检测并进行相应的处理</p><p>
		下面例子中的配置是使用jpaPersistenceUnitName：
        </p><pre class="prettyprint"><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.impl.cfg.StandaloneInMemProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">&lt;!-- 数据库的配置 --&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"databaseSchemaUpdate"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jdbcUrl"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"jdbc:h2:mem:JpaVariableTest;DB_CLOSE_DELAY=1000"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="bold"><strong><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jpaPersistenceUnitName"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"activiti-jpa-pu"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jpaHandleTransaction"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jpaCloseEntityManager"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">&lt;!-- job executor configurations --&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jobExecutorActivate"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">&lt;!-- mail server configurations --&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"mailServerPort"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"5025"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		接下来例子中的配置提供了一个我们自定义的<code class="literal">EntityManagerFactory</code>(在这个例子中，使用了OpenJPA 实体管理器)。注意该代码片段仅仅包含与例子相关的beans，去掉了其他beans。OpenJPA实体管理的完整并可以使用的例子可以在activiti-spring-examples(<code class="literal">/activiti-spring/src/test/java/org/activiti/spring/test/jpa/JPASpringTest.java</code>)中找到。
        </p><pre class="prettyprint"><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"entityManagerFactory"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"persistenceUnitManager"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"pum"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jpaVendorAdapter"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"databasePlatform"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"org.apache.openjpa.jdbc.sql.H2Dictionary"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/property&gt;</span><span class="pln"><br></span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.spring.SpringProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"dataSource"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"dataSource"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"transactionManager"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"transactionManager"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"databaseSchemaUpdate"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="bold"><strong><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jpaEntityManagerFactory"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"entityManagerFactory"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jpaHandleTransaction"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jpaCloseEntityManager"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span></strong></span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jobExecutorActivate"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"false"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		同样的配置也可以在编程式创建一个引擎时完成，例如：
        </p><pre class="prettyprint"><span class="typ">ProcessEngine</span><span class="pln"> processEngine </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ProcessEngineConfiguration</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">createProcessEngineConfigurationFromResourceDefault</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="bold"><strong><span class="pun">.</span><span class="pln">setJpaPersistenceUnitName</span><span class="pun">(</span><span class="str">"activiti-pu"</span><span class="pun">)</span></strong></span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">buildProcessEngine</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p><p>
        配置属性：
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong><code class="literal">jpaPersistenceUnitName: </code></strong></span>
			  使用持久化单元的名称（要确保该持久化单元在类路径下是可用的）。根据该规范，默认的路径是<code class="literal">/META-INF/persistence.xml</code>)。要么使用 <code class="literal">jpaEntityManagerFactory</code> 或者<code class="literal">jpaPersistenceUnitName</code>。
            </p></li><li class="listitem"><p>
              <span class="bold"><strong><code class="literal">jpaEntityManagerFactory: </code></strong></span>
			  一个实现了<code class="literal">javax.persistence.EntityManagerFactory</code>的bean的引用。它将被用来加载实体并且刷新更新。要么使用<code class="literal">jpaEntityManagerFactory</code> 或者<code class="literal">jpaPersistenceUnitName</code>。
            </p></li><li class="listitem"><p>
              <span class="bold"><strong><code class="literal">jpaHandleTransaction: </code></strong></span>
			  在被使用的<code class="literal">EntityManager</code> 实例上，该标记表示流程引擎是否需要开始和提交/回滚事物。当使用<code class="literal">Java事物API（JTA）</code>时，设置为false。
            </p></li><li class="listitem"><p>
              <span class="bold"><strong><code class="literal">jpaCloseEntityManager: </code></strong></span>
			  该标记表示流程引擎是否应该关闭从 <code class="literal">EntityManagerFactory</code>获取的 <code class="literal">EntityManager</code>的实例。当<code class="literal">EntityManager</code> 是由容器管理的时候需要设置为false（例如 当使用并不是单一事物作用域的扩展持久化上下文的时候）。
            </p></li></ul></div><p>
      </p></div><div class="section" title="用法"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N1268C"></a>用法</h2></div></div></div><div class="section" title="简单例子"><div class="titlepage"><div><div><h3 class="title"><a name="N1268F"></a>简单例子</h3></div></div></div><p>
	  使用JPA变量的例子可以在
       <code class="literal"><a class="ulink" href="http://svn.codehaus.org/activiti/activiti/trunk/modules/activiti-engine/src/test/java/org/activiti/standalone/jpa/JPAVariableTest.java" target="_top">JPAVariableTest</a></code>中找到。我们将会一步一步的解释<code class="literal">JPAVariableTest.testUpdateJPAEntityValues</code>。
	  </p><p>
		首先，我们需要创建一个基于<code class="literal">META-INF/persistence.xml</code>的<code class="literal">EntityManagerFactory</code>作为我们的持久化单元。它包含持久化单元中所有的类和一些供应商特定的配置。
      </p><p>
		我们将使用一个简单的实体作为测试，其中包含有一个id和<code class="literal">String</code> 类型的value属性，这也将会被持久化。在允许测试之前，我们创建一个实体并且保存它。
        </p><pre class="prettyprint"><span class="lit">@Entity</span><span class="pun">(</span><span class="pln">name </span><span class="pun">=</span><span class="pln"> </span><span class="str">"JPA_ENTITY_FIELD"</span><span class="pun">)</span><span class="pln"><br></span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">FieldAccessJPAEntity</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Id</span><span class="pln"><br>&nbsp; </span><span class="lit">@Column</span><span class="pun">(</span><span class="pln">name </span><span class="pun">=</span><span class="pln"> </span><span class="str">"ID_"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Long</span><span class="pln"> id</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> value</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">FieldAccessJPAEntity</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="com">// Empty constructor needed for JPA</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Long</span><span class="pln"> getId</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> id</span><span class="pun">;</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> setId</span><span class="pun">(</span><span class="typ">Long</span><span class="pln"> id</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">id </span><span class="pun">=</span><span class="pln"> id</span><span class="pun">;</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> getValue</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> value</span><span class="pun">;</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> setValue</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> value</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">value </span><span class="pun">=</span><span class="pln"> value</span><span class="pun">;</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
      </p><p>
		我们启动一个新的流程实例，添加一个实体作为变量。至于其他的变量，它们将会被存储在流程引擎的持久化数据库中。下一次获取该变量的时候，它将会根据该类和存储Id从<code class="literal">EntityManager</code>中加载。
        </p><pre class="prettyprint"><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> variables </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">HashMap</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;();</span><span class="pln"><br>variables</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="str">"entityToUpdate"</span><span class="pun">,</span><span class="pln"> entityToUpdate</span><span class="pun">);</span><span class="pln"><br><br></span><span class="typ">ProcessInstance</span><span class="pln"> processInstance </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="str">"UpdateJPAValuesProcess"</span><span class="pun">,</span><span class="pln"> variables</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
      </p><p>
		在我们的流程定义中的第一个节点是一个<code class="literal">服务任务</code>，它将会调用<code class="literal">entityToUpdate</code>上的<code class="literal">setValue</code>方法，它其实就是我们之前在启动流程实例时候设置的JPA变量并且它将会从当前流程引擎的上下文关联的<code class="literal">EntityManager</code>中加载。
        </p><pre class="prettyprint"><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'theTask'</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">'updateJPAEntityTask'</span><span class="pln"> </span><span class="atn">activiti:expression</span><span class="pun">=</span><span class="atv">"${entityToUpdate.setValue('updatedValue')}"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
      </p><p>
		当完成服务任务时，流程实例将会停留在流程定义中定义的用户任务环节上。这时我们就可以查看该流程实例。与此同时，<code class="literal">EntityManager</code>已经被刷新了并且改变的实体已经被保存进数据库中。当我们获取<code class="literal">entityToUpdate</code>的变量value时，该实体将会被再次加载并且我们获取该实体属性的<code class="literal">值</code> 将会是 <code class="literal">updatedValue</code>。
        </p><pre class="prettyprint"><span class="com">// Servicetask in process 'UpdateJPAValuesProcess' should have set value on entityToUpdate.</span><span class="pln"><br></span><span class="typ">Object</span><span class="pln"> updatedEntity </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">getVariable</span><span class="pun">(</span><span class="pln">processInstance</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">(),</span><span class="pln"> </span><span class="str">"entityToUpdate"</span><span class="pun">);</span><span class="pln"><br>assertTrue</span><span class="pun">(</span><span class="pln">updatedEntity </span><span class="kwd">instanceof</span><span class="pln"> </span><span class="typ">FieldAccessJPAEntity</span><span class="pun">);</span><span class="pln"><br>assertEquals</span><span class="pun">(</span><span class="str">"updatedValue"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">((</span><span class="typ">FieldAccessJPAEntity</span><span class="pun">)</span><span class="pln">updatedEntity</span><span class="pun">).</span><span class="pln">getValue</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
      </p></div><div class="section" title="查询JPA流程变量"><div class="titlepage"><div><div><h3 class="title"><a name="N126D6"></a>查询JPA流程变量</h3></div></div></div><p>
		你可以查询某一JPA实体作为变量的<code class="literal">ProcessInstance</code>s 和 <code class="literal">Execution</code>s 。
        <span class="bold"><strong>注意，在<code class="literal">ProcessInstanceQuery</code> 和 <code class="literal">ExecutionQuery</code>查询中仅仅<code class="literal">variableValueEquals(name, entity)</code>
		支持JPA实体变量 </strong></span>。
        方法 <code class="literal">variableValueNotEquals</code>, <code class="literal">variableValueGreaterThan</code>, <code class="literal">variableValueGreaterThanOrEqual</code>, <code class="literal">variableValueLessThan</code>
        和 <code class="literal">variableValueLessThanOrEqual</code>并不被支持并且传递JPA实体值的时候会抛出一个<code class="literal">ActivitiException</code>。
        </p><pre class="prettyprint"><span class="pln">&nbsp;</span><span class="typ">ProcessInstance</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">createProcessInstanceQuery</span><span class="pun">().</span><span class="pln">variableValueEquals</span><span class="pun">(</span><span class="str">"entityToQuery"</span><span class="pun">,</span><span class="pln"> entityToQuery</span><span class="pun">).</span><span class="pln">singleResult</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
      </p></div><div class="section" title="使用Spring beans和JPA结合的高级例子"><div class="titlepage"><div><div><h3 class="title"><a name="N12703"></a>使用Spring beans和JPA结合的高级例子</h3></div></div></div><p>
	  一个更加高级的例子，<code class="literal">JPASpringTest</code>，可以在<code class="literal">activiti-spring-examples</code>中找到。它描述了如下简单的使用情况：
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>已经存在了一个使用JPA实体的Spring-bean，它用来存储贷款申请。</p></li><li class="listitem"><p>
			使用Activiti，我们可以通过已经存在的bean获取已经使用的实体，并使用它作为变量用于我们的流程中。</p><p>
				按照下面的步骤定义流程：
               </p><div class="itemizedlist"><ul class="itemizedlist" type="circle"><li class="listitem"><p>
				  服务任务，创建一个新的贷款申请，使用已经存在的<code class="literal">LoanRequestBean</code> 接受启动流程时候的变量（例如 可以来自流程启动时候的表单）。
				  使用<code class="literal">activiti:resultVariable</code>（它作为一个变量对表达式返回的结果进行存储）将创建出来的实体作为变量进行存储。
                  </p></li><li class="listitem"><p>
				用户任务，允许经理查看贷款申请，并填入审批意见(同意/不同意)，审批意见将作为一个boolean变量<code class="literal">approvedByManager</code>进行存储</p></li><li class="listitem"><p>
				服务任务，更新贷款申请实体因此该实体与流程保持同步</p></li><li class="listitem"><p>
				  根据贷款申请实体变量<code class="literal">approved</code>的值，将利用唯一网关（BPMN2规范）自动决定下一步该选择那一条路径：当申请批准，流程结束。否则，一个额外的任务将会使用
				  （发送拒绝信），所以这样就是可以让拒绝信手动通知客户。
                  </p></li></ul></div><p>
            </p></li></ul></div><p>
		请注意该流程并不包含任何表单，因为它仅仅被用于单元测试。
        </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/jpa.png" align="middle"></div><p>
      </p><p>
        </p><pre class="prettyprint"><span class="pun">&lt;?</span><span class="pln">xml version</span><span class="pun">=</span><span class="str">"1.0"</span><span class="pln"> encoding</span><span class="pun">=</span><span class="str">"UTF-8"</span><span class="pun">?&gt;</span><span class="pln"><br></span><span class="tag">&lt;definitions</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"taskAssigneeExample"</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/BPMN/20100524/MODEL"</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns:xsi</span><span class="pun">=</span><span class="atv">"http://www.w3.org/2001/XMLSchema-instance"</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns:activiti</span><span class="pun">=</span><span class="atv">"http://activiti.org/bpmn"</span><span class="pln"><br>&nbsp; </span><span class="atn">targetNamespace</span><span class="pun">=</span><span class="atv">"org.activiti.examples"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"LoanRequestProcess"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Process creating and handling loan request"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'theStart'</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'flow1'</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">'theStart'</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">'createLoanRequest'</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'createLoanRequest'</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">'Create loan request'</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="atn">activiti:expression</span><span class="pun">=</span><span class="atv">"${loanRequestBean.newLoanRequest(customerName, amount)}"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="atn">activiti:resultVariable</span><span class="pun">=</span><span class="atv">"loanRequest"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'flow2'</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">'createLoanRequest'</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">'approveTask'</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"approveTask"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Approve request"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'flow3'</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">'approveTask'</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">'approveOrDissaprove'</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;serviceTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'approveOrDissaprove'</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">'Store decision'</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="atn">activiti:expression</span><span class="pun">=</span><span class="atv">"${loanRequest.setApproved(approvedByManager)}"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'flow4'</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">'approveOrDissaprove'</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">'exclusiveGw'</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;exclusiveGateway</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"exclusiveGw"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Exclusive Gateway approval"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"endFlow1"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"exclusiveGw"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln">${loanRequest.approved}</span><span class="tag">&lt;/conditionExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/sequenceFlow&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"endFlow2"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"exclusiveGw"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"sendRejectionLetter"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;conditionExpression</span><span class="pln"> </span><span class="atn">xsi:type</span><span class="pun">=</span><span class="atv">"tFormalExpression"</span><span class="tag">&gt;</span><span class="pln">${!loanRequest.approved}</span><span class="tag">&lt;/conditionExpression&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/sequenceFlow&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"sendRejectionLetter"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Send rejection letter"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'flow5'</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">'sendRejectionLetter'</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">'theOtherEnd'</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'theEnd'</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">'theOtherEnd'</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/process&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/definitions&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
      </p><p>虽然上面的例子非常的简单，但是它却展示了JPA结合Spring和参数化方法表达式的强大优势。这样所有的流程就不需要自定义java代码（当然，除了Spring bean之外）
	  并且大幅度的加快了流程部署。
      </p></div></div></div><div class="chapter" title="Chapter&nbsp;11.&nbsp;历史"><div class="titlepage"><div><div><h2 class="title"><a name="history"></a>Chapter&nbsp;11.&nbsp;历史</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#historyQuery">查询历史</a></span></dt><dd><dl><dt><span class="section"><a href="#historyQueryProcessInstance">HistoricProcessInstanceQuery</a></span></dt><dt><span class="section"><a href="#historyQueryVariableInstance">HistoricVariableInstanceQuery</a></span></dt><dt><span class="section"><a href="#historyQueryActivityInstance">HistoricActivityInstanceQuery</a></span></dt><dt><span class="section"><a href="#historyQueryDetail">HistoricDetailQuery</a></span></dt><dt><span class="section"><a href="#historyQueryTaskInstance">HistoricTaskInstanceQuery</a></span></dt></dl></dd><dt><span class="section"><a href="#historyConfig">历史配置</a></span></dt><dt><span class="section"><a href="#historyFormAuditPurposes">审计目的的历史</a></span></dt></dl></div><p>历史是一个组件，它可以捕获发生在进程执行中的信息并永久的保存，与运行时数据不同的是，当流程实例运行完成之后它还会存在于数据库中。
  </p><p>有5个历史实体对象:

    </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">HistoricProcessInstance</code>s 包含当前和已经结束的流程实例信息。</p></li><li class="listitem"><p><code class="literal">HistoricVariableInstance</code>s 包含最新的流程变量或任务变量。</p></li><li class="listitem"><p><code class="literal">HistoricActivityInstance</code>s 包含一个活动(流程上的节点)的执行信息 。</p></li><li class="listitem"><p><code class="literal">HistoricTaskInstance</code>s 包含关于当前和过去的（已完成或已删除）任务实例信息。</p></li><li class="listitem"><p><code class="literal">HistoricDetail</code>s 包含历史流程实例、活动实例、任务实例的各种信息。</p></li></ul></div><p>
  </p><p>由于数据库中保存着历史信息以及正在运行的流程实例信息，就要考虑怎样尽量少的对运行中的流程实例数据进行访问的方式查询这些表来保证执行的性能。
  </p><p>稍后, 这个信息体现在Activiti Explorer。同时它也是报告将生成的信息。
  </p><div class="section" title="查询历史"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="historyQuery"></a>查询历史</h2></div></div></div><p>在API中, 提供了对这5种实体的查询方法。类HistoryService 提供了以下几种方法
      <code class="literal">createHistoricProcessInstanceQuery()</code>, <code class="literal">createHistoricVariableInstanceQuery()</code>, <code class="literal">createHistoricActivityInstanceQuery()</code>,
      <code class="literal">createHistoricDetailQuery()</code> 和 <code class="literal">createHistoricTaskInstanceQuery()</code>。
    </p><p>下面是一些API中查询历史信息的例子. 这些方法的详细描述可以在 <a class="ulink" href="http://www.mossle.com/docs/javadocs/index.html" target="_top">ZAjavadocs</a>中找到, 在包<code class="literal">org.activiti.engine.history</code> 中</p><div class="section" title="HistoricProcessInstanceQuery"><div class="titlepage"><div><div><h3 class="title"><a name="historyQueryProcessInstance"></a>HistoricProcessInstanceQuery</h3></div></div></div>流程实例。
       <p>获取流程定义ID是'XXX'、已经结束、花费时间最长（持续时间最长）的10个<code class="literal">HistoricProcessInstances</code>
          </p><pre class="prettyprint"><span class="pln">historyService</span><span class="pun">.</span><span class="pln">createHistoricProcessInstanceQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">finished</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">processDefinitionId</span><span class="pun">(</span><span class="str">"XXX"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">orderByProcessInstanceDuration</span><span class="pun">().</span><span class="pln">desc</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">listPage</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">10</span><span class="pun">);</span></pre><p>
      </p></div><div class="section" title="HistoricVariableInstanceQuery"><div class="titlepage"><div><div><h3 class="title"><a name="historyQueryVariableInstance"></a>HistoricVariableInstanceQuery</h3></div></div></div><p>在ID为'xxx'、已经结束的流程实例中查询所有<code class="literal">HistoricVariableInstances</code>，并按变量名排序
          </p><pre class="prettyprint"><span class="pln">historyService</span><span class="pun">.</span><span class="pln">createHistoricVariableInstanceQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">processInstanceId</span><span class="pun">(</span><span class="str">"XXX"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">orderByVariableName</span><span class="pun">.</span><span class="pln">desc</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">list</span><span class="pun">();</span></pre><p>
      </p></div><div class="section" title="HistoricActivityInstanceQuery"><div class="titlepage"><div><div><h3 class="title"><a name="historyQueryActivityInstance"></a>HistoricActivityInstanceQuery</h3></div></div></div><p>获取所有已经结束的流程定义ID为’XXX'并且类型是'serviceTask'中的最后一个 <code class="literal">HistoricActivityInstance</code>
  </p><pre class="prettyprint"><span class="pln">historyService</span><span class="pun">.</span><span class="pln">createHistoricActivityInstanceQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">activityType</span><span class="pun">(</span><span class="str">"serviceTask"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">processDefinitionId</span><span class="pun">(</span><span class="str">"XXX"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">finished</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">orderByHistoricActivityInstanceEndTime</span><span class="pun">().</span><span class="pln">desc</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">listPage</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">);</span></pre><p>
      </p></div><div class="section" title="HistoricDetailQuery"><div class="titlepage"><div><div><h3 class="title"><a name="historyQueryDetail"></a>HistoricDetailQuery</h3></div></div></div><p>下个例子, 获取所有id为123的流程实例中产量的可变更新信息。这个查询只会返回 <code class="literal">HistoricVariableUpdate</code>s. 注意一些变量名可能包含多个 <code class="literal">HistoricVariableUpdate</code>
    实体, 每次流程运行时会更新变量。 你可以用 <code class="literal">orderByTime</code> (变量被更新的时间) 或者 <code class="literal">orderByVariableRevision</code> (运行更新时变量的版本)来排序查询.
  </p><pre class="prettyprint"><span class="pln">historyService</span><span class="pun">.</span><span class="pln">createHistoricDetailQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">variableUpdates</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">processInstanceId</span><span class="pun">(</span><span class="str">"123"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">orderByVariableName</span><span class="pun">().</span><span class="pln">asc</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">list</span><span class="pun">()</span></pre><p>
    </p><p>这个例子获取所有流程实例ID为123的流程中，提交任务或者启动流程时的<a class="link" href="#formProperties" title="表单属性">form-properties</a> 。 这个查询只会返回 <code class="literal">HistoricFormProperties</code>s 。
  </p><pre class="prettyprint"><span class="pln">historyService</span><span class="pun">.</span><span class="pln">createHistoricDetailQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">formProperties</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">processInstanceId</span><span class="pun">(</span><span class="str">"123"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">orderByVariableName</span><span class="pun">().</span><span class="pln">asc</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">list</span><span class="pun">()</span></pre><p>
  </p><p>最后这个例子获取所有在执行ID为123的任务时的变量更新。 返回全部在任务中设置的变量（任务局部变量） <code class="literal">HistoricVariableUpdates</code> , 不是流程实例变量。</p><pre class="prettyprint"><span class="pln">historyService</span><span class="pun">.</span><span class="pln">createHistoricDetailQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">variableUpdates</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">taskId</span><span class="pun">(</span><span class="str">"123"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">orderByVariableName</span><span class="pun">().</span><span class="pln">asc</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">list</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span></pre><p>
  任务局部变量可以用 <code class="literal">TaskService</code> 设置或者使用 <code class="literal">DelegateTask</code>, 在<code class="literal">TaskListener</code>里设置:
  </p><pre class="prettyprint"><span class="pln">taskService</span><span class="pun">.</span><span class="pln">setVariableLocal</span><span class="pun">(</span><span class="str">"123"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"myVariable"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Variable value"</span><span class="pun">);</span></pre><p>
  </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> notify</span><span class="pun">(</span><span class="typ">DelegateTask</span><span class="pln"> delegateTask</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; delegateTask</span><span class="pun">.</span><span class="pln">setVariableLocal</span><span class="pun">(</span><span class="str">"myVariable"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Variable value"</span><span class="pun">);</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
</p></div><div class="section" title="HistoricTaskInstanceQuery"><div class="titlepage"><div><div><h3 class="title"><a name="historyQueryTaskInstance"></a>HistoricTaskInstanceQuery</h3></div></div></div><p>获取所有任务中10个花费时间最长（持续时间最长）并已经结束的 <code class="literal">HistoricTaskInstance</code>s 。
          </p><pre class="prettyprint"><span class="pln">historyService</span><span class="pun">.</span><span class="pln">createHistoricTaskInstanceQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">finished</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">orderByHistoricTaskInstanceDuration</span><span class="pun">().</span><span class="pln">desc</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">listPage</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">10</span><span class="pun">);</span></pre><p>
      </p><p>获取删除原因包含"无效"，最后分配给用户"kermit"的 <code class="literal">HistoricTaskInstance</code>s。
          </p><pre class="prettyprint"><span class="pln">historyService</span><span class="pun">.</span><span class="pln">createHistoricTaskInstanceQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">finished</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">taskDeleteReasonLike</span><span class="pun">(</span><span class="str">"%invalid%"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">taskAssignee</span><span class="pun">(</span><span class="str">"kermit"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">listPage</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">10</span><span class="pun">);</span></pre><p>
      </p></div></div><div class="section" title="历史配置"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="historyConfig"></a>历史配置</h2></div></div></div><p>历史级别可以用编写代码的方法配置, 用枚举类型org.activiti.engine.impl.history.HistoryLevel (或者在5.11之前定义在<code class="literal">ProcessEngineConfiguration</code>中的常量 <code class="literal">HISTORY_*</code>):</p><pre class="prettyprint"><span class="typ">ProcessEngine</span><span class="pln"> processEngine </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ProcessEngineConfiguration</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">createProcessEngineConfigurationFromResourceDefault</span><span class="pun">()</span><span class="pln"><br>&nbsp; </span><span class="bold"><strong><span class="pun">.</span><span class="pln">setHistory</span><span class="pun">(</span><span class="typ">HistoryLevel</span><span class="pun">.</span><span class="pln">AUDIT</span><span class="pun">.</span><span class="pln">getKey</span><span class="pun">())</span></strong></span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">buildProcessEngine</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span></pre><p>级别可以在配置文件 activiti.cfg.xml 或者在 spring-context中配置:</p><pre class="prettyprint"><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.impl.cfg.StandaloneInMemProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"history"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"audit"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; ...<br></span><span class="tag">&lt;/bean&gt;</span></pre><p>历史信息级别可以配置成以下几种:
	  </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">none</code>: 忽略所有历史存档。这是流程执行时性能最好的状态，但没有任何历史信息可用。 </p></li><li class="listitem"><p><code class="literal">activity</code>: 保存所有流程实例信息和活动实例信息。
	    在流程实例结束时, 最后一个流程实例中的最新的变量值将赋值给历史变量。 不会保存过程中的详细信息。</p></li><li class="listitem"><p><code class="literal">audit</code>: 这个是默认值. 它保存所有流程实例信息,
	    活动信息, 保证所有的变量和提交的表单属性保持同步
	    这样所有用户交互信息都是可追溯的，可以用来审计。</p></li><li class="listitem"><p><code class="literal">full</code>: 这个是最高级别的历史信息存档，同样也是最慢的。  这个级别存储发生在审核以及所有其它细节的信息, 主要是更新流程变量。</p></li></ul></div><p><span class="bold"><strong>在Activiti 5.11之前, 历史级别都存在数据库中 (表 <code class="literal">ACT_GE_PROPERTY</code>,属性名为 <code class="literal">historyLevel</code>). 从Activiti 5.11开始, 这个值不再用，并且从数据库中忽略或者删除掉。
	 这个配置可以在两次启动间修改, 因为是在启动之前修改的，所以不会抛出异常.</strong></span></p></div><div class="section" title="审计目的的历史"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="historyFormAuditPurposes"></a>审计目的的历史</h2></div></div></div><p>当<a class="link" href="#historyConfig" title="历史配置">配置</a> 在 <code class="literal">audit</code>级别之上
    。 所有通过
    <code class="literal">FormService.submitStartFormData(String processDefinitionId, Map&lt;String, String&gt; properties)</code>
    and <code class="literal">FormService.submitTaskFormData(String taskId, Map&lt;String, String&gt; properties)</code>
    方法提交的属性都会被记录。
    </p><p>表单属性可以通过API查询，如下:</p><pre class="prettyprint"><span class="pln">historyService<br>&nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">createHistoricDetailQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">formProperties</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">list</span><span class="pun">();</span></pre><p>上面的例子只有类型为 <code class="literal">HistoricFormProperty</code>的详细信息会被查询出来。
    </p><p>如果你在调用<code class="literal">IdentityService.setAuthenticatedUserId(String)</code>提交之前设置了认证用户，那么提交表单的用户将被保存在历史信息中并可以在开始表单中
	使用<code class="literal">HistoricProcessInstance.getStartUserId()</code>获取，在任务表单中用HistoricActivityInstance.getAssignee()获取。
    </p></div></div><div class="chapter" title="Chapter&nbsp;12.&nbsp;Eclipse Designer"><div class="titlepage"><div><div><h2 class="title"><a name="activitiDesigner"></a>Chapter&nbsp;12.&nbsp;Eclipse Designer</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#eclipseDesignerInstallation">Installation</a></span></dt><dt><span class="section"><a href="#eclipseDesignerEditorFeatures">Activiti Designer 编辑器的特性</a></span></dt><dt><span class="section"><a href="#eclipseDesignerBPMNFeatures">Activiti Designer 的BPMN 特性</a></span></dt><dt><span class="section"><a href="#eclipseDesignerDeployment">Activiti Designer 部署特性</a></span></dt><dt><span class="section"><a href="#eclipseDesignerExtending">扩展Activiti Designer</a></span></dt><dd><dl><dt><span class="section"><a href="#eclipseDesignerCustomizingPalette">定制画板</a></span></dt><dt><span class="section"><a href="#N12CBC">校验图形和导出到自定义的输出格式</a></span></dt></dl></dd></dl></div><p>
  	Activiti 同时还有个Eclipse 插件，Activiti Eclipse Designer ，可用于图形化建模、测试、部署 BPMN 2.0的流程。
  </p><div class="section" title="Installation"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="eclipseDesignerInstallation"></a>Installation</h2></div></div></div><p>
    	以下安装指南在 <a class="ulink" href="http://www.eclipse.org/downloads/" target="_top">Eclipse Indigo</a>. 须注意Eclipse 的Helio 是支持<span class="bold"><strong>NOT</strong></span> 的.
    </p><p>
    	打开 <span class="bold"><strong>Help -&gt; Install New Software</strong></span>. 在如下面板中
     , 点击 <span class="emphasis"><em>Add</em></span> 按钮, 然后填入下列字段:

      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><span class="bold"><strong>Name: </strong></span>Activiti BPMN 2.0 designer</p></li><li class="listitem"><p><span class="bold"><strong>Location:
            </strong></span>http://activiti.org/designer/update/</p></li></ul></div><p>
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_004.png" align="middle"></div><p>
      务必选中 <span class="bold"><strong>"Contact all updates sites.."</strong></span>
      , 因为它会检查所有当前安装所需要的插件并可以被Eclipse下载.
    </p></div><div class="section" title="Activiti Designer 编辑器的特性"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="eclipseDesignerEditorFeatures"></a>Activiti Designer 编辑器的特性</h2></div></div></div><p>
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
          	创建Activiti 项目和图形.

          	</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_011.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
          	当创建一个ACTIVITI表格的时候，Activiti Designer会建立一个BPMN的文档.打开Activiti Diagram 辑器时会出现一个图示的画布和调色板,同一文件在用XML编辑器打开后,会显示BPMN2.0程定义XML元素.因此,同一个文件能同时使用图形图以及BPMN 2.0XML. 注意Activiti的5.9 BPMN扩展尚未作为部署文件来支持程定义. 因此,Activiti Designer 的“创建部署文件”功能生成一个BAR文件,BAR里面有一个含.bpmn内容的.bpmn20.xml文件.您也可以做一个快速的文件重命名.另外,你也可直接用Activiti Designer 打开.bpmn20.xml文件.

            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_025.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
          	BPMN 2.0XML文件可以导入Activiti Designer,并创建一个图表, 只需复制BPMN 2.0 XML进你的项目,再用.Activiti Designer打开它. Activiti Designer用BPMN DI的文件创建图表信息.如你有一个BPMN2.0的XML文件而无BPMN DI信息，那也无图可创建.

            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_012.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
          	对于部署 BAR 文件以及可选的 JAR 文件,可以通过右击
          	package explorer视图中的Activiti项目,然后选择弹出菜单底问的 <span class="emphasis"><em>Create deployment artifacts</em></span> 选项
          	由Activiti Designer来创建.更多关于Designer的部署功能,见
          	<a class="link" href="#eclipseDesignerDeployment" title="Activiti Designer 部署特性">部署</a> 一节.

            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_016.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>生成单元测试 (在package explorer 视图下右击BPMN2.0的XML文件,然后选择
            <span class="emphasis"><em>generate unit test</em></span>)生成的单元测试是配置为运行有H2数据
            库上的Activiti配置.你现在就可以运行单元测试来测试你的流程定义了.
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_015.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
          	Activiti 项目可以做为Maven 项目来生成.但是需要配置依赖关系
            需要运行 <span class="emphasis"><em>mvn eclipse:eclipse</em></span> 这样Maven的依赖会像预期的那样被配置.
            注意对于流程设计来讲是不需要Maven的依赖.只是在运行单元测试时需要.

            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_005.png" align="middle"></div><p>
          </p></li></ul></div><p>
    </p></div><div class="section" title="Activiti Designer 的BPMN 特性"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="eclipseDesignerBPMNFeatures"></a>Activiti Designer 的BPMN 特性</h2></div></div></div><p>
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
          	支持开始没有事件,启动错误事件、定时器启动事件,最后没有一个错误事件,事件,结束序列流,
			并行网关,网关,网关,独家包容事件网关,嵌入式子流程、事件子流程、调用活动,游泳池,车道,
			脚本任务、用户任务、服务任务,邮件任务,手动任务,业务规则任务,获得任务,
			定时器边界事件、错误边界事件、信号边界事件、定时器捕获事件,信号捕捉事件、信号投掷项目,
			和四个Alfresco特定的元素(用户、脚本、邮件任务和开始事件).

            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_003.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
            可以很快地改变一个任务的类型,只需鼠标悬停在该元素上,然后选择新的任务类型.

            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_032.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
            可以快速地添加一个新元素,只需鼠标悬停某个元素上,然后选择一个新的元素类型.

            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_006.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
          	支持对Java 服务任务的Java 类、表达式以及代理表达式的配置.此外,也可以配置字段扩展.

            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_030.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
			支持pools 和 lanes, 因为Activiti能根据不同的程定义读取不同的存储池.它使仅用一个存储池看起来意义重大.如果您使用多个池，要注意储存池的图序列流动，它可能会在部署AD引擎的过程中发生问题.当然,只要你想,你可以添加尽可能多的POOL,LANES.

            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_020.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
            您可以通过填写名称属性添加标签序列流.
            你可以自己定位标签的位置保存为BPMN 2 XML DI部分信息
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_040.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
            支持子流程事件.

            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_018.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
          	支持扩嵌入式子流程. 你还可以添加一个嵌入式子流程进另一个嵌入式子流程.

            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_035.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
          	支持任务和嵌入子过程上的定时器边界事件.尽管,定时器边界事件最大的意义在于可以在Activiti Designer 中
			的用户任务或嵌入子过程上使用.

            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_007.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
          	支持附加的Activiti 的扩展,如邮件任务、用户任务候选者配置以及脚本任务的配置.

            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_021.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
          	支持Activiti 执行监听和任务监听.可以给执行监听添加字段扩展.

          	</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_014.png" align="middle"></div><p>
          </p></li><li class="listitem"><p> 支持顺序流上的条件. </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_029.png" align="middle"></div><p>
          </p></li></ul></div><p>
    </p></div><div class="section" title="Activiti Designer 部署特性"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="eclipseDesignerDeployment"></a>Activiti Designer 部署特性</h2></div></div></div><p>
    	将流程定义和任务表单部署到Activiti引擎并不难.要准备一个BAR 文件,其内含有流程定义的BPMN 2.0的XML 文件,
		还可以有任务表单以及可以在Activiti Explorer中浏览的流程图片.在Activiti Designer中创建BAR文件是非常简单
		的.完成流程实现后,在package explorer视图下右击你的Activiti项目,然后选择弹出菜单底部的
    	<span class="bold"><strong>Create deployment artifacts</strong></span> 选项.

    	</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_016.png" align="middle"></div><p>
   	</p><p>
    	接下来,deployment目录会被创建,其内包含有BAR文件,你的Activiti项目中的Java类的JAR文件也可以在此.

    	</p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_009.png" align="middle"></div><p>
    </p><p>
    	现在就可以使用Activiti Explorer中的部署标签将这个文件部署到Activiti引擎上了,相信你已经准备好了.

    </p><p>
    	当你的项目中含有Java 类时,部署要稍微麻烦一点.这种情况下,Activiti Designer 中的
    	<span class="bold"><strong>Create deployment artifacts</strong></span> 同时会生成包含编译了的类的JAR 文件.
		必须将这个JAR文件部署到你的Activiti Tomcat安装路径下的activiti-XXX/WEB -INF/lib路径下.以使得
		这些类在Activiti引擎的类路径下是可用的.
    </p></div><div class="section" title="扩展Activiti Designer"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="eclipseDesignerExtending"></a>扩展Activiti Designer</h2></div></div></div><p>你可以对Activiti Designer提供的默认功能进行扩展.这一节介绍有哪些扩展可用,如何使用这些扩展,
		并提供了一些使用的例子.当默认的功能不能满足要求,需要额外功能时,或者业务流程建模时有领域
		所特有的需求时，扩展Activiti Designer就变得很有用了.Acitiviti Designer的扩展分为两种不同的
		类型,扩展画板和扩展输出格式.每种形式都有其特有的方式和不同的专业技术.
	</p><p>
      </p><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>扩展Activiti Designer 需要有技术知识以及专业的Java 编程的知识.根据你要创建的扩展类型,
		你可能也要熟悉Maven、Eclipse 、OSGI、Eclipse扩展以及SWT.
		</p></div><p>
    </p><div class="section" title="定制画板"><div class="titlepage"><div><div><h3 class="title"><a name="eclipseDesignerCustomizingPalette"></a>定制画板</h3></div></div></div><p>流程建模时,可以定制显示给用户的画板.画板是那些可在流程图形的画布上拖拽的形状的集合,
	  它显示在画布右边.正如你在默认画板所看到的.默认的形状被分组到了事件、分支等区隔(称为"抽屉")
	  中.Activiti Designer 中有两种内置的选择来定制画板中的抽屉和形状:
	  </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>将你自己的形状/节点添加到现有的或新的抽屉内. </p></li><li class="listitem"><p>禁用Activiti Designer提供的任何或所有的默认BPMN 2.0的形状,除了连接工具和选择工具.</p></li></ul></div><p>要想定制画板，需要创建一个JAR 文件，并将其添加到Activiti Designer 特定的安装目录下
	  (后面有更多关于 <a class="link" href="#eclipseDesignerApplyingExtension" title="将扩展应用到Activiti Designer">如何操作</a> ). 这样的
	  JAR 文件称为 <span class="emphasis"><em>扩展</em></span>. 通过编写包含在扩展中的类, Activiti Designer就能知道你
	  想要的定制.为了使其运行, 类必须实现某些接口.你需要将一个集成了这些接口以及一些继承用的基础
	  类的类库添加到你项目的类路径下.
	  </p><p>你可以在Activiti Designer管理的源码下找到下面列出的代码实例.查看Activiti源码
         <code class="literal">projects/designer</code> 目录下的<code class="literal">examples/money-tasks</code>
		 目录.
	  </p><p>
        </p><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>可以使用你所偏爱的工具来设置你的项目,然后使用你选择的构建工具来构建JAR文件.
		  下面的说明,设置假设使用的是Eclipse Helios ，Maven（3.x）作为构建构建工具, 但任何其
		  它的设置也都能让你创建同样的结果.
		  </p></div><p>
      </p><div class="section" title="扩展的设置 (Eclipse/Maven)"><div class="titlepage"><div><div><h4 class="title"><a name="N12995"></a>扩展的设置 (Eclipse/Maven)</h4></div></div></div><p>下载并解压 <a class="ulink" href="http://www.eclipse.org/downloads" target="_top">Eclipse</a>
          (使用最新版本) 和最新版本(3.x)的<a class="ulink" href="http://maven.apache.org/download.html" target="_top">Apache Maven</a>. 如果你使用2.x版本
          的Maven, 在构建项目时会运行出错, 所以确保你的版本是最新的. 我们假设你能熟练使用基
		  本特性和Eclipse的Java编辑器. 由你决定是使用Eclipse 的Maven 特性还是在命令行上运行
		  Maven 命令.</p><p>在Eclipse里创建一个新项目.这是一个普通的项目类型.在项目的根路径下创建
		<code class="literal">pom.xml</code>文件用来包含Maven 项目的设置. 同时创建 <code class="literal">src/main/java</code>
		和<code class="literal">src/main/resources</code>文件, 这是Maven 对于Java 源文件和资源的约定.
		打开<code class="literal">pom.xml</code> 文件并添加下列代码:</p><p>
          </p><pre class="prettyprint"><span class="tag">&lt;project</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://maven.apache.org/POM/4.0.0"</span><span class="pln"><br>&nbsp; </span><span class="atn">xmlns:xsi</span><span class="pun">=</span><span class="atv">"http://www.w3.org/2001/XMLSchema-instance"</span><span class="pln"><br>&nbsp; </span><span class="atn">xsi:schemaLocation</span><span class="pun">=</span><span class="atv">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;modelVersion&gt;</span><span class="pln">4.0.0</span><span class="tag">&lt;/modelVersion&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;groupId&gt;</span><span class="pln">org.acme</span><span class="tag">&lt;/groupId&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;artifactId&gt;</span><span class="pln">money-tasks</span><span class="tag">&lt;/artifactId&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;version&gt;</span><span class="pln">1.0.0</span><span class="tag">&lt;/version&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;packaging&gt;</span><span class="pln">jar</span><span class="tag">&lt;/packaging&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;name&gt;</span><span class="pln">Acme Corporation Money Tasks</span><span class="tag">&lt;/name&gt;</span><span class="pln"><br>...<br></span><span class="tag">&lt;/project&gt;</span></pre><p>
        </p><p>正如你所看到的, 这只是一个定义了项目<code class="literal">groupId</code>,
		<code class="literal">artifactId</code> 和 <code class="literal">version</code>的基本的pom.xml 文件. 我们将创建
		一个定制,其中包含我们money业务中一个的自定义节点.</p><p>通过在<code class="literal">pom.xml</code> 文件内引入依赖,就可以将集成的类库添加到你项目的依赖中:
		</p><p>
          </p><pre class="prettyprint"><span class="tag">&lt;dependencies&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;dependency&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;groupId&gt;</span><span class="pln">org.activiti.designer</span><span class="tag">&lt;/groupId&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;artifactId&gt;</span><span class="pln">org.activiti.designer.integration</span><span class="tag">&lt;/artifactId&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;version&gt;</span><span class="pln">5.12.0</span><span class="tag">&lt;/version&gt;</span><span class="pln"> </span><span class="com">&lt;!-- Use the current Activiti Designer version --&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;scope&gt;</span><span class="pln">compile</span><span class="tag">&lt;/scope&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/dependency&gt;</span><span class="pln"><br></span><span class="tag">&lt;/dependencies&gt;</span><span class="pln"><br>...<br></span><span class="tag">&lt;repositories&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;repository&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;id&gt;</span><span class="pln">Activiti</span><span class="tag">&lt;/id&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;url&gt;</span><span class="pln">https://maven.alfresco.com/nexus/content/groups/public/</span><span class="tag">&lt;/url&gt;</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="tag">&lt;/repository&gt;</span><span class="pln"><br></span><span class="tag">&lt;/repositories&gt;</span></pre><p>
        </p><p>最后,在<code class="literal"> pom.xml</code>文件中添加对<code class="literal">maven-compiler-plugin</code>
		  的配置,Java 源代码级别最低是1.5 (看下面的代码片段). 这在使用注解时需要。也可以包含让Maven
		  生成JAR的<code class="literal">MANIFEST.MF</code> 文件的命令. 这不是必需的, 但这样你可以使用清单文
		  件的一个特定的属性作为扩展的名称 (这个名称可以显示在Designer的某处, 主要是为以后如果Designer
		  中有几个扩展的时候使用).如果你想这样做,将以下代码片段包含进 <code class="literal">pom.xml</code>文件:
		 </p><p>
          </p><pre class="prettyprint"><span class="tag">&lt;build&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;plugins&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;plugin&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;artifactId&gt;</span><span class="pln">maven-compiler-plugin</span><span class="tag">&lt;/artifactId&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;configuration&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;source&gt;</span><span class="pln">1.5</span><span class="tag">&lt;/source&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;target&gt;</span><span class="pln">1.5</span><span class="tag">&lt;/target&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;showDeprecation&gt;</span><span class="pln">true</span><span class="tag">&lt;/showDeprecation&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;showWarnings&gt;</span><span class="pln">true</span><span class="tag">&lt;/showWarnings&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;optimize&gt;</span><span class="pln">true</span><span class="tag">&lt;/optimize&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/configuration&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/plugin&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;plugin&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;groupId&gt;</span><span class="pln">org.apache.maven.plugins</span><span class="tag">&lt;/groupId&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;artifactId&gt;</span><span class="pln">maven-jar-plugin</span><span class="tag">&lt;/artifactId&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;version&gt;</span><span class="pln">2.3.1</span><span class="tag">&lt;/version&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;configuration&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;archive&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;index&gt;</span><span class="pln">true</span><span class="tag">&lt;/index&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;manifest&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;addClasspath&gt;</span><span class="pln">false</span><span class="tag">&lt;/addClasspath&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;addDefaultImplementationEntries&gt;</span><span class="pln">true</span><span class="tag">&lt;/addDefaultImplementationEntries&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/manifest&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;manifestEntries&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;ActivitiDesigner-Extension-Name&gt;</span><span class="pln">Acme Money</span><span class="tag">&lt;/ActivitiDesigner-Extension-Name&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/manifestEntries&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/archive&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/configuration&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/plugin&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/plugins&gt;</span><span class="pln"><br></span><span class="tag">&lt;/build&gt;</span></pre><p>
        </p><p>扩展的名称是由<code class="literal">ActivitiDesigner-Extension-Name</code> 属性描述的.
		现在剩下唯一要做的就是让 根据<code class="literal">pom.xml</code>件中的指令来设置项目了.
		所以打开命令窗口,转到Eclipse 工作空间下你的项目的根文件夹.然后执行以下Maven命令:
		</p><p>
          </p><pre class="prettyprint"><span class="pln">mvn eclipse</span><span class="pun">:</span><span class="pln">eclipse</span></pre><p>
        </p><p>等待构建完成.刷新项目(使用项目上下文菜单(右击),选择<code class="literal">Refresh</code>).
		此时,<code class="literal">src/main/java</code>和<code class="literal">src/main/resources</code> 文件夹应该
		已经是Eclipse 项目下的资源文件夹了.
		</p><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>当然你也可以使用 <a class="ulink" href="http://www.eclipse.org/m2e" target="_top">m2eclipse</a>
		  插件，只要从项目的上下文菜单（右击）就能启用Maven 依赖管理。然后在项目上下文菜
		  单中选择<code class="literal">Maven</code> &gt; <code class="literal">Update project configuration</code>
		  这也能设置源文件夹. </p></div><p>设置就这样.现在就可以开始创建Activiti Designer的定制了!</p></div><div class="section" title="将扩展应用到Activiti Designer"><div class="titlepage"><div><div><h4 class="title"><a name="eclipseDesignerApplyingExtension"></a>将扩展应用到Activiti Designer</h4></div></div></div><p>你可能想要知道怎样才能将扩展添加到Activiti Designer 以使定制被应用.这就是操作步骤:
		</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>一旦创建完扩展的JAR（例如,利用Maven执行项目内的mvn的安装程序进行构建）,需要
			  将其放在计算机中安装Activiti Designer 的地方;
			  </p></li><li class="listitem"><p>将扩展存储到硬盘中一个可以的地方，记住这个地方.
			  <span class="emphasis"><em>注意: </em></span> 该位置必须是Activiti Designer外Eclipse workspace以外的路径,
			  workspace中存储扩展将导致用户得到一个弹出错误消息,无法扩展;</p></li><li class="listitem"><p>启动Activiti Designer,选择菜单栏中的 <code class="literal">Window</code> &gt;
                  <code class="literal">Preferences</code>
              </p></li><li class="listitem"><p>在preferences窗口中, 输入 <code class="literal">user</code>关键字. 在<code class="literal">Java</code>
			  部分中你应该能看到访问Eclipse 中的<code class="literal">User Libraries</code>一项.
			  </p><p>
                </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_008.png" align="middle"></div><p>
              </p></li><li class="listitem"><p>选择User Libraries,在右侧显示的树形视图中你可以添加类库.你会看到用来向
			  Activiti Designer添加扩展的默认分组(根据安装的Eclipse,可能也会看到另外其它的分组).
			  </p><p>
                </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer.png" align="middle"></div><p>
              </p></li><li class="listitem"><p>选择<code class="literal">Activiti Designer Extensions</code> 分组,点击<code class="literal">Add JARs...</code>
			  按钮. 导航到存储扩展的文件夹，选择你想要添加的扩展文件.完成后,这个扩展就作为
			  <code class="literal">Activiti Designer Extensions</code> 分组的一部分显示在preference 窗口内,如下显示.</p><p>
                </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_042.png" align="middle"></div><p>
              </p></li><li class="listitem"><p>点击<code class="literal">OK</code> 按钮并关闭preferences对话框.<code class="literal">Activiti Designer Extensions</code>
			  分组自动添加到了你新创建的Activiti项目.在Navigator 或Package Explorer 视图中你可以看
			  到此用户类库作为一项出现在项目树中。如果工作空间内已经存在Activiti 的项目了，你也会
			  看到新扩展显示在该分组内.例子如下所示.
			  </p><p>
                </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_010.png" align="middle"></div><p>
              </p></li></ul></div><p>此时在打开图形的画板中将有来自新扩展的形状（或禁掉的形状，取决于扩展内的定制）.如果
		已经打开了图形,将其关闭后重新打开看看画板中有什么变化.
		</p></div><div class="section" title="向画板添加形状"><div class="titlepage"><div><div><h4 class="title"><a name="N12A63"></a>向画板添加形状</h4></div></div></div><p>
          根据你的项目的设置,现在你就能够很容易在画板中添加形状了.每个要添加的形状都是由JAR文件中
		  的类来描述的.注意这些类并不是Activiti 引擎在运行时使用的类.在扩展内描述的那些属性可以设
		  置给每个Activiti Designer 内的形状, you can also define the runtime characteristics that should be used by the engine
          when a process instance reaches the node in the process. The runtime characteristics can use any
          of the options that Activiti supports for regular <code class="literal">ServiceTask</code>s.
          See <a class="link" href="#eclipseDesignerConfiguringRuntime" title="配置运行时执行自定义服务任务">这一节</a> for more
          details.
        </p><p>一个形状的类就是添加了一些注解的普通Java 类.这个类必须实现 <code class="literal">CustomServiceTask</code>
		接口,但你不必自己实现这个接口.只需继承 <code class="literal">AbstractCustomServiceTask</code> 这个基类
		（目前,必须是直接继承这个类,中间不要有抽象类）.在这个类的Javadoc中你可以找到关于它所提供的
		默认设置以及何时需要重写它所实现了的方法的说明.重写让你做一些诸如为画板和画布上的形状提供
		图标（可以是不同的）、指定你想让节点（活动、事件、分支）拥有的基本形状的事情.
		</p><p>
          </p><pre class="prettyprint"><span class="com">/**<br>&nbsp;* @author John Doe<br>&nbsp;* @version 1<br>&nbsp;* @since 1.0.0<br>&nbsp;*/</span><span class="pln"><br></span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">AcmeMoneyTask</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">AbstractCustomServiceTask</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br></span><span class="pun">...</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
        </p><p>需要实现 <code class="literal">getName()</code> 方法来决定画板中节点使用的名称.也可以将节点放进
		一个属于它们自己的抽屉,并为其提供一个图标.重写 <code class="literal">AbstractCustomServiceTask</code>.
		中恰当的方法.如果你想要提供一个图标,确保图标在JAR中<code class="literal">src/main/resources</code> 包
		内,大小为16x16 像素,格式为JPEG 或PNG.提供的路径是相对于那个文件夹的.</p><p>给图形添加属性是通过向此类添加成员变量,并使用 <code class="literal">@Property</code> 注解对其
		进行注解来完成的,如下:</p><p>
          </p><pre class="prettyprint"><span class="lit">@Property</span><span class="pun">(</span><span class="pln">type </span><span class="pun">=</span><span class="pln"> </span><span class="typ">PropertyType</span><span class="pun">.</span><span class="pln">TEXT</span><span class="pun">,</span><span class="pln"> displayName </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Account Number"</span><span class="pun">)</span><span class="pln"><br></span><span class="lit">@Help</span><span class="pun">(</span><span class="pln">displayHelpShort </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Provide an account number"</span><span class="pun">,</span><span class="pln"> displayHelpLong </span><span class="pun">=</span><span class="pln"> HELP_ACCOUNT_NUMBER_LONG</span><span class="pun">)</span><span class="pln"><br></span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> accountNumber</span><span class="pun">;</span></pre><p>
        </p><p>有几个<code class="literal">PropertyType</code> 值你可以使用,在<a class="link" href="#eclipseDesignerPropertyTypes" title="属性的类型">这一节</a>.
          做详细介绍.通过将required 属性设置为true可以使字段成为必填项.如果用户不填写该字段,就会
		  有消息和红色背景显示.</p><p>如果要确保类中这些属性是它们在property 窗口出现的顺序，需要指定
            <code class="literal">@Property</code> 注解的order属性.
		</p><p>正如你所看到了,有个 <code class="literal">@Help</code> 注解用来在填写字段时给用户提供一些引导.
		也可以将<code class="literal">@Help</code> 注解用于类本身——这个信息会显示在呈现给用户的属性表的上方.</p><p>下面列出了对<code class="literal">MoneyTask</code>. 的详细阐述。添加了一个comments 字段,你会看
		到该节点包含了一个图标.</p><p>
          </p><pre class="prettyprint"><span class="com">/**<br>&nbsp;* @author John Doe<br>&nbsp;* @version 1<br>&nbsp;* @since 1.0.0<br>&nbsp;*/</span><span class="pln"><br></span><span class="lit">@Runtime</span><span class="pun">(</span><span class="pln">javaDelegateClass </span><span class="pun">=</span><span class="pln"> </span><span class="str">"org.acme.runtime.AcmeMoneyJavaDelegation"</span><span class="pun">)</span><span class="pln"><br></span><span class="lit">@Help</span><span class="pun">(</span><span class="pln">displayHelpShort </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Creates a new account"</span><span class="pun">,</span><span class="pln"> displayHelpLong </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Creates a new account using the account number specified"</span><span class="pun">)</span><span class="pln"><br></span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">AcmeMoneyTask</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">AbstractCustomServiceTask</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> HELP_ACCOUNT_NUMBER_LONG </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Provide a number that is suitable as an account number."</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Property</span><span class="pun">(</span><span class="pln">type </span><span class="pun">=</span><span class="pln"> </span><span class="typ">PropertyType</span><span class="pun">.</span><span class="pln">TEXT</span><span class="pun">,</span><span class="pln"> displayName </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Account Number"</span><span class="pun">,</span><span class="pln"> required </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="lit">@Help</span><span class="pun">(</span><span class="pln">displayHelpShort </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Provide an account number"</span><span class="pun">,</span><span class="pln"> displayHelpLong </span><span class="pun">=</span><span class="pln"> HELP_ACCOUNT_NUMBER_LONG</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> accountNumber</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Property</span><span class="pun">(</span><span class="pln">type </span><span class="pun">=</span><span class="pln"> </span><span class="typ">PropertyType</span><span class="pun">.</span><span class="pln">MULTILINE_TEXT</span><span class="pun">,</span><span class="pln"> displayName </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Comments"</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="lit">@Help</span><span class="pun">(</span><span class="pln">displayHelpShort </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Provide comments"</span><span class="pun">,</span><span class="pln"> displayHelpLong </span><span class="pun">=</span><span class="pln"> </span><span class="str">"You can add comments to the node to provide a brief description."</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> comments</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; </span><span class="com">/*<br>&nbsp; &nbsp;* (non-Javadoc)<br>&nbsp; &nbsp;*<br>&nbsp; &nbsp;* @see org.activiti.designer.integration.servicetask.AbstractCustomServiceTask #contributeToPaletteDrawer()<br>&nbsp; &nbsp;*/</span><span class="pln"><br>&nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> contributeToPaletteDrawer</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> </span><span class="str">"Acme Corporation"</span><span class="pun">;</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> getName</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> </span><span class="str">"Money node"</span><span class="pun">;</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; </span><span class="com">/*<br>&nbsp; &nbsp;* (non-Javadoc)<br>&nbsp; &nbsp;*<br>&nbsp; &nbsp;* @see org.activiti.designer.integration.servicetask.AbstractCustomServiceTask #getSmallIconPath()<br>&nbsp; &nbsp;*/</span><span class="pln"><br>&nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> getSmallIconPath</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> </span><span class="str">"icons/coins.png"</span><span class="pun">;</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
        </p><p>如果拿这个形状来扩展Activiti Designer,画板和对应的节点看起来会如此:</p><p>
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_013.png" align="middle"></div><p>
        </p><p>money任务的属性窗口显示如下.注意对于<code class="literal">accountNumber</code> 字段的必填信息.</p><p>
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_022.png" align="middle"></div><p>
        </p><p>
        	在使用过程变量的属性字段创建图表时,用户可输入静态文本或用表达式.如
        	(e.g. "This little piggy went to ${piggyLocation}"). 一般来说，这适用于文本字段，用户可以自由用于任何文本.如果希望用户使用表达式然后你申请运行期的行为给你的<code class="literal">CustomServiceTask</code> (使用 <code class="literal">@Runtime</code>),保在此种受拖类型中使用<code class="literal">Expression</code> 以便表达式在运行时能做正确解析.运行时行为的更多信息，可以在
        	<a class="link" href="#eclipseDesignerConfiguringRuntime" title="配置运行时执行自定义服务任务">this section</a>中找到.
        </p><p>每个属性右边的按钮给出了对于字段的帮助.点击按钮显示弹出框,如下显示的.</p><p>
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_024.png" align="middle"></div><p>
        </p><div class="section" title="配置运行时执行自定义服务任务"><div class="titlepage"><div><div><h5 class="title"><a name="eclipseDesignerConfiguringRuntime"></a>配置运行时执行自定义服务任务</h5></div></div></div><p>
      			你的字段设置及扩展适用于设计者,用户在建模过程中可以配置服务任务的属性,在大多数情况下,你会在Activiti的执行进程时想要使用用户配置的属性.要做到这一点,当进程达到<code class="literal">CustomServiceTask</code>时,必须指示出Activiti的其中的一类实例.
      		</p><p>
      			有一个特殊的注解来指定运行时<code class="literal">CustomServiceTask</code>的特点，<code class="literal">@Runtime</code>标注.如例:
      		</p><pre class="prettyprint"><span class="lit">@Runtime</span><span class="pun">(</span><span class="pln">javaDelegateClass </span><span class="pun">=</span><span class="pln"> </span><span class="str">"org.acme.runtime.AcmeMoneyJavaDelegation"</span><span class="pun">)</span></pre><p>
			你的 <code class="literal">CustomServiceTask</code> 将使一个正常的<code class="literal">ServiceTask</code>在BPMN建模过程中输出。 Activiti的使<a class="link" href="#bpmnJavaServiceTask" title="Java服务任务">several ways</a>来定义<code class="literal">ServiceTask</code>运行时的特征。因此，<code class="literal">@Runtime</code>标注可以采取三个属性之一，它可直接匹配Activiti的选项，如下：

            </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                  <code class="literal">javaDelegateClass</code>映射到<code class="literal">activiti:class</code> 在BPMN输出。实现<code class="literal">JavaDelegate</code>一类的完全限定类名.
                </p></li><li class="listitem"><p>
                  <code class="literal">expression</code>映射到<code class="literal">activiti:expression</code> 在BPMN输出. 指定表达式的方法被执行,就如Spring Bean的方法. 使用此选项时,您应该您应该<span class="emphasis"><em>not</em></span> 指定任何 <code class="literal">@Property</code>
                  注解字段.欲知详情, 请参下文.
                </p></li><li class="listitem"><p>
                  <code class="literal">javaDelegateExpression</code> 映射到 <code class="literal">activiti:delegateExpression</code> 在BPMN中输出. 指定表达式<code class="literal">JavaDelegate</code>的类名.
                </p></li></ul></div><p>
          </p><p>
          		如果你的成员提供Activiti的注入运行时类,用户的属性值将被注入进去.名称应与成员在<code class="literal">CustomServiceTask</code>里的名称相匹配,欲了解更多信息,请参考用户手册中的<a class="link" href="#serviceTaskFieldInjection" title="属性注入">this part</a>.请注意,因为5.11.0版本的设计者可以用<code class="literal">Expression</code>界面给动态字段值.这意味着,此设计属性的价值必须包含一个表达式,这个表达式将在实施<code class="literal">JavaDelegate</code> 类别时被注入<code class="literal">Expression</code>

          	</p><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>
                你可在你<code class="literal">CustomServiceTask</code>的成员中使用<code class="literal">@Property</code> 注解,如果你使用<code class="literal">@Runtime</code>'s <code class="literal">expression</code>属性运行,将无法正常工作.原因是Activiti会试图解决<span class="emphasis"><em>method</em></span> 而不是一个类别.因此,任何成员打上<code class="literal">@Property</code> 都会被设计者忽略,如果你使用的<code class="literal">expression</code>  <code class="literal">@Runtime</code>标注.设计师不会使它们作为节点的属性窗格中的可编辑字段,在进程的BPMN的属性将不会产生输出.
              </p></div><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>
				注意运行时类不应该在您的扩展JAR,因为它依赖于Activiti库.Activiti需要在运行时能够找到它,所以它需要在Activiti引擎的类路径.

              </p></div><p>

				设计师的源代码树中包含不同选择的项目配置<code class="literal">@Runtime</code>的例子。看一看money-tasks项目的一些出发点，它涉及到以钱为代表的项目类别的例子.
            </p></div></div><div class="section" title="属性的类型"><div class="titlepage"><div><div><h4 class="title"><a name="eclipseDesignerPropertyTypes"></a>属性的类型</h4></div></div></div><p>本节描述属性的类型,通过<code class="literal">CustomServiceTask</code>的type 属性设置为一个
            <code class="literal">PropertyType</code>值,可以将其用于自定义服务任务.</p><div class="section" title="PropertyType.TEXT"><div class="titlepage"><div><div><h5 class="title"><a name="N12B70"></a>PropertyType.TEXT</h5></div></div></div><p>如下所示,创建一个单行文本域.可以是必填项,其验证信息以提示框的方式显示.通过将域的
		  背景颜色改为淡红色来显示验证失败.</p><p>
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_034.png" align="middle"></div><p>
          </p><p>
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_033.png" align="middle"></div><p>
          </p></div><div class="section" title="PropertyType.MULTILINE_TEXT"><div class="titlepage"><div><div><h5 class="title"><a name="N12B85"></a>PropertyType.MULTILINE_TEXT</h5></div></div></div><p>如下所示,创建多行文本域（高度固定为80个像素）.可以是必填项,其验证信息以提示框的
		  方式显示.通过将域的背景颜色改为淡红色来显示验证失败.</p><p>
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_041.png" align="middle"></div><p>
          </p><p>
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_023.png" align="middle"></div><p>
          </p></div><div class="section" title="PropertyType.PERIOD"><div class="titlepage"><div><div><h5 class="title"><a name="N12B9A"></a>PropertyType.PERIOD</h5></div></div></div><p>创建结构化的编辑器,使用微调控件编辑每个单位数量来确定一段时间.结果如下所示.
		  可以是必填项（理解为不是所有值都为0,时间至少要有1部分是非零值）,其验证信息以提示
		  框的方式显示.通过将域的背景颜色改为淡红色来显示验证失败.该字段的值是以格式为
		  1y 2mo 3w  4d 5h 6m 7s 的字符串进行存储的，表示1年,2个月,3个星期,4天,5小时,6分钟,7 秒.
		  整个字符串都将被存储,即使有的部分是0.</p><p>
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_026.png" align="middle"></div><p>
          </p><p>
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_037.png" align="middle"></div><p>
          </p></div><div class="section" title="PropertyType.BOOLEAN_CHOICE"><div class="titlepage"><div><div><h5 class="title"><a name="N12BAF"></a>PropertyType.BOOLEAN_CHOICE</h5></div></div></div><p>创建单个复选框来控制布尔逻辑或切换选择.注意你可以指定<code class="literal">Property</code>
		  注解的 <code class="literal">required</code> 属性,但它不会被计算,因为那会使用户不得选择,不管
		  是不是选中了选择框.图形存储的值是java.lang.Boolean.toString(boolean) ,其结果是"true"
		  或"false".</p><p>
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_031.png" align="middle"></div><p>
          </p></div><div class="section" title="PropertyType.RADIO_CHOICE"><div class="titlepage"><div><div><h5 class="title"><a name="N12BC2"></a>PropertyType.RADIO_CHOICE</h5></div></div></div><p>如下所示,创建一组单选按钮.选择任一单选按钮与选择任一其它单选按钮都是排斥的
		  （即,只允许选择一个）.可以是必填项,其验证信息以提示框的方式显示.通过将这一组的背
		  景颜色改为淡红色来显示验证失败.</p><p>这个属性类型要求注解的类的成员还要有<code class="literal">@PropertyItems</code>
		  注解（例子,如下）.利用这个额外的注解,你可以指定以字符串数组来提供的项目列表.通过
		  为每个项目添加两个数组项来制定这些项目;第一个是要显示的标题;第二个是要存储的值.
		  </p><p>
            </p><pre class="prettyprint"><span class="lit">@Property</span><span class="pun">(</span><span class="pln">type </span><span class="pun">=</span><span class="pln"> </span><span class="typ">PropertyType</span><span class="pun">.</span><span class="pln">RADIO_CHOICE</span><span class="pun">,</span><span class="pln"> displayName </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Withdrawl limit"</span><span class="pun">,</span><span class="pln"> required </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">)</span><span class="pln"><br></span><span class="lit">@Help</span><span class="pun">(</span><span class="pln">displayHelpShort </span><span class="pun">=</span><span class="pln"> </span><span class="str">"The maximum daily withdrawl amount "</span><span class="pun">,</span><span class="pln"> displayHelpLong </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Choose the maximum daily amount that can be withdrawn from the account."</span><span class="pun">)</span><span class="pln"><br></span><span class="lit">@PropertyItems</span><span class="pun">({</span><span class="pln"> LIMIT_LOW_LABEL</span><span class="pun">,</span><span class="pln"> LIMIT_LOW_VALUE</span><span class="pun">,</span><span class="pln"> LIMIT_MEDIUM_LABEL</span><span class="pun">,</span><span class="pln"> LIMIT_MEDIUM_VALUE</span><span class="pun">,</span><span class="pln"> LIMIT_HIGH_LABEL</span><span class="pun">,</span><span class="pln"> LIMIT_HIGH_VALUE </span><span class="pun">})</span><span class="pln"><br></span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> withdrawlLimit</span><span class="pun">;</span></pre><p>
          </p><p>
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_028.png" align="middle"></div><p>
          </p><p>
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_019.png" align="middle"></div><p>
          </p></div><div class="section" title="PropertyType.COMBOBOX_CHOICE"><div class="titlepage"><div><div><h5 class="title"><a name="N12BE1"></a>PropertyType.COMBOBOX_CHOICE</h5></div></div></div><p>如下所示,创建带有固定选项的下拉列表框.可以是必填项,其验证信息以提示框的方式显示.
		  通过将下拉列表框的背景颜色改为淡红色来显示验证失败.
		  </p><p>这个属性类型要求被注解的类的成员还要有 <code class="literal">@PropertyItems</code>
		  注解（例子,如下）.利用这个额外的注解,你可以指定以字符串数组来提供的项目列表.通过
		  为每个项目添加两个数组项来制定这些项目;第一个是要显示的标题;第二个是要存储的值.
		  </p><p>
            </p><pre class="prettyprint"><span class="lit">@Property</span><span class="pun">(</span><span class="pln">type </span><span class="pun">=</span><span class="pln"> </span><span class="typ">PropertyType</span><span class="pun">.</span><span class="pln">COMBOBOX_CHOICE</span><span class="pun">,</span><span class="pln"> displayName </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Account type"</span><span class="pun">,</span><span class="pln"> required </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">)</span><span class="pln"><br></span><span class="lit">@Help</span><span class="pun">(</span><span class="pln">displayHelpShort </span><span class="pun">=</span><span class="pln"> </span><span class="str">"The type of account"</span><span class="pun">,</span><span class="pln"> displayHelpLong </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Choose a type of account from the list of options"</span><span class="pun">)</span><span class="pln"><br></span><span class="lit">@PropertyItems</span><span class="pun">({</span><span class="pln"> ACCOUNT_TYPE_SAVINGS_LABEL</span><span class="pun">,</span><span class="pln"> ACCOUNT_TYPE_SAVINGS_VALUE</span><span class="pun">,</span><span class="pln"> ACCOUNT_TYPE_JUNIOR_LABEL</span><span class="pun">,</span><span class="pln"> ACCOUNT_TYPE_JUNIOR_VALUE</span><span class="pun">,</span><span class="pln"> ACCOUNT_TYPE_JOINT_LABEL</span><span class="pun">,</span><span class="pln"><br>&nbsp; ACCOUNT_TYPE_JOINT_VALUE</span><span class="pun">,</span><span class="pln"> ACCOUNT_TYPE_TRANSACTIONAL_LABEL</span><span class="pun">,</span><span class="pln"> ACCOUNT_TYPE_TRANSACTIONAL_VALUE</span><span class="pun">,</span><span class="pln"> ACCOUNT_TYPE_STUDENT_LABEL</span><span class="pun">,</span><span class="pln"> ACCOUNT_TYPE_STUDENT_VALUE</span><span class="pun">,</span><span class="pln"><br>&nbsp; ACCOUNT_TYPE_SENIOR_LABEL</span><span class="pun">,</span><span class="pln"> ACCOUNT_TYPE_SENIOR_VALUE </span><span class="pun">})</span><span class="pln"><br></span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> accountType</span><span class="pun">;</span></pre><p>
          </p><p>
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_036.png" align="middle"></div><p>
          </p><p>
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_039.png" align="middle"></div><p>
          </p></div><div class="section" title="PropertyType.DATE_PICKER"><div class="titlepage"><div><div><h5 class="title"><a name="N12C00"></a>PropertyType.DATE_PICKER</h5></div></div></div><p>如下所示,创建日期选择控件.可以是必填项,其验证信息以提示框的方式显示
		  （注意,使用的控件自动设置为选中系统日期，所以该值很少为空.通过将此控件的
		  背景颜色改为淡红色来显示验证失败.
		  </p><p>这个属性类型要求注解的类成员还要有<code class="literal">@DatePickerProperty</code>
		 注解（示例，见下文）.利用这个额外的注解,你可以指定图形中用于存储日期时间的模式,
		 以及你想要显示的日期选择器的类型.这两个属性都是可选的,并且如果不指定它们都会使
		 用默认值（它们是 <code class="literal">DatePickerProperty</code> 注解中的静态变量).
              <code class="literal">dateTimePattern</code>属性用来向
              <code class="literal">SimpleDateFormat</code> 类提供模式.在使用<code class="literal">swtStyle</code>
            属性时, 必须指定<code class="literal">SWT</code>的 <code class="literal">DateTime</code> 控件所支持的
			一个整数，因为正是使用这个控件来渲染这个属性类型的.
		</p><p>
            </p><pre class="prettyprint"><span class="lit">@Property</span><span class="pun">(</span><span class="pln">type </span><span class="pun">=</span><span class="pln"> </span><span class="typ">PropertyType</span><span class="pun">.</span><span class="pln">DATE_PICKER</span><span class="pun">,</span><span class="pln"> displayName </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Expiry date"</span><span class="pun">,</span><span class="pln"> required </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">)</span><span class="pln"><br></span><span class="lit">@Help</span><span class="pun">(</span><span class="pln">displayHelpShort </span><span class="pun">=</span><span class="pln"> </span><span class="str">"The date the account expires "</span><span class="pun">,</span><span class="pln"> displayHelpLong </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Choose the date when the account will expire if no extended before the date."</span><span class="pun">)</span><span class="pln"><br></span><span class="lit">@DatePickerProperty</span><span class="pun">(</span><span class="pln">dateTimePattern </span><span class="pun">=</span><span class="pln"> </span><span class="str">"MM-dd-yyyy"</span><span class="pun">,</span><span class="pln"> swtStyle </span><span class="pun">=</span><span class="pln"> </span><span class="lit">32</span><span class="pun">)</span><span class="pln"><br></span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> expiryDate</span><span class="pun">;</span></pre><p>
          </p><p>
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_038.png" align="middle"></div><p>
          </p></div><div class="section" title="PropertyType.DATA_GRID"><div class="titlepage"><div><div><h5 class="title"><a name="N12C29"></a>PropertyType.DATA_GRID</h5></div></div></div><p>如下所示,创建数据表格控件.数据表格允许用户输入任意多行数据,并为每一行的一
		  组固定列输入值（每个行和列交叉处称为单元格）.由用户来决定对行的添加、删除.
		  </p><p>这个属性类型要求注解的类成员还要有 <code class="literal">@DataGridProperty</code>
		  注解（示例,见下文）.利用这个附加注解,可以指定一些数据网格所特有的属性.需要使用
		  <code class="literal">itemClass</code> 属性引用一个类来决定哪些列要加入到表格. Activiti
            Designer 希望成员变量是List类型.习惯上,可以将 <code class="literal">itemClass</code>
			属性表示的类作为泛型类型来使用.例如,如果你要在表格中编辑一个购物单,你会在
			<code class="literal">GroceryListItem</code> 类上定义表格的列.在你的
              <code class="literal">CustomServiceTask</code>内,会想要它是像这样:</p><p>
            </p><pre class="prettyprint"><span class="lit">@Property</span><span class="pun">(</span><span class="pln">type </span><span class="pun">=</span><span class="pln"> </span><span class="typ">PropertyType</span><span class="pun">.</span><span class="pln">DATA_GRID</span><span class="pun">,</span><span class="pln"> displayName </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Grocery List"</span><span class="pun">)</span><span class="pln"><br></span><span class="lit">@DataGridProperty</span><span class="pun">(</span><span class="pln">itemClass </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GroceryListItem</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">)</span><span class="pln"><br></span><span class="kwd">private</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">GroceryListItem</span><span class="pun">&gt;</span><span class="pln"> groceryList</span><span class="pun">;</span></pre><p>
          </p><p>除了使用了数据表格,"itemClass"类使用的注解与你用来指定<code class="literal">CustomServiceTask</code>,
		    的域的注解是一样的.具体的,目前支持 <code class="literal">TEXT</code>, <code class="literal">MULTILINE_TEXT</code>
            以及<code class="literal">PERIOD</code> 你会注意到表格会为每个域创建一个单行的文本控件,不管其
              <code class="literal">PropertyType</code>. 是什么类型.这是为了保持表格的图形吸引力和可读性.
			  例如,如果你想要以正常的显示模式显示<code class="literal">PERIOD</code>类型的
            <code class="literal">PropertyType</code>,你能想象的到在不搞乱屏幕的情况下它是永远也不会适合于
			单元格的（译注.言外之意,必然会搞乱屏幕）,对于<code class="literal">MULTILINE_TEXT</code>
            和 <code class="literal">PERIOD</code>, 添加在每个域上的双击机制都会弹出一个大的
			<code class="literal">PropertyType</code>.编辑器。用户点击OK后，值被存储到域内，因此它能在表格中被看到.
		  </p><p>必填属性的处理类似于处理<code class="literal">TEXT</code> 类型的普通域,整个表格在任意域失去焦点时
		  被校验.如果校验失败，数据表格中特定单元格的文本控件的背景颜色会变为浅红.
		  </p><p>默认,该组件允许用户添加行,但不允许决定这些行的顺序.如果想要对此允许,必须将
              <code class="literal">orderable</code> 属性设置为true ，这就能让每行末尾的按钮在表格内上下移动.
			  </p><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>此刻,这个属性类型还没被正确注入在运行时的类中.</p></div><p>
			</p><p>
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_017.png" align="middle"></div><p>
          </p></div></div><div class="section" title="禁用画板中默认形状"><div class="titlepage"><div><div><h4 class="title"><a name="N12C7A"></a>禁用画板中默认形状</h4></div></div></div><p>这个定制需要在扩展中包含一个实现了 <code class="literal">DefaultPaletteCustomizer</code>接口的类.
		  不要直接实现这个接口,需要创建 <code class="literal">AbstractDefaultPaletteCustomizer</code>
          这个基类的子类.目前,这个类没提供任何功能,但<code class="literal">DefaultPaletteCustomizer</code>
		  接口今后的版本会提供更多的能力让这个基类拥有一些合理的默认行为,所以最好继承,这样你的
		  扩展会兼容将来的发布. </p><p>继承 <code class="literal">AbstractDefaultPaletteCustomizer</code> 类需要你实现方法
		<code class="literal">disablePaletteEntries()</code>, 此方法必须返回一个 <code class="literal">PaletteEntry</code>
		的列表.对于每个默认的形状,通过将它对应的 <code class="literal">PaletteEntry</code> 值添加到你的列表中
		可以将其禁掉.注意如果你移除了默认集合中的形状,抽屉内没有剩余的形状了,那么那个抽屉整个就会
		从画板中被移除.如果你希望禁掉所有默认形状,只需将<code class="literal">PaletteEntry.ALL</code> 添加到你
		的结果中.如例子,以下代码禁掉了画板中的手工任务和脚本任务形状.</p><p>
          </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">MyPaletteCustomizer</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">AbstractDefaultPaletteCustomizer</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="com">/*<br>&nbsp; &nbsp;* (non-Javadoc)<br>&nbsp; &nbsp;*<br>&nbsp; &nbsp;* @see org.activiti.designer.integration.palette.DefaultPaletteCustomizer#disablePaletteEntries()<br>&nbsp; &nbsp;*/</span><span class="pln"><br>&nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">PaletteEntry</span><span class="pun">&gt;</span><span class="pln"> disablePaletteEntries</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">PaletteEntry</span><span class="pun">&gt;</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayList</span><span class="pun">&lt;</span><span class="typ">PaletteEntry</span><span class="pun">&gt;();</span><span class="pln"><br>&nbsp; &nbsp; result</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="typ">PaletteEntry</span><span class="pun">.</span><span class="pln">MANUAL_TASK</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; result</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="typ">PaletteEntry</span><span class="pun">.</span><span class="pln">SCRIPT_TASK</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> result</span><span class="pun">;</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span></pre><p>
        </p><p>应用这个扩展的结果显示为如下图片.正如你看到的,手工任务和脚本任务形状不再在
            <code class="literal">Tasks</code> 抽屉中了.</p><p>
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_027.png" align="middle"></div><p>
        </p><p>要想禁掉所有默认的形状,可以使用类似于如下的代码.</p><p>
          </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">MyPaletteCustomizer</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">AbstractDefaultPaletteCustomizer</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="com">/*<br>&nbsp; &nbsp;* (non-Javadoc)<br>&nbsp; &nbsp;*<br>&nbsp; &nbsp;* @see org.activiti.designer.integration.palette.DefaultPaletteCustomizer#disablePaletteEntries()<br>&nbsp; &nbsp;*/</span><span class="pln"><br>&nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">PaletteEntry</span><span class="pun">&gt;</span><span class="pln"> disablePaletteEntries</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">PaletteEntry</span><span class="pun">&gt;</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayList</span><span class="pun">&lt;</span><span class="typ">PaletteEntry</span><span class="pun">&gt;();</span><span class="pln"><br>&nbsp; &nbsp; result</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="typ">PaletteEntry</span><span class="pun">.</span><span class="pln">ALL</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> result</span><span class="pun">;</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span></pre><p>
        </p><p>结果看起来就像这样（注意默认形状的那些抽屉不再显示在画板中了）:</p><p>
          </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/designer_002.png" align="middle"></div><p>
        </p></div></div><div class="section" title="校验图形和导出到自定义的输出格式"><div class="titlepage"><div><div><h3 class="title"><a name="N12CBC"></a>校验图形和导出到自定义的输出格式</h3></div></div></div><p>除了定制画板,你还可以给Activiti Designer创建能执行校验、将来自图形的信息保存到
	  Eclipse工作空间内的自定义资源的扩展.对此有内置扩展点,本节说明如何使用这些扩展点.
	  </p><p>
        	</p><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>
					最近重新使用了ExportMarshaller。我们仍然在开发校验相关的功能。
					下面的文档介绍的是老方案，
					一旦新功能完成，就会更新。
        		</p></div><p>
        </p><p>Activiti Designer允许编写校验图形的扩展.默认工具中已经存在BPMN 构造的校验了,但
	  如果你想要对更多项进行校验,比如建模约定或 <code class="literal">CustomServiceTask</code>属性中
	  的值,这时你就可以添加自己的校验了.这样的扩展被称为<code class="literal">Process Validators</code>
	  (流程校验器).
	  </p><p>你也可以让Activiti Designer在保存图形时公布一些额外的格式。这样的扩展被称为
	  <code class="literal">Export Marshallers</code>(输出装配器),每次用户保存时都会由Activiti Designer
	  自动调用。通过在Eclipse 设置对话框来启用或禁用这一个行为，这会对扩展进行检测。
	  Designer会确保在保存图片时，根据用户的配置来调用<code class="literal">ExportMarshaller</code>。
	  </p><p>通常, 会想将<code class="literal">ProcessValidator</code>和<code class="literal">ExportMarshaller</code>
	    进行联合.假如你有几个<code class="literal">CustomServiceTask</code>在用,其属性你想要在生
	    成的流程中使用.然而,在流程产生出来之前,你想首先校验其中一些值.结合<code class="literal">ProcessValidator</code>
		和 <code class="literal">ExportMarshaller</code>是完成这的最好方法，Activiti Designer 能够
		将你的扩展无缝隙地插入到这一工具内.
	  </p><p>要创建 <code class="literal">ProcessValidator</code>和 <code class="literal">ExportMarshaller</code>,
	    需要创建与扩展画板所不同的扩展。原因很简单：在你的代码中，需要访问更多由集成类库提
		供的API.特别是,你会使用Eclipse本身中的类.所以要开始,必须先创建一个Eclipse插件（利用
		Eclipse对PDE的支持来完成）,然后将它打包在一个自定义的Eclipse产品或特性中.解释
		开发Eclipse插件的所涉及的所有详细信息超出了本用户指南的范畴,所以以下说明只局限于
		扩展Activiti Designer功能.
	  </p><p>你的模块必须依赖以下类库:</p><p>
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem">org.eclipse.core.runtime</li><li class="listitem">org.eclipse.core.resources</li><li class="listitem">org.activiti.designer.eclipse</li><li class="listitem">org.activiti.designer.libs</li><li class="listitem">org.activiti.designer.util</li></ul></div><p>
      </p><p>
	    另外，Designer中也可以使用org.apache.commons.lang，你可以根据需要在自己的扩展中使用。
      </p><p><code class="literal">ProcessValidator</code>和<code class="literal">ExportMarshaller</code>都是通过
	    继承基础类来创建的.这些基础类从其超类 <code class="literal">AbstractDiagramWorker</code>那里继
		承了一些很有用的方法.利用这些方法可以创建显示在Eclipse中problems视图内帮助用户找出问
		题或要点的消息、警告以及错误标记。也可以通过<code class="literal">Resources</code>和<code class="literal">InputStreams</code>
		获得图形的内容。这些信息保存在<code class="literal">DiagramWorkerContext</code>，
		由<code class="literal">AbstractDiagramWorker</code>提供。
		</p><p>把调用<code class="literal">clearMarkers()</code>作为在<code class="literal">ProcessValidator</code>
	    或<code class="literal">ExportMarshaller</code>内的第一件要做的事可能会是个好主意;这将清理掉所
        有之前操作人员的标记（标记自动链接到操作人员，清除一个操作人员的标记不会影响到其它
		标记）.例如  :</p><p>
        </p><pre class="prettyprint"><span class="com">// Clear markers for this diagram first</span><span class="pln"><br>clearMarkersForDiagram</span><span class="pun">();</span></pre><p>
      </p><p>你还应该利用进度监控将进度情况报告给用户（在<code class="literal">DiagramWorkerContext</code>中），因为校验和/或装配行为都会占用一些时间,
		  在此期间用户被迫等待.报告进度的情况需要一些关于如何使用Eclipse 特性的知识.仔细看
		  一下 <a class="ulink" href="http://www.eclipse.org/articles/Article-Progress-Monitors/article.html" target="_top">
		  这篇</a> 深入解释了概念和用法的文章.</p><div class="section" title="创建ProcessValidator扩展"><div class="titlepage"><div><div><h4 class="title"><a name="N12D31"></a>创建ProcessValidator扩展</h4></div></div></div><p>
        	</p><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>需要复审！</p></div><p>
        </p><p>在<code class="literal">plugin.xml</code>文件内给
		<code class="literal">org.activiti.designer.eclipse.extension.validation.ProcessValidator</code>
		扩展点创建扩展.需要为此扩展点创建<code class="literal">AbstractProcessValidator</code>类的子类.
		</p><p>
          </p><pre class="prettyprint"><span class="pun">&lt;?</span><span class="pln">eclipse version</span><span class="pun">=</span><span class="str">"3.6"</span><span class="pun">?&gt;</span><span class="pln"><br></span><span class="tag">&lt;plugin&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extension</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">point</span><span class="pun">=</span><span class="atv">"org.activiti.designer.eclipse.extension.validation.ProcessValidator"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;ProcessValidator</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.acme.validation.AcmeProcessValidator"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/ProcessValidator&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extension&gt;</span><span class="pln"><br></span><span class="tag">&lt;/plugin&gt;</span></pre><p>
          </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">AcmeProcessValidator</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">AbstractProcessValidator</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
        </p><p>必须实现几个方法.最重要的是,实现<code class="literal">getValidatorId()</code>,为你的校验器
		返回一个全局唯一的ID。这让你能在 <code class="literal">ExportMarshaller</code>内对其进行调用,甚至
		可以让其他人在他们的<code class="literal">ExportMarshaller</code>内调用你的校验器.实现
		<code class="literal">getValidatorName()</code>，返回校验器的逻辑名.这个名称在对话框中显示给用户.
		在<code class="literal">getFormatName()</code>中,可以返回校验器通常校验的图形的类型.
		</p><p>校验本身是在<code class="literal">validateDiagram()</code>方法内进行的.以此来看,根据你的具
		体功能在这里放什么样的代码.但通常在开始你会取得图形的流程节点,这样你就可以循环遍历它
		们,收集、对比并校验数据.本代码片段展示给你如何进行这些操作:</p><p>
          </p><pre class="prettyprint"><span class="kwd">final</span><span class="pln"> </span><span class="typ">EList</span><span class="pun">&lt;</span><span class="typ">EObject</span><span class="pun">&gt;</span><span class="pln"> contents </span><span class="pun">=</span><span class="pln"> getResourceForDiagram</span><span class="pun">(</span><span class="pln">diagram</span><span class="pun">).</span><span class="pln">getContents</span><span class="pun">();</span><span class="pln"><br></span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">final</span><span class="pln"> </span><span class="typ">EObject</span><span class="pln"> </span><span class="kwd">object</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> contents</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">object</span><span class="pln"> </span><span class="kwd">instanceof</span><span class="pln"> </span><span class="typ">StartEvent</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="com">// Perform some validations for StartEvents</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="com">// Other node types and validations</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
        </p><p>在你完成校验后,不要忘记调用<code class="literal">addProblemToDiagram()</code>和/或
		<code class="literal">addWarningToDiagram()</code>,等等.务必最后返回正确的布尔类型的结果值来表明
		你考虑的校验是成功还是失败.这个结果可以被调用<code class="literal">ExportMarshaller</code>
		使用来决定下一步操作.
		</p></div><div class="section" title="创建ExportMarshaller扩展"><div class="titlepage"><div><div><h4 class="title"><a name="N12D73"></a>创建ExportMarshaller扩展</h4></div></div></div><p>在<code class="literal">plugin.xml</code>文件内给
		<code class="literal">org.activiti.designer.eclipse.extension.ExportMarshaller</code>
		扩展点创建扩展.需要为此扩展点创建<code class="literal">AbstractExportMarshaller</code> 类的子类.
		这个抽象基类提供了在编组到你自己格式时所使用的几个有用的方法，但最重要的是它允许你
		将资源保存到工作空间内，还允许调用校验器.</p><p>
		    在Designer的examples目录下有一个示例。这个例子演示了如何使用基础类中的方法实现基本功能，
			比如访问图形的<code class="literal">InputStream</code>，
			使用<code class="literal">BpmnModel</code>，并将资源保存到工作区中。
          </p><p>
          </p><pre class="prettyprint"><span class="pun">&lt;?</span><span class="pln">eclipse version</span><span class="pun">=</span><span class="str">"3.6"</span><span class="pun">?&gt;</span><span class="pln"><br></span><span class="tag">&lt;plugin&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extension</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">point</span><span class="pun">=</span><span class="atv">"org.activiti.designer.eclipse.extension.ExportMarshaller"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;ExportMarshaller</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.acme.export.AcmeExportMarshaller"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/ExportMarshaller&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extension&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/plugin&gt;</span></pre><p>
          </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">AcmeExportMarshaller</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">AbstractExportMarshaller</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
        </p><p>需要你来实现某些方法，如<code class="literal">getMarshallerName()</code>及<code class="literal">getFormatName()</code>.
		这些方法用来向用户显示选项以及在进度对话框中显示信息,因此要确保你所描述的能表达出你实现的功能.
		</p><p>大部分你的工作是在 <code class="literal">doMarshallDiagram()方法</code>完成的。</p><p>如果想先执行某个校验,可以直接在你的装配器内调用校验器.从校验器接收到一个布尔类型的结果值,
		这样你就能知道校验是否成功.大多数情况下,如果校验无效是不会对图形进行编组的,但你也可以选择继续,
		甚至校验失败后,创建一个不同的资源。
		</p><p>一旦获得了所有你所需要的数据,就可以调用<code class="literal">saveResource()</code>方法来创建包含着
		你的数据的文件了.可以在单个<span class="markup">ExportMarshaller</span>内多次调用<code class="literal">saveResource()</code>,
		所以装配器可用来创建多个输出文件.</p><p>利用<code class="literal">AbstractDiagramWorker</code>类中<code class="literal">saveResource()</code>方法可以给输出的资源构造文件名。
		有几个你已经解析过了的有用的变量，允许你来创建像_original-filename__my-format-name.xml 的文件名。
		Javadocs 内有对这些变量的描述，<code class="literal">ExportMarshaller</code>接口中也做了定义。
		你也可以使用<code class="literal">resolvePlaceholders()</code>处理一个string（比如，一个路径），如果你想自己解析占位符。
		<code class="literal">getURIRelativeToDiagram()</code>会帮你做这些事情。</p><p>你应该利用进度监控将进度情况报告给用户<a class="ulink" href="http://www.eclipse.org/articles/Article-Progress-Monitors/article.html" target="_top">这篇文章</a>描述了如何来完成.</p></div></div></div></div><div class="chapter" title="Chapter&nbsp;13.&nbsp;Activiti Explorer"><div class="titlepage"><div><div><h2 class="title"><a name="activitiExplorer"></a>Chapter&nbsp;13.&nbsp;Activiti Explorer</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#N12DF2">流程图</a></span></dt><dt><span class="section"><a href="#N12E0E">任务</a></span></dt><dt><span class="section"><a href="#N12E3E">启动流程实例</a></span></dt><dt><span class="section"><a href="#N12E51">我的流程实例</a></span></dt><dt><span class="section"><a href="#N12E60">管理</a></span></dt><dt><span class="section"><a href="#explorer.reporting">报表</a></span></dt><dd><dl><dt><span class="section"><a href="#explorer.reporting.json">报告数据JSON</a></span></dt><dt><span class="section"><a href="#explorer.reporting.example">实例流程</a></span></dt><dt><span class="section"><a href="#explorer.reporting.start.form">报告开始表单</a></span></dt><dt><span class="section"><a href="#explorer.reporting.examples">流程例子</a></span></dt></dl></dd><dt><span class="section"><a href="#explorer.change.database">修改数据库</a></span></dt></dl></div><p>
	Activiti Explorer，我习惯称之为Activiti控制台，后面也这么翻译。Activiti控制台是一个web应用程序，当我们从Activiti的官方网站下载Activiti的压缩zip文件时候，Activiti控制台在${Activiti_home}/wars文件夹下面。该控制台的目的并不是创建一个完善的web应用程序，仅仅是为客户端用户准备的应用程序，但是却能够练习和展示Activiti的功能。正如这样，控制台仅仅只是一个Demo，
	可能有人会使用该控制台集成到他们自己的系统之中。另外，对于该控制台，我们使用了一个内存数据库，也很容易换成你自己的数据库（查看WEB-INF文件夹下面的applicationContext.xml文件）。
  </p><p>
	随后，登录进该控制台，你将会看见四个比较大的图标按钮用于显示主要功能。
    </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/explorer_009.png" align="middle"></div><p>
    </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
          <span class="bold"><strong>Tasks</strong></span>: 任务管理功能。
		  这里，如果你是办理人，你可以看见运行中流程实例的自己的待办任务，或者你可以拾取组任务。
		  控制台涉及的功能，子任务的工作，不同角色的人，等等...控制台也可以允许创建一个独立的任务，该任务并没有关联任何流程实例。
        </p></li><li class="listitem"><p>
          <span class="bold"><strong>Process</strong></span>:
		  显示部署的流程定义列表，并且可以启动一个新的流程实例。
        </p></li><li class="listitem"><p>
          <span class="bold"><strong>Reporting</strong></span>:
		  生成报表和显示之前保存历史的结果数据。查看<a class="link" href="#explorer.reporting" title="报表">报表这一节</a>可以获取更多的信息。
		</p></li><li class="listitem"><p>
          <span class="bold"><strong>Manage</strong></span>:
		  当登录的用户具有超级管理员权限才能够看见。用于管理Activiti的流程引擎：管理用于和组，执行和查看停止的jobs，查看数据库和部署新的流程定义。
        </p></li></ul></div><p>
  </p><div class="section" title="流程图"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N12DF2"></a>流程图</h2></div></div></div><p>
	  控制台包含的功能，使用<a class="ulink" href="http://raphaeljs.com/" target="_top">Raphaël</a>Javascript框架自动生成一张流程图。
	  当流程定义XML包含的BPMN注入信息时。该流程图才能够生成。当流程定义XML中并没有BPMN注入信息但是部署的时候包含一张流程图，那么该图片也将会被显示。
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/explorer_005.png" align="middle"></div><p>
    </p><p>
	  当你并不想使用Javascript生成流程图，你可以在ui.properties文件中禁用它。
      </p><pre class="prettyprint"><span class="pln">activiti</span><span class="pun">.</span><span class="pln">ui</span><span class="pun">.</span><span class="pln">jsdiagram </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">false</span></pre><p>
    </p><p>
		除了在控制台上面显示流程图，控制台也会很容易的包含你想要查看的流程图。
		下面的URL将会显示流程定义图片，根据留存定义的ID：
      </p><pre class="prettyprint"><span class="pln">http</span><span class="pun">:</span><span class="com">//localhost:8080/activiti-explorer/diagram-viewer/index.html?processDefinitionId=reviewSaledLead:1:36</span></pre><p>
	   它也可以显示当前流程实例的状态，通过添加一个processInstanceId的请求参数，如下:
      </p><pre class="prettyprint"><span class="pln">http</span><span class="pun">:</span><span class="com">//localhost:8080/activiti-explorer/diagram-viewer/index.html?processDefinitionId=reviewSaledLead:1:36&amp;processInstanceId=41</span></pre><p>
    </p></div><div class="section" title="任务"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N12E0E"></a>任务</h2></div></div></div><p>
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/explorer_006.png" align="middle"></div><p>
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>Inbox:</strong></span>
			显示登录用户需要办理的所有任务列表。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>My tasks:</strong></span>
			显示登录用户任务拥有者的任务列表。当你创建一个独立的任务，你可以自动化操作该任务。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>Queued:</strong></span>
			显示不用的组任务列表，并且登录用户在该组中。这里的所有任务都必须先拾取然后才能够完成。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>Involved:</strong></span>
			显示登录用户被参与的任务（即不是办理人和任务拥有者）。
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>归档</strong></span>包含已经完成的（历史的）任务。
          </p></li></ul></div><p>
    </p></div><div class="section" title="启动流程实例"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N12E3E"></a>启动流程实例</h2></div></div></div><p>
		在<span class="bold"><strong>流程定义</strong></span>选项卡，允许你查看Activiti流程引擎部署的所有流程定义。你可以使用页面顶部右边的按钮启动一个新的流程实例。如果该流程定义有一个启动<a class="link" href="#forms" title="Chapter&nbsp;9.&nbsp;表单">表单</a>，
		那么在启动流程实例之前就先显示表单。
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/explorer_011.png" align="middle"></div><p>
    </p></div><div class="section" title="我的流程实例"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N12E51"></a>我的流程实例</h2></div></div></div><p>
		在<span class="bold"><strong>我的流程</strong></span> 选项卡，显示当前登录用户未完成的用户任务的所有流程实例。这也很直观的显示了流程实例的当前活动和存储的流程变量。
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/explorer_013.png" align="middle"></div><p>
    </p></div><div class="section" title="管理"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N12E60"></a>管理</h2></div></div></div><p>
	  在管理功能中，只有当登录用户只权限组<span class="emphasis"><em>admin</em></span>中的成员时，该功能才会显示。当点击 <span class="emphasis"><em>Manage</em></span> 图标按钮，提供以下选项列表
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>数据库:</strong></span>
			在数据库中显示Activiti有关内容.当开发流程或者排除故障等问题的时候是非常有用的。
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/explorer_010.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>部署：</strong></span>
			显示当前流程引擎的部署，并且可以看见部署的内容（流程定义，流程图，业务规则，等等...）
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/explorer_004.png" align="middle"></div><p>
			当你点击 <span class="emphasis"><em>部署</em></span> 按钮时，你也可以上传新的部署。从自己的计算机中选择一个业务文档或者一个BPMN20.XML文件，或者简单的拖拽到指定的区域就可以部署一个新的业务流程。
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/explorer.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>Jobs（作业）:</strong></span>
			在左边显示当前的作业（定时器，等等）并且运行手动执行他们（例如在截止时间之前触发定时器）。如果作业执行失败（例如邮件服务器不能正常工作），那么就会显示所有的异常。
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/explorer_002.png" align="middle"></div><p>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>用户和组</strong></span>
			管理用户和组：创建，修改和删除用户和组。关联用户和组，这样他们就会有更多的权限或者他们能够看见在任务分配给特地的组。
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/explorer_008.png" align="middle"></div><p>
          </p></li></ul></div><p>

    </p></div><div class="section" title="报表"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="explorer.reporting"></a>报表</h2></div></div></div><p>
		控制台附带了一些报表例子并且有能力很轻松的在系统中添加新的报表。 报表功能是位于主功能中的<span class="emphasis"><em>'报表'</em></span>按钮。
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/explorer_007.png" align="middle"></div><p>
      <span class="bold"><strong>重要</strong></span>:
	  如果要让报表工作，控制台需要配置历史的级别不能够没有。这默认的配置是满足这一要求的。
    </p><p>
		目前，该报表选项卡会显示2个子选项卡：

        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                    <span class="bold"><strong>生成报表</strong></span>:
					显示系统中已知的报表列表。允许运行生成的报表。
                </p></li><li class="listitem"><p>
                    <span class="bold"><strong>保存报表</strong></span>:
					显示之前保存的所有报表列表。注意，这里仅仅显示的是个人保存的报表，并且不能看见其他人保存的报表。
                </p></li></ul></div><p>
    </p><p>
		流程的数据被用于生成报表中的列表和图标。第一次看上去可能会很奇怪，使用流程生成报表数据有几个优势。
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
				该流程能够直接访问Activiti流程引擎的内部。他直接可以使用流程引擎访问数据库.
            </p></li><li class="listitem"><p>
				作业执行器能够用于任何其他的流程。这意味着你能够异步生存流程或者仅仅异步执行某些步骤。这也意味着你可以使用定时器，例如在某些时间点上面生成报表数据。
            </p></li><li class="listitem"><p>
				可以用已知的工具和已知的概念创建一个新的报表。同时，没有新的概念，服务或者应用被需要。部署或者上传一个新的报表与部署一个新的流程是一样的。
            </p></li><li class="listitem"><p>
				它可以使用BPMN2.0结构。这意味着所有的东西，比如并行网关，
				可以实现基于数据或用户请求输入生成分支。
            </p></li></ul></div><p>

	  生成报表数据的流程定义需要<span class="bold"><strong>把'activiti-report'设置为分类</strong></span>，
	  这样就能在Explorer的报表列表中显示出来。报表流程可繁可简。
	  能够看到报表的唯一要求是，流程会创建一个名为<span class="bold"><strong>reportData</strong></span>的流程变量。
	  这个变量必须是json对象的二进制数组。
	  这个变量必须保存到Activiti的历史表中
	  （所以要求引擎必须启用历史功能）
	  所以可以在后面报表保存时获取。
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/explorer_003.png" align="middle"></div><p>
    </p><div class="section" title="报告数据JSON"><div class="titlepage"><div><div><h3 class="title"><a name="explorer.reporting.json"></a>报告数据JSON</h3></div></div></div><p>
		  报表流程必须生成一个变量<span class="emphasis"><em>reportData</em></span>，这是一个要展现给用户的JSON数据。
		  这个json看起来像这样：
          </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"title"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"My Report"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"datasets"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"lineChart"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"description"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"My first chart"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"xaxis"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Year"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"yaxis"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Total sales"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"data"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"2010"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">50</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"2011"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">33</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"2012"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">17</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"2013"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">87</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		  json数据会在Explorer中获取，并用来生成图表或列表。
		  json的元素为：
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><span class="bold"><strong>title</strong></span>：这个报表的标题</p></li><li class="listitem"><p><span class="bold"><strong>datasets</strong></span>：是数据集的数组，对应报表中不同的图表和列表。</p></li><li class="listitem"><p><span class="bold"><strong>type</strong></span>每个数据集都有一个类型。
				这个类型会用来决定如何渲染数据。当前支持的值有：
                <span class="bold"><strong>pieChart, lineChart, barChart 和 list.</strong></span></p></li><li class="listitem"><p><span class="bold"><strong>description</strong></span>：每个图表可以
				在报表中显示一个可选的描述。</p></li><li class="listitem"><p><span class="bold"><strong>x- 和 yaxis</strong></span>：只对 <span class="emphasis"><em>lineChart</em></span>类型起作用。
				这个可选参数可以修改图表坐标系的名称。</p></li><li class="listitem"><p><span class="bold"><strong>data</strong></span>：这是实际的数据。
				数据是一个key-value格式的json对象。</p></li></ul></div><p>
        </p></div><div class="section" title="实例流程"><div class="titlepage"><div><div><h3 class="title"><a name="explorer.reporting.example"></a>实例流程</h3></div></div></div><p>
			下面的例子演示了一个“流程实例总览”报表。流程本身非常简单，只包含一个脚本任务（除了开始和结束）
			使用javascript生成json数据集。
			虽然所有Explorer中的例子都使用javascript，它们也可以使用java服务任务。
			执行流程最后的结果就是<span class="emphasis"><em>reportData</em></span>变量，保存着数据。
        </p><p>
            <span class="bold"><strong>重要提示：</strong></span>下面的例子只能运行在JDK 7+环境中。
			因为使用了javascript引擎（<span class="emphasis"><em>Rhino</em></span>），如果运行在老JDK版本中
			会无法实现一些结果，来像下面一样编写脚本。
			参考下面的一个JDk 6+兼容的例子。
        </p><p>
            </p><pre class="prettyprint"><span class="pun">&lt;?</span><span class="pln">xml version</span><span class="pun">=</span><span class="str">"1.0"</span><span class="pln"> encoding</span><span class="pun">=</span><span class="str">"UTF-8"</span><span class="pun">?&gt;</span><span class="pln"><br></span><span class="tag">&lt;definitions</span><span class="pln"> </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/BPMN/20100524/MODEL"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">xmlns:xsi</span><span class="pun">=</span><span class="atv">"http://www.w3.org/2001/XMLSchema-instance"</span><span class="pln"> </span><span class="atn">xmlns:activiti</span><span class="pun">=</span><span class="atv">"http://activiti.org/bpmn"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">xmlns:bpmndi</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/BPMN/20100524/DI"</span><span class="pln"> </span><span class="atn">xmlns:omgdc</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/DD/20100524/DC"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">xmlns:omgdi</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/DD/20100524/DI"</span><span class="pln"> </span><span class="atn">typeLanguage</span><span class="pun">=</span><span class="atv">"http://www.w3.org/2001/XMLSchema"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">expressionLanguage</span><span class="pun">=</span><span class="atv">"http://www.w3.org/1999/XPath"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">targetNamespace</span><span class="pun">=</span><span class="atv">"activiti-report"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"process-instance-overview-report"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Process Instance Overview"</span><span class="pln"> </span><span class="atn">isExecutable</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"startevent1"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Start"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow1"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"startevent1"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"generateDataset"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;scriptTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"generateDataset"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Execute script"</span><span class="pln"> </span><span class="atn">scriptFormat</span><span class="pun">=</span><span class="atv">"JavaScript"</span><span class="pln"> </span><span class="atn">activiti:autoStoreVariables</span><span class="pun">=</span><span class="atv">"false"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;script&gt;</span><span class="pun">&lt;![</span><span class="pln">CDATA</span><span class="pun">[</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;importPackage</span><span class="pun">(</span><span class="pln">java</span><span class="pun">.</span><span class="pln">sql</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;importPackage</span><span class="pun">(</span><span class="pln">java</span><span class="pun">.</span><span class="pln">lang</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;importPackage</span><span class="pun">(</span><span class="pln">org</span><span class="pun">.</span><span class="pln">activiti</span><span class="pun">.</span><span class="pln">explorer</span><span class="pun">.</span><span class="pln">reporting</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="kwd">var</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ReportingUtil</span><span class="pun">.</span><span class="pln">executeSelectSqlQuery</span><span class="pun">(</span><span class="str">"SELECT PD.NAME_, PD.VERSION_ , count(*) FROM ACT_HI_PROCINST PI inner join ACT_RE_PROCDEF PD on PI.PROC_DEF_ID_ = PD.ID_ group by PROC_DEF_ID_"</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="kwd">var</span><span class="pln"> reportData </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{};</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;reportData</span><span class="pun">.</span><span class="pln">datasets </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[];</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="kwd">var</span><span class="pln"> dataset </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{};</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dataset</span><span class="pun">.</span><span class="pln">type </span><span class="pun">=</span><span class="pln"> </span><span class="str">"pieChart"</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dataset</span><span class="pun">.</span><span class="pln">description </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Process instance overview ("</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">Date</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">")"</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dataset</span><span class="pun">.</span><span class="pln">data </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{};</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln">result</span><span class="pun">.</span><span class="pln">next</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// process results one row at a time</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="kwd">var</span><span class="pln"> name </span><span class="pun">=</span><span class="pln"> result</span><span class="pun">.</span><span class="pln">getString</span><span class="pun">(</span><span class="lit">1</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="kwd">var</span><span class="pln"> version </span><span class="pun">=</span><span class="pln"> result</span><span class="pun">.</span><span class="pln">getLong</span><span class="pun">(</span><span class="lit">2</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="kwd">var</span><span class="pln"> count </span><span class="pun">=</span><span class="pln"> result</span><span class="pun">.</span><span class="pln">getLong</span><span class="pun">(</span><span class="lit">3</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dataset</span><span class="pun">.</span><span class="pln">data</span><span class="pun">[</span><span class="pln">name </span><span class="pun">+</span><span class="pln"> </span><span class="str">" (v"</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> version </span><span class="pun">+</span><span class="pln"> </span><span class="str">")"</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> count</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;reportData</span><span class="pun">.</span><span class="pln">datasets</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">dataset</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;execution</span><span class="pun">.</span><span class="pln">setVariable</span><span class="pun">(</span><span class="str">"reportData"</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">lang</span><span class="pun">.</span><span class="typ">String</span><span class="pun">(</span><span class="pln">JSON</span><span class="pun">.</span><span class="pln">stringify</span><span class="pun">(</span><span class="pln">reportData</span><span class="pun">)).</span><span class="pln">getBytes</span><span class="pun">(</span><span class="str">"UTF-8"</span><span class="pun">));</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">]]&gt;</span><span class="tag">&lt;/script&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/scriptTask&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow3"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"generateDataset"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;/process&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/definitions&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
       </p><p>
			除了流程xml顶部的标准xml，主要区别是<span class="emphasis"><em>targetNamespace</em></span>设置为
			<span class="bold"><strong>activiti-report</strong></span>，
			把分类设置为与部署的流程定义一样的名称。
        </p><p>
			脚本的第一行只是进行一些导入，避免每次使用时，都要写包名。
			第一个有意义的代码是使用<span class="emphasis"><em>ReportingUtil</em></span>读取activiti数据库。
			返回结果是一个<span class="emphasis"><em>JDBC 结果集</em></span>。
			查询语句下面，javascript创建了使用的json。
			json是符合<a class="link" href="#explorer.reporting.json" title="报告数据JSON">上面描述的需求</a>的。
        </p><p>
			最后一行脚本有一点儿奇怪。首先我们需要吧json对象转换成字符串，
			使用javascript函数<span class="emphasis"><em>JSON.stringify()</em></span>。
			字符串需要保存为二进制数组类型的变量。这是一个技术问题：
			二进制数组的大小是无限的，但是字符串的长度有限制。这就是为什么javascript字符串
			必须转换成一个java字符串，以获得转换成二进制的功能。
        </p><p>
			兼容JDK 6（以及更高版本）的同一个流程有一些区别。
			原生json功能无法使用，因此提供了一些帮助类（<span class="emphasis"><em>ReportData</em></span> 和 <span class="emphasis"><em>Dataset</em></span>）：
            </p><pre class="prettyprint"><span class="pun">&lt;?</span><span class="pln">xml version</span><span class="pun">=</span><span class="str">"1.0"</span><span class="pln"> encoding</span><span class="pun">=</span><span class="str">"UTF-8"</span><span class="pun">?&gt;</span><span class="pln"><br></span><span class="tag">&lt;definitions</span><span class="pln"> </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/BPMN/20100524/MODEL"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">xmlns:xsi</span><span class="pun">=</span><span class="atv">"http://www.w3.org/2001/XMLSchema-instance"</span><span class="pln"> </span><span class="atn">xmlns:activiti</span><span class="pun">=</span><span class="atv">"http://activiti.org/bpmn"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">xmlns:bpmndi</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/BPMN/20100524/DI"</span><span class="pln"> </span><span class="atn">xmlns:omgdc</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/DD/20100524/DC"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">xmlns:omgdi</span><span class="pun">=</span><span class="atv">"http://www.omg.org/spec/DD/20100524/DI"</span><span class="pln"> </span><span class="atn">typeLanguage</span><span class="pun">=</span><span class="atv">"http://www.w3.org/2001/XMLSchema"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">expressionLanguage</span><span class="pun">=</span><span class="atv">"http://www.w3.org/1999/XPath"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">targetNamespace</span><span class="pun">=</span><span class="atv">"activiti-report"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"process-instance-overview-report"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Process Instance Overview"</span><span class="pln"> </span><span class="atn">isExecutable</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"startevent1"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Start"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow1"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"startevent1"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"generateDataset"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;scriptTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"generateDataset"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Execute script"</span><span class="pln"> </span><span class="atn">scriptFormat</span><span class="pun">=</span><span class="atv">"js"</span><span class="pln"> </span><span class="atn">activiti:autoStoreVariables</span><span class="pun">=</span><span class="atv">"false"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;script&gt;</span><span class="pun">&lt;![</span><span class="pln">CDATA</span><span class="pun">[</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;importPackage</span><span class="pun">(</span><span class="pln">java</span><span class="pun">.</span><span class="pln">sql</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;importPackage</span><span class="pun">(</span><span class="pln">java</span><span class="pun">.</span><span class="pln">lang</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;importPackage</span><span class="pun">(</span><span class="pln">org</span><span class="pun">.</span><span class="pln">activiti</span><span class="pun">.</span><span class="pln">explorer</span><span class="pun">.</span><span class="pln">reporting</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="kwd">var</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ReportingUtil</span><span class="pun">.</span><span class="pln">executeSelectSqlQuery</span><span class="pun">(</span><span class="str">"SELECT PD.NAME_, PD.VERSION_ , count(*) FROM ACT_HI_PROCINST PI inner join ACT_RE_PROCDEF PD on PI.PROC_DEF_ID_ = PD.ID_ group by PROC_DEF_ID_"</span><span class="pun">);</span><span class="pln"><br><br><br><br><br></span><span class="bold"><strong><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="kwd">var</span><span class="pln"> reportData </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ReportData</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="kwd">var</span><span class="pln"> dataset </span><span class="pun">=</span><span class="pln"> reportData</span><span class="pun">.</span><span class="pln">newDataset</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dataset</span><span class="pun">.</span><span class="pln">type </span><span class="pun">=</span><span class="pln"> </span><span class="str">"pieChart"</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dataset</span><span class="pun">.</span><span class="pln">description </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Process instance overview ("</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">Date</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">")"</span><span class="pln"><br></span></strong></span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln">result</span><span class="pun">.</span><span class="pln">next</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// process results one row at a time</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="kwd">var</span><span class="pln"> name </span><span class="pun">=</span><span class="pln"> result</span><span class="pun">.</span><span class="pln">getString</span><span class="pun">(</span><span class="lit">1</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="kwd">var</span><span class="pln"> version </span><span class="pun">=</span><span class="pln"> result</span><span class="pun">.</span><span class="pln">getLong</span><span class="pun">(</span><span class="lit">2</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="kwd">var</span><span class="pln"> count </span><span class="pun">=</span><span class="pln"> result</span><span class="pun">.</span><span class="pln">getLong</span><span class="pun">(</span><span class="lit">3</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="bold"><strong><span class="pln">dataset</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="pln">name </span><span class="pun">+</span><span class="pln"> </span><span class="str">" (v"</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> version </span><span class="pun">+</span><span class="pln"> </span><span class="str">")"</span><span class="pun">,</span><span class="pln"> count</span><span class="pun">);</span></strong></span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;execution</span><span class="pun">.</span><span class="pln">setVariable</span><span class="pun">(</span><span class="str">"reportData"</span><span class="pun">,</span><span class="pln"> reportData</span><span class="pun">.</span><span class="pln">toBytes</span><span class="pun">());</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">]]&gt;</span><span class="tag">&lt;/script&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/scriptTask&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow3"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"generateDataset"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;/process&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/definitions&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p></div><div class="section" title="报告开始表单"><div class="titlepage"><div><div><h3 class="title"><a name="explorer.reporting.start.form"></a>报告开始表单</h3></div></div></div><p>
			因为报表是使用普通流程来生成的，所以表单功能也可以使用。
			直接在开始事件里加一个开始表单，Explorer就会在生成报表之前
			把它展示给用户。
            </p><pre class="prettyprint"><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"startevent1"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Start"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;extensionElements&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processDefinition"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Select process definition"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"processDefinition"</span><span class="pln"> </span><span class="atn">required</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:formProperty</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"chartType"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Chart type"</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"enum"</span><span class="pln"> </span><span class="atn">required</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:value</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"pieChart"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Pie chart"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;activiti:value</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"barChart"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Bar chart"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/activiti:formProperty&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/extensionElements&gt;</span><span class="pln"><br></span><span class="tag">&lt;/startEvent&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
			这会为用户渲染一个普通的表单：
            </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/explorer_012.png" align="middle"></div><p>
			表单属性会在启动流程时提交，然后它们就可以像普通的流程变量一样使用，
			脚本中可以使用它们来生成数据：
            </p><pre class="prettyprint"><span class="pln">&nbsp;</span><span class="kwd">var</span><span class="pln"> processDefinition </span><span class="pun">=</span><span class="pln"> execution</span><span class="pun">.</span><span class="pln">getVariable</span><span class="pun">(</span><span class="str">"processDefinition"</span><span class="pun">);</span></pre><p>
        </p></div><div class="section" title="流程例子"><div class="titlepage"><div><div><h3 class="title"><a name="explorer.reporting.examples"></a>流程例子</h3></div></div></div><p>
			对于默认的，控制台包含4个报表例子：
            </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                        <span class="bold"><strong>Employee productivity(员工的工作效率)</strong></span>：
						报表演示使用折线图和开始表单。
						报表的脚本也比其他例子要复杂，
						因为数据会在脚本中先进行解释，再保存到报表数据中。
                    </p></li><li class="listitem"><p>
                        <span class="bold"><strong>Helpdesk（一线与升级）</strong></span>：使用饼图进行展示，
						结合两个不同的数据库查询结果。
                    </p></li><li class="listitem"><p>
                        <span class="bold"><strong>Process instance overview（流程实例总览）</strong></span>：使用多个数据集的报表实例。
						报表包含使用相同数据的饼图和列表视图，展示多种数据集可以用来在一个页面中生成不同图表。
                    </p></li><li class="listitem"><p>
                        <span class="bold"><strong>Task duration（任务持续时间）</strong></span>：另一个使用开始表单的例子，
						会使用对应的变量来动态生成SQL查询语句。
                    </p></li></ul></div><p>
        </p></div></div><div class="section" title="修改数据库"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="explorer.change.database"></a>修改数据库</h2></div></div></div><p>
	   如果修改控制台例子所用的数据库，改变属性文件<code class="literal">apps/apache-tomcat-6.x/webapps/activiti-explorer/WEB-INF/classes/db.properties</code>。
	  同样，在类路径下放上合适的数据库驱动（Tomcat 共享类库或者在 <code class="literal">apps/apache-tomcat-6.x/webapps/activiti-explorer/WEB-INF/lib/</code>中）
    </p></div></div><div class="chapter" title="Chapter&nbsp;14.&nbsp;Activiti Modeler"><div class="titlepage"><div><div><h2 class="title"><a name="activitiModeler"></a>Chapter&nbsp;14.&nbsp;Activiti Modeler</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#N12FC5">编辑模型</a></span></dt><dt><span class="section"><a href="#N12FD0">导入模型</a></span></dt><dt><span class="section"><a href="#N12FDB">把发布的流程定义转换成可编辑的模型</a></span></dt><dt><span class="section"><a href="#N12FE6">把模型导出成BPMN XML</a></span></dt><dt><span class="section"><a href="#N12FF1">把模型部署到Activiti引擎中</a></span></dt></dl></div><p>
    Activiti Modeler是一个BPMN web建模组件，它是<a class="link" href="#activitiExplorer" title="Chapter&nbsp;13.&nbsp;Activiti Explorer">Activiti Explorer</a> web应用的一部分。
	Modeler是<a class="ulink" href="http://code.google.com/p/signavio-core-components/" target="_top">Signavio核心组件</a>项目的一个分支。
	新版Activiti Modeler的初始开发是由<a class="ulink" href="http://kisbpm.com/" target="_top">KIS BPM</a>捐献给Activiti项目的。
	和之前Activiti Modeler（Signavio核心组件）主要的区别是新Modeler是作为Activiti项目的一部分来维护和开发的。
	Activiti Modeler的目标是支持所有BPMN元素和Activiti引擎支持的扩展。
  </p><p>
    当你运行Activiti Explorer使用默认配置时，模型工作台中会有一个示例流程。
    </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/modeler_006.png" align="middle"></div><p>
  </p><div class="section" title="编辑模型"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N12FC5"></a>编辑模型</h2></div></div></div><p>
	  点击模型工作区的编辑按钮，会打开Modeler。
	  屏幕左侧是BPMN元素工具面板，也可以使用Activiti的扩展组件。
	  你可以在需要时把新元素拖拽到画布中。屏幕右侧是选中额元素的和苏醒。
	  例子截屏中选中了一个用户任务，你可以填写用户任务的属性，比如分配，表单属性和持续时间。
	  点击屏幕右上方的关闭按钮就可以返回Activiti Exporer。
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/modeler_003.png" align="middle"></div><p>
    </p></div><div class="section" title="导入模型"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N12FD0"></a>导入模型</h2></div></div></div><p>
	  你也可以把模型导入到模型工作台中，然后就可以在Activiti Modeler中进行编辑。
	  点击导入按钮，选择.bpmn或.bpmn20.xml文件。注意BPMN XML文件必须包含BPMN DI（坐标）信息。
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/modeler_002.png" align="middle"></div><p>
    </p></div><div class="section" title="把发布的流程定义转换成可编辑的模型"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N12FDB"></a>把发布的流程定义转换成可编辑的模型</h2></div></div></div><p>
	  发布的流程定义可以转换成模型，然后就可以在Activiti Modeler中编辑了。
	  注意流程定义必须包含BPMN DI（坐标）信息。
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/modeler_005.png" align="middle"></div><p>
    </p></div><div class="section" title="把模型导出成BPMN XML"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N12FE6"></a>把模型导出成BPMN XML</h2></div></div></div><p>
	  模型工作区中的模型可以导出成BPMN XML文件。选择模型操作选项中的导出选项。
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/modeler.png" align="middle"></div><p>
    </p></div><div class="section" title="把模型部署到Activiti引擎中"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N12FF1"></a>把模型部署到Activiti引擎中</h2></div></div></div><p>
	  在模型设置好所有运行所需的属性之后，它就可以发布到Activiti引擎里。
	  选择模型操作选项中的发布选项。
      </p><div class="mediaobject" align="center"><img src="Activiti%205.16%20%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C_files/modeler_004.png" align="middle"></div><p>
    </p></div></div>

2014/7/23

<div class="chapter" title="Chapter&nbsp;15.&nbsp;REST API"><div class="titlepage"><div><div><h2 class="title"><a name="N12FFD"></a>Chapter&nbsp;15.&nbsp;REST API</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#N13000">通用Activiti REST原则</a></span></dt><dd><dl><dt><span class="section"><a href="#N13003">安装与认证</a></span></dt><dt><span class="section"><a href="#restUsageInTomcat">使用Tomcat</a></span></dt><dt><span class="section"><a href="#N1304F">方法和返回值</a></span></dt><dt><span class="section"><a href="#N130D2">错误响应体</a></span></dt><dt><span class="section"><a href="#N130D9">请求参数</a></span></dt></dl></dd><dt><span class="section"><a href="#N13300">部署</a></span></dt><dd><dl><dt><span class="section"><a href="#N1330B">部署列表</a></span></dt><dt><span class="section"><a href="#N133A6">获得一个部署</a></span></dt><dt><span class="section"><a href="#N133EC">创建新部署</a></span></dt><dt><span class="section"><a href="#N1342C">删除部署</a></span></dt><dt><span class="section"><a href="#N13469">列出部署内的资源</a></span></dt><dt><span class="section"><a href="#N134D3">获取部署资源</a></span></dt><dt><span class="section"><a href="#N13544">获取部署资源的内容</a></span></dt></dl></dd><dt><span class="section"><a href="#N13595">流程定义</a></span></dt><dd><dl><dt><span class="section"><a href="#N13598">流程定义列表</a></span></dt><dt><span class="section"><a href="#N1367D">获得一个流程定义</a></span></dt><dt><span class="section"><a href="#N136D4">更新流程定义的分类</a></span></dt><dt><span class="section"><a href="#N1370C">获得一个流程定义的资源内容</a></span></dt><dt><span class="section"><a href="#N1373B">获得流程定义的BPMN模型</a></span></dt><dt><span class="section"><a href="#N13786">暂停流程定义</a></span></dt><dt><span class="section"><a href="#N137E9">激活流程定义</a></span></dt><dt><span class="section"><a href="#N13825">获得流程定义的所有候选启动者</a></span></dt><dt><span class="section"><a href="#N1386B">为流程定义添加一个候选启动者</a></span></dt><dt><span class="section"><a href="#N138C3">删除流程定义的候选启动者</a></span></dt><dt><span class="section"><a href="#N13920">获得流程定义的一个候选启动者</a></span></dt></dl></dd><dt><span class="section"><a href="#N1397D">模型</a></span></dt><dd><dl><dt><span class="section"><a href="#N13980">获得模型列表</a></span></dt><dt><span class="section"><a href="#N13A6C">获得一个模型</a></span></dt><dt><span class="section"><a href="#N13AB2">更新模型</a></span></dt><dt><span class="section"><a href="#N13AE8">新建模型</a></span></dt><dt><span class="section"><a href="#N13B16">删除模型</a></span></dt><dt><span class="section"><a href="#N13B53">获得模型的可编译源码</a></span></dt><dt><span class="section"><a href="#N13B99">设置模型的可编辑源码</a></span></dt><dt><span class="section"><a href="#N13BE8">获得模型的附加可编辑源码</a></span></dt><dt><span class="section"><a href="#N13C2E">设置模型的附加可编辑源码</a></span></dt></dl></dd><dt><span class="section"><a href="#N13C7D">流程实例</a></span></dt><dd><dl><dt><span class="section"><a href="#N13C80">获得流程实例</a></span></dt><dt><span class="section"><a href="#N13CC6">删除流程实例</a></span></dt><dt><span class="section"><a href="#N13D03">激活或挂起流程实例</a></span></dt><dt><span class="section"><a href="#N13D5C">启动流程实例</a></span></dt><dt><span class="section"><a href="#restProcessInstancesGet">显示流程实例列表</a></span></dt><dt><span class="section"><a href="#N13E9D">查询流程实例</a></span></dt><dt><span class="section"><a href="#N13EDE">获得流程实例的流程图</a></span></dt><dt><span class="section"><a href="#N13F29">获得流程实例的参与者</a></span></dt><dt><span class="section"><a href="#N13F72">为流程实例添加一个参与者</a></span></dt><dt><span class="section"><a href="#N13FCF">删除一个流程实例的参与者</a></span></dt><dt><span class="section"><a href="#N1402A">列出流程实例的变量</a></span></dt><dt><span class="section"><a href="#N14079">获得流程实例的一个变量</a></span></dt><dt><span class="section"><a href="#N140D6">创建（或更新）流程实例变量</a></span></dt><dt><span class="section"><a href="#N1413F">更新一个流程实例变量</a></span></dt><dt><span class="section"><a href="#N141A7">创建一个新的二进制流程变量</a></span></dt><dt><span class="section"><a href="#N14212">更新一个二进制的流程实例变量</a></span></dt></dl></dd><dt><span class="section"><a href="#N14278">分支</a></span></dt><dd><dl><dt><span class="section"><a href="#N1427B">获取一个分支</a></span></dt><dt><span class="section"><a href="#N142C1">对分支执行操作</a></span></dt><dt><span class="section"><a href="#N14338">获得一个分支的所有活动节点</a></span></dt><dt><span class="section"><a href="#restExecutionsGet">获取分支列表</a></span></dt><dt><span class="section"><a href="#N14449">查询分支</a></span></dt><dt><span class="section"><a href="#N14490">获取分支的变量列表</a></span></dt><dt><span class="section"><a href="#N144E7">获得分支的一个变量</a></span></dt><dt><span class="section"><a href="#N1454C">新建（或更新）分支变量</a></span></dt><dt><span class="section"><a href="#N145B9">更新分支变量</a></span></dt><dt><span class="section"><a href="#N14618">创建一个二进制变量</a></span></dt><dt><span class="section"><a href="#N14683">更新已经已存在的二进制分支变量</a></span></dt></dl></dd><dt><span class="section"><a href="#N146FA">任务</a></span></dt><dd><dl><dt><span class="section"><a href="#N146FD">获取任务</a></span></dt><dt><span class="section"><a href="#restTasksGet">任务列表</a></span></dt><dt><span class="section"><a href="#N14924">查询任务</a></span></dt><dt><span class="section"><a href="#N14967">更新任务</a></span></dt><dt><span class="section"><a href="#N149A2">操作任务</a></span></dt><dt><span class="section"><a href="#N14A0A">删除任务</a></span></dt><dt><span class="section"><a href="#N14A61">获得任务的变量</a></span></dt><dt><span class="section"><a href="#N14ABA">获取任务的一个变量</a></span></dt><dt><span class="section"><a href="#N14B1C">获取变量的二进制数据</a></span></dt><dt><span class="section"><a href="#N14B8C">创建任务变量</a></span></dt><dt><span class="section"><a href="#N14C03">创建二进制任务变量</a></span></dt><dt><span class="section"><a href="#N14C79">更新任务的一个已有变量</a></span></dt><dt><span class="section"><a href="#N14CF4">更新一个二进制任务变量</a></span></dt><dt><span class="section"><a href="#N14D6E">删除任务变量</a></span></dt><dt><span class="section"><a href="#N14DC6">删除任务的所有局部变量</a></span></dt><dt><span class="section"><a href="#N14E03">获得任务的所有IdentityLink</a></span></dt><dt><span class="section"><a href="#N14E49">获得一个任务的所有组或用户的IdentityLink</a></span></dt><dt><span class="section"><a href="#N14E53">获得一个任务的一个IdentityLink</a></span></dt><dt><span class="section"><a href="#N14EB9">为任务创建一个IdentityLink</a></span></dt><dt><span class="section"><a href="#N14F11">删除任务的一个IdentityLink</a></span></dt><dt><span class="section"><a href="#N14F6E">为任务创建评论</a></span></dt><dt><span class="section"><a href="#N14FC8">获得任务的所有评论</a></span></dt><dt><span class="section"><a href="#N1500C">获得任务的一个评论</a></span></dt><dt><span class="section"><a href="#N15059">删除任务的一条评论</a></span></dt><dt><span class="section"><a href="#N1509C">获得任务的所有事件</a></span></dt><dt><span class="section"><a href="#N150E0">获得任务的一个事件</a></span></dt><dt><span class="section"><a href="#N1512D">为任务创建一个附件，包含外部资源的链接</a></span></dt><dt><span class="section"><a href="#N1517F">为任务创建一个附件，包含附件文件</a></span></dt><dt><span class="section"><a href="#N151E5">获得任务的所有附件</a></span></dt><dt><span class="section"><a href="#N15229">获得任务的一个附件</a></span></dt><dt><span class="section"><a href="#N1528C">获取附件的内容</a></span></dt><dt><span class="section"><a href="#N152DE">删除任务的一个附件</a></span></dt></dl></dd><dt><span class="section"><a href="#N15321">历史</a></span></dt><dd><dl><dt><span class="section"><a href="#N15324">获得历史流程实例</a></span></dt><dt><span class="section"><a href="#restHistoricProcessInstancesGet">历史流程实例列表</a></span></dt><dt><span class="section"><a href="#N15438">查询历史流程实例</a></span></dt><dt><span class="section"><a href="#N15478">删除历史流程实例</a></span></dt><dt><span class="section"><a href="#N15499">获取历史流程实例的IdentityLink</a></span></dt><dt><span class="section"><a href="#N154C3">获取历史流程实例变量的二进制数据</a></span></dt><dt><span class="section"><a href="#N154F6">为历史流程实例创建一条新评论</a></span></dt><dt><span class="section"><a href="#N15550">获得一个历史流程实例的所有评论</a></span></dt><dt><span class="section"><a href="#N15594">获得历史流程实例的一条评论</a></span></dt><dt><span class="section"><a href="#N155E1">删除历史流程实例的一条评论</a></span></dt><dt><span class="section"><a href="#N15624">获得单独历史任务实例</a></span></dt><dt><span class="section"><a href="#restHistoricTaskInstancesGet">获取历史任务实例</a></span></dt><dt><span class="section"><a href="#N1581C">查询历史任务实例</a></span></dt><dt><span class="section"><a href="#N1585F">删除历史任务实例</a></span></dt><dt><span class="section"><a href="#N15880">获得历史任务实例的IdentityLink</a></span></dt><dt><span class="section"><a href="#N158AA">获取历史任务实例变量的二进制值</a></span></dt><dt><span class="section"><a href="#restHistoricActivityInstancesGet">获取历史活动实例</a></span></dt><dt><span class="section"><a href="#N1599A">查询历史活动实例</a></span></dt><dt><span class="section"><a href="#restHistoricVariableInstancesGet">列出历史变量实例</a></span></dt><dt><span class="section"><a href="#N15A48">查询历史变量实例</a></span></dt><dt><span class="section"><a href="#N15A88">获取历史任务实例变量的二进制值</a></span></dt><dt><span class="section"><a href="#restHistoricDetailGet">获取历史细节</a></span></dt><dt><span class="section"><a href="#N15B42">查询历史细节</a></span></dt><dt><span class="section"><a href="#N15B7B">获取历史细节变量的二进制数据</a></span></dt></dl></dd><dt><span class="section"><a href="#N15BAE">表单</a></span></dt><dd><dl><dt><span class="section"><a href="#N15BB1">获取表单数据</a></span></dt><dt><span class="section"><a href="#N15C00">提交任务表单数据</a></span></dt></dl></dd><dt><span class="section"><a href="#N15C3C">数据库表</a></span></dt><dd><dl><dt><span class="section"><a href="#N15C3F">表列表</a></span></dt><dt><span class="section"><a href="#N15C64">获得一张表</a></span></dt><dt><span class="section"><a href="#N15CA8">获得表的列信息</a></span></dt><dt><span class="section"><a href="#N15CEC">获得表的行数据</a></span></dt></dl></dd><dt><span class="section"><a href="#N15D6A">引擎</a></span></dt><dd><dl><dt><span class="section"><a href="#N15D6D">获得引擎属性</a></span></dt><dt><span class="section"><a href="#N15D92">获得引擎信息</a></span></dt></dl></dd><dt><span class="section"><a href="#N15DB7">运行时</a></span></dt><dd><dl><dt><span class="section"><a href="#N15DBA">接收信号事件</a></span></dt></dl></dd><dt><span class="section"><a href="#N15E2F">作业</a></span></dt><dd><dl><dt><span class="section"><a href="#N15E32">获取一个作业</a></span></dt><dt><span class="section"><a href="#N15E76">删除作业</a></span></dt><dt><span class="section"><a href="#N15EB3">执行作业</a></span></dt><dt><span class="section"><a href="#N15EFB">获得作业的异常堆栈</a></span></dt><dt><span class="section"><a href="#N15F37">获得作业列表</a></span></dt></dl></dd><dt><span class="section"><a href="#N16026">用户</a></span></dt><dd><dl><dt><span class="section"><a href="#N16029">获得一个用户</a></span></dt><dt><span class="section"><a href="#N1606D">获取用户列表</a></span></dt><dt><span class="section"><a href="#N16106">更新用户</a></span></dt><dt><span class="section"><a href="#N16141">创建用户</a></span></dt><dt><span class="section"><a href="#N16174">删除用户</a></span></dt><dt><span class="section"><a href="#N161B1">获取用户图片</a></span></dt><dt><span class="section"><a href="#N161F2">更新用户图片</a></span></dt><dt><span class="section"><a href="#N16242">列出用户列表</a></span></dt><dt><span class="section"><a href="#N16286">获取用户信息</a></span></dt><dt><span class="section"><a href="#N162D3">更新用户的信息</a></span></dt><dt><span class="section"><a href="#N1632E">创建用户信息条目</a></span></dt><dt><span class="section"><a href="#N16388">删除用户的信息</a></span></dt></dl></dd><dt><span class="section"><a href="#N163CE">群组</a></span></dt><dd><dl><dt><span class="section"><a href="#N163D1">获得群组</a></span></dt><dt><span class="section"><a href="#N16415">获取群组列表</a></span></dt><dt><span class="section"><a href="#N16490">更新群组</a></span></dt><dt><span class="section"><a href="#N164C8">创建群组</a></span></dt><dt><span class="section"><a href="#N164FB">删除群组</a></span></dt><dt><span class="section"><a href="#N16538">获取群组的成员</a></span></dt><dt><span class="section"><a href="#N16543">为群组添加一个成员</a></span></dt><dt><span class="section"><a href="#N1659C">删除群组的成员</a></span></dt></dl></dd><dt><span class="section"><a href="#N165EC">传统REST - 通用方法</a></span></dt><dt><span class="section"><a href="#N16604">资源</a></span></dt><dd><dl><dt><span class="section"><a href="#N16608">上传发布</a></span></dt><dt><span class="section"><a href="#N1662C">获取发布</a></span></dt><dt><span class="section"><a href="#N16650">获取发布资源</a></span></dt><dt><span class="section"><a href="#N16674">获取发布的一个资源</a></span></dt><dt><span class="section"><a href="#N16698">删除发布</a></span></dt><dt><span class="section"><a href="#N166BC">删除发布</a></span></dt></dl></dd><dt><span class="section"><a href="#N166E4">引擎</a></span></dt><dd><dl><dt><span class="section"><a href="#N166E7">获取流程引擎</a></span></dt></dl></dd><dt><span class="section"><a href="#N1670C">流程</a></span></dt><dd><dl><dt><span class="section"><a href="#N1670F">流程定义列表</a></span></dt><dt><span class="section"><a href="#N16733">获得流程定义表单属性</a></span></dt><dt><span class="section"><a href="#N16757">获得流程定义表单资源</a></span></dt><dt><span class="section"><a href="#N1677B">获取流程定义图</a></span></dt><dt><span class="section"><a href="#N1679F">启动流程实例</a></span></dt><dt><span class="section"><a href="#N167C6">流程实例列表</a></span></dt><dt><span class="section"><a href="#N167EA">获得流程实例细节</a></span></dt><dt><span class="section"><a href="#N1680E">获得流程实例图</a></span></dt><dt><span class="section"><a href="#N16832">获得流程实例的任务</a></span></dt><dt><span class="section"><a href="#N16856">继续特定流程实例的活动（receiveTask）</a></span></dt><dt><span class="section"><a href="#N1687D">触发特定流程实例的信号</a></span></dt></dl></dd><dt><span class="section"><a href="#N168A5">任务</a></span></dt><dd><dl><dt><span class="section"><a href="#N168A8">获得任务简介</a></span></dt><dt><span class="section"><a href="#N168CC">任务列表</a></span></dt><dt><span class="section"><a href="#N168FA">获取任务</a></span></dt><dt><span class="section"><a href="#N1691E">获取任务表单</a></span></dt><dt><span class="section"><a href="#N16942">执行任务操作</a></span></dt><dt><span class="section"><a href="#N1696A">表单属性列表</a></span></dt><dt><span class="section"><a href="#N1698E">为任务添加一个附件</a></span></dt><dt><span class="section"><a href="#N169B3">获得任务附件</a></span></dt><dt><span class="section"><a href="#N169D7">为任务添加一个url</a></span></dt></dl></dd><dt><span class="section"><a href="#N169FD">身份</a></span></dt><dd><dl><dt><span class="section"><a href="#N16A00">登录</a></span></dt><dt><span class="section"><a href="#N16A27">获得用户</a></span></dt><dt><span class="section"><a href="#N16A4B">列出用户的群组</a></span></dt><dt><span class="section"><a href="#N16A6D">查询用户</a></span></dt><dt><span class="section"><a href="#N16A92">创建用户</a></span></dt><dt><span class="section"><a href="#N16ABC">为群组添加用户</a></span></dt><dt><span class="section"><a href="#N16AE3">从群组删除用户</a></span></dt><dt><span class="section"><a href="#N16B07">获得用户图片</a></span></dt><dt><span class="section"><a href="#N16B2B">获得群组</a></span></dt><dt><span class="section"><a href="#N16B4F">群组用户列表</a></span></dt><dt><span class="section"><a href="#N16B71">查询群组</a></span></dt><dt><span class="section"><a href="#N16B93">创建群组</a></span></dt><dt><span class="section"><a href="#N16BBD">为群组添加用户</a></span></dt><dt><span class="section"><a href="#N16BE4">为群组删除用户</a></span></dt></dl></dd><dt><span class="section"><a href="#N16C09">管理</a></span></dt><dd><dl><dt><span class="section"><a href="#N16C0C">作业列表</a></span></dt><dt><span class="section"><a href="#N16C30">获得作业</a></span></dt><dt><span class="section"><a href="#N16C54">执行一个作业</a></span></dt><dt><span class="section"><a href="#N16C78">执行多个作业</a></span></dt><dt><span class="section"><a href="#N16C9F">数据库表列表</a></span></dt><dt><span class="section"><a href="#N16CC3">获得表元数据</a></span></dt><dt><span class="section"><a href="#N16CE5">获得表数据</a></span></dt></dl></dd></dl></div><div class="section" title="通用Activiti REST原则"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N13000"></a>通用Activiti REST原则</h2></div></div></div><div class="section" title="安装与认证"><div class="titlepage"><div><div><h3 class="title"><a name="N13003"></a>安装与认证</h3></div></div></div><p>activiti包含了一个activiti引擎的REST API，把activiti-rest.war部署到像Apache Tomcat这样的servlet容器就可以使用。不过，它也可以使用在其他web应用中，把activiti-rest的依赖都加入classpath，添加servlet，并映射到你的应用中。</p><p>默认情况下，activiti引擎会连接内存数据库H2。你可以修改WEB-INF/classes目录下的db.properties来修改数据库设置。REST API使用JSON格式（http://www.json.org），它是基于Restlet（http://www.restlet.org）开发的。</p><p>默认所有REST资源都需要先使用有效的activiti用户认证后才能使用。会使用Basic HTTP认证，所以你要一直在请求的HTTP头中包含一个<code class="literal">Authorization: Basic ...==</code>属性，或在请求url中包含用户名和密码（比如： <code class="literal">http://username:password@localhost...</code>）。
      </p><p><span class="bold"><strong>建议把Basic认证与HTTPS一起使用。</strong></span></p><p>可以从删除对应资源的认证，或添加额外的授权给一个认证的用户（比如，把用户加入一个组，让它可以执行URL Y）。
	  可以使用<code class="literal">org.activiti.rest.common.filter.RestAuthenticator</code>的实现，它有两个方法：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><span class="emphasis"><em><code class="literal">boolean requestRequiresAuthentication(Request request)</code></em></span>：在请求认证检查之前调用（通过头部传递合法的账号和密码）。如果方法返回true，这个方法就需要认证才能访问。如果返回false，无论请求是否认证都可以访问。如果返回false，就不会为这个方法调用<code class="literal">isRequestAuthorized</code>。</p></li><li class="listitem"><p><span class="emphasis"><em><code class="literal">boolean isRequestAuthorized(Request request)</code></em></span>：在用户已经通过activiti账号管理认证后，但是再请求实际之前调用。可以用来检查认证用户是否可以访问对应请求。如果返回true，会允许请求执行。如果返回true，请求不会执行，客户端会收到对应的错误。</p></li></ul></div><p>
      </p><p>自定义的RestAuthenticator应该设置到RestletServlet的<code class="literal">org.activiti.rest.service.application.ActivitiRestServicesApplication</code>中。
	  最简单的方法是创建<code class="literal">ActivitiRestServicesApplication</code>的子类，并在servlet-mapping中设置自定义的类名：</p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp;</span><span class="com">&lt;!-- Restlet adapter --&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;servlet&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;servlet-name&gt;</span><span class="pln">RestletServlet</span><span class="tag">&lt;/servlet-name&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;servlet-class&gt;</span><span class="pln">org.restlet.ext.servlet.ServerServlet</span><span class="tag">&lt;/servlet-class&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;init-param&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="com">&lt;!-- Application class name --&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;param-name&gt;</span><span class="pln">org.restlet.application</span><span class="tag">&lt;/param-name&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;param-value&gt;</span><span class="pln">com.my.company.CustomActivitiRestServicesApplication</span><span class="tag">&lt;/param-value&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/init-param&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/servlet&gt;</span></pre></div><div class="section" title="使用Tomcat"><div class="titlepage"><div><div><h3 class="title"><a name="restUsageInTomcat"></a>使用Tomcat</h3></div></div></div><p>根据<a class="ulink" href="http://tomcat.apache.org/tomcat-7.0-doc/security-howto.html" target="_top">Tomcat的默认安全配置</a>，默认<span class="bold"><strong>转码的前斜线（<code class="literal">%2F</code>和<code class="literal">%5C</code>）都不允许使用（返回400）。</strong></span>
      这可能对部署资源和它们的数据URL造成影响，URL可能会包含转移的前斜线。

      <span class="bold"><strong>当出现预期外的400问题，设置下面这个系统参数：<code class="literal">-Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true.</code></strong></span></p></div><div class="section" title="方法和返回值"><div class="titlepage"><div><div><h3 class="title"><a name="N1304F"></a>方法和返回值</h3></div></div></div><div class="table"><a name="N13052"></a><p class="title"><b>Table&nbsp;15.1.&nbsp;HTTP方法和对应操作</b></p><div class="table-contents"><table summary="HTTP方法和对应操作" border="1"><colgroup><col><col></colgroup><thead><tr><th>方法</th><th>操作</th></tr></thead><tbody><tr><td><code class="literal">GET</code></td><td>获得一个资源或获得多个资源</td></tr><tr><td><code class="literal">POST</code></td><td>创建一个新资源。当请求结果太复杂，无法放到GET请求的URL中，也用来查询资源。</td></tr><tr><td><code class="literal">PUT</code></td><td>更新已有资源的属性。也用来调用现存资源的功能。</td></tr><tr><td><code class="literal">DELETE</code></td><td>删除现存资源。</td></tr></tbody></table></div></div><br class="table-break"><div class="table"><a name="N13076"></a><p class="title"><b>Table&nbsp;15.2.&nbsp;HTTP方法响应代码</b></p><div class="table-contents"><table summary="HTTP方法响应代码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应</th><th>描述</th></tr></thead><tbody><tr><td><code class="literal">200 - Ok</code></td><td>操作成功，响应返回（<code class="literal">GET</code>和<code class="literal">PUT</code>请求）。</td></tr><tr><td><code class="literal">201 - Created</code></td><td>操作成功，实体已创建，并返回到响应体中（<code class="literal">POST</code>请求）。</td></tr><tr><td><code class="literal">204 - No content</code></td><td>操作成功，实体已删除，不会返回响应体（<code class="literal">DELETE</code>请求）。</td></tr><tr><td><code class="literal">401 - Unauthorized</code></td><td>操作失败。操作要求设置Authentication头部。如果请求中已经设置了头部，对应的凭证是无效的或者用户不允许执行这个操作。</td></tr><tr><td><code class="literal">403 - Forbidden</code></td><td>禁止操作，不要重试。这不是认证和授权的问题，这是禁止操作。比如：删除一个执行中流程的任务是不允许的，无论用户或流程任务的状态。</td></tr><tr><td><code class="literal">404 - Not found</code></td><td>操作失败。找不到请求的资源。</td></tr><tr><td><code class="literal">405 - Method not allowed</code></td><td>操作失败。使用的资源方法不允许调用。比如：想更新（PUT）已部署的资源会返回<code class="literal">405</code>结果。</td></tr><tr><td><code class="literal">409 - Conflict</code></td><td>操作失败。更新其他操作应更新的资源，会导致更新不合法。也可以表示一个结合中新创建的资源的id已经存在了。</td></tr><tr><td><code class="literal">415 - Unsupported Media Type</code></td><td>操作失败。请求体包含了不支持的媒体类型。当请求体的JSON中包含未知的属性或值时，也会返回这个响应，一般是因为无法处理的错误格式或类型。</td></tr><tr><td><code class="literal">500 - Internal server error</code></td><td>操作失败。执行操作时出现了预期外的异常。响应体中包含错误的细节。</td></tr></tbody></table></div></div><br class="table-break"><p>
		media-type和HTTP响应永远都是<code class="literal">application/json</code>，除非需要使用二进制内容（比如：发布资源数据），会使用内容的media-type。
        </p></div><div class="section" title="错误响应体"><div class="titlepage"><div><div><h3 class="title"><a name="N130D2"></a>错误响应体</h3></div></div></div><p>当发生错误时（包括客户端和服务端，4XX和5XX状态码），响应体会包含描述发生的错误的描述。
	  下面是任务不存在时出现的404状态：</p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"statusCode"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">404</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"errorMessage"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Could not find a task with id '444'."</span><span class="pln"><br></span><span class="pun">}</span></pre></div><div class="section" title="请求参数"><div class="titlepage"><div><div><h3 class="title"><a name="N130D9"></a>请求参数</h3></div></div></div><div class="section" title="URL片段"><div class="titlepage"><div><div><h4 class="title"><a name="N130DC"></a>URL片段</h4></div></div></div><p>
			url上的参数（比如<code class="literal">http://host/actviti-rest/service/repository/deployments/{deploymentId}</code>上的deploymentId）
			都需要转义（参考<a class="ulink" href="https://en.wikipedia.org/wiki/Percent-encoding" target="_top">URL编码或百分号编码</a>来解决特殊字符问题）。
			大多数框架都有这种内置功能，但我们也要把这个问题考虑在内。特别是对于可能包含前斜线（比如，部署资源）的情况，这就是必须的。
        </p></div><div class="section" title="Rest URL查询参数"><div class="titlepage"><div><div><h4 class="title"><a name="N130E8"></a>Rest URL查询参数</h4></div></div></div><p>
			设置在URL中的查询参数（比如，<code class="literal">http://host/activiti-rest/service/deployments?name=Deployment</code>中的name参数）
			可以使用以下类型，它们对应着以下REST-API文档：

            </p><div class="table"><a name="N130F0"></a><p class="title"><b>Table&nbsp;15.3.&nbsp;URL查询参数类型</b></p><div class="table-contents"><table summary="URL查询参数类型" border="1"><colgroup><col><col></colgroup><thead><tr><th>类型</th><th>格式</th></tr></thead><tbody><tr><td>String</td><td>纯文本参数。可以包含任何URL允许的合法的字符。对于<code class="literal">XXXLike</code>参数，字符串应该包含通配符<code class="literal">%</code>（还要通过url编码）。这可以指定模糊搜索的意图。比如'<code class="literal">Tas%</code>'匹配所有以'Tas'开头的值。</td></tr><tr><td>Integer</td><td>整数参数。只能包含非小数的整数值，在-2.147.483.648与2.147.483.647之间。</td></tr><tr><td>Long</td><td>长整形参数。只能包含非小树的长整形值，在-9.223.372.036.854.775.808与9.223.372.036.854.775.807之间。</td></tr><tr><td>Boolean</td><td>布尔类型参数。可以是<code class="literal">true</code>或<code class="literal">false</code>。如果使用了其他值，会返回'<code class="literal">405 - Bad request</code>'响应。</td></tr><tr><td>Date</td><td>日期类型。使用ISO-8601日期格式（参考<a class="ulink" href="http://en.wikipedia.org/wiki/ISO_8601" target="_top">维基百科上的ISO-8601</a>），
					用于时间和日期组件（比如<code class="literal">2013-04-03T23:45Z</code>）。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="JSON内容参数"><div class="titlepage"><div><div><h4 class="title"><a name="restJsonBody"></a>JSON内容参数</h4></div></div></div><p>
            </p><div class="table"><a name="N13135"></a><p class="title"><b>Table&nbsp;15.4.&nbsp;JSON参数类型</b></p><div class="table-contents"><table summary="JSON参数类型" border="1"><colgroup><col><col></colgroup><thead><tr><th>类型</th><th>格式</th></tr></thead><tbody><tr><td>String</td><td>纯文本参数。可以包含任何URL允许的合法的字符。对于<code class="literal">XXXLike</code>参数，字符串应该包含通配符<code class="literal">%</code>（还要通过url编码）。这可以指定模糊搜索的意图。比如'<code class="literal">Tas%</code>'匹配所有以'Tas'开头的值。</td></tr><tr><td>Integer</td><td>整数参数，JSON数字。只能包含非小数的整数值，在-2.147.483.648与2.147.483.647之间。</td></tr><tr><td>Long</td><td>长整形参数，JSON数字。只能包含非小树的长整形值，在-9.223.372.036.854.775.808与9.223.372.036.854.775.807之间。</td></tr><tr><td>Boolean</td><td>布尔类型参数，JSON布尔。可以是<code class="literal">true</code>或<code class="literal">false</code>。如果使用了其他值，会返回'<code class="literal">405 - Bad request</code>'响应。</td></tr><tr><td>Date</td><td>日期类型，JSON文本。使用ISO-8601日期格式（参考<a class="ulink" href="http://en.wikipedia.org/wiki/ISO_8601" target="_top">维基百科上的ISO-8601</a>），
					用于时间和日期组件（比如<code class="literal">2013-04-03T23:45Z</code>）。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="分页与排序"><div class="titlepage"><div><div><h4 class="title"><a name="restPagingAndSort"></a>分页与排序</h4></div></div></div><p>
			分页与排序参数可以添加到URL的query-string中（比如<code class="literal">http://host/activiti-rest/service/deployments?sort=name</code>中的name参数）。
            </p><div class="table"><a name="N1317D"></a><p class="title"><b>Table&nbsp;15.5.&nbsp;查询JSON参数</b></p><div class="table-contents"><table summary="查询JSON参数" border="1"><colgroup><col><col></colgroup><thead><tr><th>参数</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>sort</td><td>根据查询实现而不同</td><td>查询的名称，对于不同的查询实现，默认值也不同。</td></tr><tr><td>order</td><td>asc</td><td>排序的方式，可以为'asc'或'desc'。</td></tr><tr><td>start</td><td>0</td><td>分页查询开始的值，默认从0开始。</td></tr><tr><td>size</td><td>10</td><td>分页查询每页显示的记录数。默认为10。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="JSON查询变量格式"><div class="titlepage"><div><div><h4 class="title"><a name="restQueryVariable"></a>JSON查询变量格式</h4></div></div></div><p>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"variableName"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"variableValue"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"operation"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"equals"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"string"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p><div class="table"><a name="N131B1"></a><p class="title"><b>Table&nbsp;15.6.&nbsp;查询JSON参数</b></p><div class="table-contents"><table summary="查询JSON参数" border="1"><colgroup><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>否</td><td>查询包含的变量名称。在一些查询中使用'<code class="literal">equals</code>'查询对应资源的<span class="bold"><strong>所有值</strong></span>时，可以为空。</td></tr><tr><td>value</td><td>是</td><td>查询包含的变量值，要包含给定类型的正确格式。</td></tr><tr><td>operation</td><td>是</td><td>查询使用的参数，可以是以下值： <code class="literal">equals, notEquals, equalsIgnoreCase, notEqualsIgnoreCase, lessThan, greaterThan, lessThanOrEquals, greaterThanOrEquals</code>和<code class="literal">like</code>。</td></tr><tr><td>type</td><td>否</td><td>使用的变量的类型。如果省略，类型会根据<code class="literal">value</code>参数决定。所以JSON文本值都会认为是<code class="literal">string</code>类型，JSON布尔对应<code class="literal">boolean</code>，JSON数字根据数字的长度对应<code class="literal">long</code>或<code class="literal">integer</code>。在不确定时，建议使用精确的类型。下面列出了不稳定支持的其他类型。
                    </td></tr></tbody></table></div></div><p><br class="table-break">
             </p><div class="table"><a name="N131F8"></a><p class="title"><b>Table&nbsp;15.7.&nbsp;默认查询JSON类型</b></p><div class="table-contents"><table summary="默认查询JSON类型" border="1"><colgroup><col><col></colgroup><thead><tr><th>类型名称</th><th>描述</th></tr></thead><tbody><tr><td>string</td><td>对应<code class="literal">java.lang.String</code>.</td></tr><tr><td>short</td><td>对应<code class="literal">java.lang.Integer</code>.</td></tr><tr><td>integer</td><td>对应<code class="literal">java.lang.Integer</code>.</td></tr><tr><td>long</td><td>对应<code class="literal">java.lang.Long</code>.</td></tr><tr><td>double</td><td>对应<code class="literal">java.lang.Double</code>.</td></tr><tr><td>boolean</td><td>对应<code class="literal">java.lang.Boolean</code>.</td></tr><tr><td>date</td><td>对应<code class="literal">java.util.Date</code>。JSON字符串会使用ISO-8601格式进行转换。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="变量格式"><div class="titlepage"><div><div><h4 class="title"><a name="restVariables"></a>变量格式</h4></div></div></div><p>
		  在使用变量时（执行，流程和任务），REST-api使用一些通用原则和JSON格式实现读写。
		  变量的JSON格式看起来如下所示：
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"variableName"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"variableValue"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"valueUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://..."</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"scope"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"string"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>

           </p><div class="table"><a name="N13246"></a><p class="title"><b>Table&nbsp;15.8.&nbsp;变量JSON属性</b></p><div class="table-contents"><table summary="变量JSON属性" border="1"><colgroup><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>是</td><td>变量名称。</td></tr><tr><td>value</td><td>否</td><td>变量值。写入变量时，如果没有设置<code class="literal">value</code>，会认为值是<code class="literal">null</code>。</td></tr><tr><td>valueUrl</td><td>否</td><td>当读取变量的类型为<code class="literal">binary</code>或<code class="literal">serializable</code>时，这个属性会指向获取原始二进制数据的URL。</td></tr><tr><td>scope</td><td>否</td><td>变量的范围。如果为'<code class="literal">local</code>'，变量会对应到请求的资源。如果为'<code class="literal">global</code>'，变量会定义到请求资源的上级（或上级树的任何上级）。当写入变量，没有设置scope时，假设使用<code class="literal">global</code>。</td></tr><tr><td>type</td><td>否</td><td>变量类型。参考下面的表格对类型的描述。当写入变量，没有设置类型时，会根据请求的JSON属性来推断它的类型，限制为<code class="literal">string</code>，<code class="literal">double</code>，<code class="literal">integer</code>和<code class="literal">boolean</code>。如果不确定会用到的类型，建议还是要设置一个类型。</td></tr></tbody></table></div></div><p><br class="table-break">
            </p><div class="table"><a name="N13299"></a><p class="title"><b>Table&nbsp;15.9.&nbsp;变量类型</b></p><div class="table-contents"><table summary="变量类型" border="1"><colgroup><col><col></colgroup><thead><tr><th>类型名</th><th>描述</th></tr></thead><tbody><tr><td>string</td><td>对应<code class="literal">java.lang.String</code>。写入时使用JSON文本。</td></tr><tr><td>integer</td><td>对应<code class="literal">java.lang.Integer</code>。写入时，先使用JSON数进行字转换，如果失败就使用JSON文本。</td></tr><tr><td>short</td><td>对应<code class="literal">java.lang.Short</code>。写入时，先使用JSON数字进行转换，如果失败就使用JSON文本。</td></tr><tr><td>long</td><td>对应<code class="literal">java.lang.Long</code>。写入时，先使用JSON数字进行转换，如果失败就使用JSON文本。</td></tr><tr><td>double</td><td>对应<code class="literal">java.lang.Double</code>。写入时，先使用JSON数字进行转换，如果失败就使用JSON文本。</td></tr><tr><td>boolean</td><td>对应<code class="literal">java.lang.Boolean</code>。写入时，使用JSON布尔进行转换。</td></tr><tr><td>date</td><td>对应<code class="literal">java.util.Date</code>。写入时，使用ISO-8601日期格式转换为JSON文本。</td></tr><tr><td>binary</td><td>二进制变量，对应字节数组。<code class="literal">value</code>属性为null，<code class="literal">valueUrl</code>包含指向原始二进制流的URL。</td></tr><tr><td>serializable</td><td>可序列化的Java对象序列化后的结果。和<code class="literal">binary</code>类型相同，<code class="literal">value</code>属性为null，<code class="literal">valueUrl</code>包含指向原始二进制流的URL。所有可以序列化变量（上面不包含的类型）都会使用这个类型。</td></tr></tbody></table></div></div><p><br class="table-break">
			可以通过自定义JSON格式来支持更多变量类型（无论是简单数值或复杂/内嵌JSON对象）。
			扩展<code class="literal">org.activiti.rest.api.RestResponseFactory</code>的<code class="literal">initializeVariableConverters()</code>方法，
			你可以添加自定义的<code class="literal">org.activiti.rest.api.service.engine.variable.RestVariableConverter</code>类来支持POJO与对应REST数据的相互转换。实际的JSON转换是通过Jackson实现的。
        </p></div></div></div><div class="section" title="部署"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N13300"></a>部署</h2></div></div></div><p><span class="bold"><strong>如果使用tomcat，请参考<a class="link" href="#restUsageInTomcat" title="使用Tomcat">tomcat用法</a>。</strong></span></p><div class="section" title="部署列表"><div class="titlepage"><div><div><h3 class="title"><a name="N1330B"></a>部署列表</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">deployments</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13315"></a><p class="title"><b>Table&nbsp;15.10.&nbsp;URL查询参数</b></p><div class="table-contents"><table summary="URL查询参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>否</td><td>String</td><td>只返回指定名称的部署。</td></tr><tr><td>nameLike</td><td>否</td><td>String</td><td>只返回名称与指定值相似的部署。</td></tr><tr><td>category</td><td>否</td><td>String</td><td>只返回指定分类的部署。</td></tr><tr><td>categoryNotEquals</td><td>否</td><td>String</td><td>只返回与指定分类不同的部署。</td></tr><tr><td>tenantId</td><td>否</td><td>String</td><td>只返回指定tenantId的部署。</td></tr><tr><td>tenantIdLike</td><td>否</td><td>String</td><td>只返回与指定tenantId匹配的部署。</td></tr><tr><td>withoutTenantId</td><td>否</td><td>Boolean</td><td>如果为 <code class="literal">true</code>，只返回没有设置tenantId的部署。如果为 <code class="literal">false</code>，忽略 <code class="literal">withoutTenantId</code> 参数。</td></tr><tr><td>sort</td><td>否</td><td>'id'（默认），'name'，'deploytime'或'tenantId'</td><td>排序属性，与'order'一起使用。</td></tr><tr><td colspan="4"><p>通用的<a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a>都可以使用。</p></td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N1338B"></a><p class="title"><b>Table&nbsp;15.11.&nbsp;REST响应码</b></p><div class="table-contents"><table summary="REST响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"10"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"activiti-examples.bar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"deploymentTime"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:54:26.750+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"category"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"examples"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/service/repository/deployments/10"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"tenantId"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="获得一个部署"><div class="titlepage"><div><div><h3 class="title"><a name="N133A6"></a>获得一个部署</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">deployments</span><span class="pun">/{</span><span class="pln">deploymentId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N133B0"></a><p class="title"><b>Table&nbsp;15.12.&nbsp;获得一个部署 - URL参数</b></p><div class="table-contents"><table summary="获得一个部署 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>deploymentId</td><td>是</td><td>String</td><td>获取部署的id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N133CC"></a><p class="title"><b>Table&nbsp;15.13.&nbsp;获得一个部署 - 响应码</b></p><div class="table-contents"><table summary="获得一个部署 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了部署，并返回。</td></tr><tr><td>404</td><td>表示找不到请求的部署。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"10"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"activiti-examples.bar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"deploymentTime"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:54:26.750+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"category"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"examples"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/service/repository/deployments/10"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"tenantId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="创建新部署"><div class="titlepage"><div><div><h3 class="title"><a name="N133EC"></a>创建新部署</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST repository</span><span class="pun">/</span><span class="pln">deployments</span></pre><p>
        </p><p>
          <span class="bold"><strong>请求体：</strong></span>
        </p><p>请求体包含的数据类型应该是<span class="emphasis"><em>multipart/form-data</em></span>。请求里应该只包含一个文件，其他额外的任务都会被忽略。
		部署的名称就是文件域的名称。如果需要在一个部署中包含多个资源，把这些文件压缩成zip包，并要确认文件名是以<code class="literal">.bar</code>或<code class="literal">.zip</code>结尾。</p><p>可以在请求体中传递一个额外的参数（表单域） <code class="literal">tenantId</code>。字段的值会用来设置部署的租户id。</p><p>
          </p><div class="table"><a name="N1340C"></a><p class="title"><b>Table&nbsp;15.14.&nbsp;创建新部署 - 响应码</b></p><div class="table-contents"><table summary="创建新部署 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示部署已经创建了。</td></tr><tr><td>400</td><td>表示请求内没有内容，或部署不支持内容的mime-type。在状态描述中包含更新信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"10"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"activiti-examples.bar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"deploymentTime"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:54:26.750+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"category"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/service/repository/deployments/10"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"tenantId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myTenant"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="删除部署"><div class="titlepage"><div><div><h3 class="title"><a name="N1342C"></a>删除部署</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">DELETE repository</span><span class="pun">/</span><span class="pln">deployments</span><span class="pun">/{</span><span class="pln">deploymentId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13436"></a><p class="title"><b>Table&nbsp;15.15.&nbsp;删除部署 - URL参数</b></p><div class="table-contents"><table summary="删除部署 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>deploymentId</td><td>是</td><td>String</td><td>删除的部署id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N13452"></a><p class="title"><b>Table&nbsp;15.16.&nbsp;删除部署 - 响应码</b></p><div class="table-contents"><table summary="删除部署 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了部署并已经删除。响应体为空。</td></tr><tr><td>404</td><td>表示没有找到请求的部署。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="列出部署内的资源"><div class="titlepage"><div><div><h3 class="title"><a name="N13469"></a>列出部署内的资源</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">deployments</span><span class="pun">/{</span><span class="pln">deploymentId</span><span class="pun">}/</span><span class="pln">resources</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13473"></a><p class="title"><b>Table&nbsp;15.17.&nbsp;列出部署内的资源 - URL参数</b></p><div class="table-contents"><table summary="列出部署内的资源 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>deploymentId</td><td>是</td><td>String</td><td>获取资源的部署id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N1348F"></a><p class="title"><b>Table&nbsp;15.18.&nbsp;列出部署内的资源 - 响应码</b></p><div class="table-contents"><table summary="列出部署内的资源 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了部署，并返回了资源列表。</td></tr><tr><td>404</td><td>表示找不到请求的部署。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"diagrams/my-process.bpmn20.xml"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/repository/deployments/10/resources/diagrams%2Fmy-process.bpmn20.xml"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"dataUrl"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/repository/deployments/10/resourcedata/diagrams%2Fmy-process.bpmn20.xml"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"mediaType"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"text/xml"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"processDefinition"</span><span class="pln"><br>&nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"image.png"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/repository/deployments/10/resources/image.png"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"dataUrl"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/repository/deployments/10/resourcedata/image.png"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"mediaType"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"image/png"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"resource"</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">]</span></pre><p>

       </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">mediaType</code>：包含资源的media-type。这是使用（可插拔的）<code class="literal">MediaTypeResolver</code>处理的，默认已经支持了一些有限的mime-type映射。</p></li><li class="listitem"><p><code class="literal">type</code>：资源类型，可能值为：</p><div class="itemizedlist"><ul class="itemizedlist" type="circle"><li class="listitem"><p><code class="literal">resource</code>：原始资源。</p></li><li class="listitem"><p><code class="literal">processDefinition</code>：包含一个或多个流程定义的资源。它会被发布器处理。</p></li><li class="listitem"><p><code class="literal">processImage</code>：展示一个已发布流程定义的图形布局。</p></li></ul></div></li></ul></div><p>
    </p><p>
      <span class="emphasis"><em>结果json中的dataUrl属性包含了用来获取二进制资源的真实URL。</em></span>
    </p></div><div class="section" title="获取部署资源"><div class="titlepage"><div><div><h3 class="title"><a name="N134D3"></a>获取部署资源</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">deployments</span><span class="pun">/{</span><span class="pln">deploymentId</span><span class="pun">}/</span><span class="pln">resources</span><span class="pun">/{</span><span class="pln">resourceId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N134DD"></a><p class="title"><b>Table&nbsp;15.19.&nbsp;获取部署资源 - URL参数</b></p><div class="table-contents"><table summary="获取部署资源 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>deploymentId</td><td>是</td><td>String</td><td>部署ID是请求资源的一部分。</td></tr><tr><td>resourceId</td><td>是</td><td>String</td><td>获取资源的ID <span class="bold"><strong>确保URL对资源ID进行编码的情况下，包含斜杠，例如：使用'diagrams%2Fmy-process.bpmn20.xml' 代替 'diagrams/Fmy-process.bpmn20.xml'。</strong></span></td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N13505"></a><p class="title"><b>Table&nbsp;15.20.&nbsp;获取部署资源 - 响应码</b></p><div class="table-contents"><table summary="获取部署资源 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示部署和资源都已经找到并且部署的资源已经成功返回。</td></tr><tr><td>404</td><td>表示请求的部署并没有找到或者目前的部署对象并没有该资源ID。状态描述还包含一些额外信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"diagrams/my-process.bpmn20.xml"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/repository/deployments/10/resources/diagrams%2Fmy-process.bpmn20.xml"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"dataUrl"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/repository/deployments/10/resourcedata/diagrams%2Fmy-process.bpmn20.xml"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"mediaType"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"text/xml"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"processDefinition"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>

      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">mediaType</code>：包含资源的media-type。这是使用（可插拔的）<code class="literal">MediaTypeResolver</code>处理的，默认已经支持了一些有限的mime-type映射。</p></li><li class="listitem"><p><code class="literal">type</code>: 资源类型，可能的值</p><div class="itemizedlist"><ul class="itemizedlist" type="circle"><li class="listitem"><p><code class="literal">resource</code>: 原始资源.</p></li><li class="listitem"><p><code class="literal">processDefinition</code>: 包含一个或多个流程定义的资源。它会被发布器处理。</p></li><li class="listitem"><p><code class="literal">processImage</code>: 展示一个已发布流程定义的图形布局。</p></li></ul></div></li></ul></div><p>
    </p></div><div class="section" title="获取部署资源的内容"><div class="titlepage"><div><div><h3 class="title"><a name="N13544"></a>获取部署资源的内容</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">deployments</span><span class="pun">/{</span><span class="pln">deploymentId</span><span class="pun">}/</span><span class="pln">resourcedata</span><span class="pun">/{</span><span class="pln">resourceId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N1354E"></a><p class="title"><b>Table&nbsp;15.21.&nbsp;获取部署资源的内容 - URL参数</b></p><div class="table-contents"><table summary="获取部署资源的内容 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>deploymentId</td><td>是</td><td>String</td><td>部署ID是请求资源的一部分。</td></tr><tr><td>resourceId</td><td>是</td><td>String</td><td>资源ID获取数据 <span class="bold"><strong>确保URL对资源ID进行编码的情况下，包含斜杠，例如：使用'diagrams%2Fmy-process.bpmn20.xml' 代替 'diagrams/Fmy-process.bpmn20.xml'</strong></span></td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N13576"></a><p class="title"><b>Table&nbsp;15.22.&nbsp;获取部署资源的内容 - 响应码</b></p><div class="table-contents"><table summary="获取部署资源的内容 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示部署和资源都已经找到并且部署的资源已经成功返回。</td></tr><tr><td>404</td><td>表示请求的部署并没有找到或者目前的部署对象并没有该资源ID。状态描述还包含一些额外信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
    </p><p>根据请求的资源响应体将包含二进制的资源内容。响应体的content-type的'mimeType'属性将会和资源的返回类型相同。同样，响应头设置content-disposition，允许浏览器下载该文件而不是去显示它。
    </p></div></div><div class="section" title="流程定义"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N13595"></a>流程定义</h2></div></div></div><div class="section" title="流程定义列表"><div class="titlepage"><div><div><h3 class="title"><a name="N13598"></a>流程定义列表</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">definitions</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N135A2"></a><p class="title"><b>Table&nbsp;15.23.&nbsp;流程定义列表 - URL参数</b></p><div class="table-contents"><table summary="流程定义列表 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>version</td><td>否</td><td>integer</td><td>只返回给定版本的流程定义。</td></tr><tr><td>name</td><td>否</td><td>String</td><td>只返回给定名称的流程定义。</td></tr><tr><td>nameLike</td><td>否</td><td>String</td><td>只返回与给定名称匹配的流程定义。</td></tr><tr><td>key</td><td>否</td><td>String</td><td>只返回给定key的流程定义。</td></tr><tr><td>keyLike</td><td>否</td><td>String</td><td>只返回与给定key匹配的流程定义。</td></tr><tr><td>resourceName</td><td>否</td><td>String</td><td>只返回给定资源名称的流程定义。</td></tr><tr><td>resourceNameLike</td><td>否</td><td>String</td><td>只返回与给定资源名称匹配的流程定义。</td></tr><tr><td>category</td><td>否</td><td>String</td><td>只返回给定分类的流程定义。</td></tr><tr><td>categoryLike</td><td>否</td><td>String</td><td>只返回与给定分类匹配的流程定义。</td></tr><tr><td>categoryNotEquals</td><td>否</td><td>String</td><td>只返回非给定分类的流程定义。</td></tr><tr><td>deploymentId</td><td>否</td><td>String</td><td>只返回包含在与给定id一致的部署中的流程定义。</td></tr><tr><td>startableByUser</td><td>否</td><td>String</td><td>只返回给定用户可以启动的流程定义。</td></tr><tr><td>latest</td><td>否</td><td>Boolean</td><td>只返回最新的流程定义版本。只能与'key'或'keyLike'参数一起使用，如果使用了其他参数会返回400的响应。</td></tr><tr><td>suspended</td><td>否</td><td>Boolean</td><td>如果为<code class="literal">true</code>，只返回挂起的流程定义。如果为<code class="literal">false</code>，只返回活动的（未挂起）的流程定义。</td></tr><tr><td>sort</td><td>否</td><td>'name'（默认），'id'，'key'，'category'，'deploymentId'和'version'</td><td>排序的属性，可以与'order'一起使用。</td></tr><tr><td><p>也可以使用通用的<a class="link" href="#restPagingAndSort" title="分页与排序">分页与排序查询参数</a>。</p></td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N1364C"></a><p class="title"><b>Table&nbsp;15.24.&nbsp;流程定义列表 - 响应码</b></p><div class="table-contents"><table summary="流程定义列表 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，流程定义已返回。</td></tr><tr><td>400</td><td>表示传递的参数格式错误，或'latest'与'key'，'keyLike'之外的其他参数一起使用了。状态信息包含更多信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess:1:4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"version"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"key"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"category"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Examples"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"suspended"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"The One Task Process"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"description"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"This is a process for testing purposes"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"deploymentId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"deploymentUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/repository/deployments/2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"graphicalNotationDefined"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"resource"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/deployments/2/resources/testProcess.xml"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"diagramResource"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/deployments/2/resources/testProcess.png"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startFormDefined"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">graphicalNotationDefined</code>：表示流程定义包含图形信息（BPMN DI）。</p></li><li class="listitem"><p><code class="literal">resource</code>：包含实际部署的BPMN 2.0 xml。</p></li><li class="listitem"><p><code class="literal">diagramResource</code>：包含流程的图形内容，如果没有图形就返回null。</p></li></ul></div><p>
    </p></div><div class="section" title="获得一个流程定义"><div class="titlepage"><div><div><h3 class="title"><a name="N1367D"></a>获得一个流程定义</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">definitions</span><span class="pun">/{</span><span class="pln">processDefinitionId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13687"></a><p class="title"><b>Table&nbsp;15.25.&nbsp;获得一个流程定义 - URL参数</b></p><div class="table-contents"><table summary="获得一个流程定义 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processDefinitionId</td><td>是</td><td>String</td><td>希望获取的流程定义的id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N136A3"></a><p class="title"><b>Table&nbsp;15.26.&nbsp;获得一个流程定义 - 响应码</b></p><div class="table-contents"><table summary="获得一个流程定义 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了流程定义，并返回了结果。</td></tr><tr><td>404</td><td>表示找不到请求的流程定义。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess:1:4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"version"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"key"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"category"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Examples"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"suspended"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"The One Task Process"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"description"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"This is a process for testing purposes"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"deploymentId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"deploymentUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/repository/deployments/2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"graphicalNotationDefined"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"resource"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/deployments/2/resources/testProcess.xml"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"diagramResource"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/deployments/2/resources/testProcess.png"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"startFormDefined"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">graphicalNotationDefined</code>：表示流程定义包含图形信息（BPMN DI）。</p></li><li class="listitem"><p><code class="literal">resource</code>：包含实际部署的BPMN 2.0 xml。</p></li><li class="listitem"><p><code class="literal">diagramResource</code>：包含流程的图形内容，如果没有图形就返回null。</p></li></ul></div><p>
    </p></div><div class="section" title="更新流程定义的分类"><div class="titlepage"><div><div><h3 class="title"><a name="N136D4"></a>更新流程定义的分类</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT repository</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">definitions</span><span class="pun">/{</span><span class="pln">processDefinitionId</span><span class="pun">}</span></pre><p>
        </p><p>
         <span class="bold"><strong>请求的JSON：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"category"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"updatedcategory"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
        </p><p>
          </p><div class="table"><a name="N136E7"></a><p class="title"><b>Table&nbsp;15.27.&nbsp;更新流程定义的分类 - 响应码</b></p><div class="table-contents"><table summary="更新流程定义的分类 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示已经修改了流程的分类。</td></tr><tr><td>400</td><td>表示请求体中没有传递分类。</td></tr><tr><td>404</td><td>表示找不到请求的流程定义。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>参考<code class="literal">repository/process-definitions/{processDefinitionId}</code>.
      </p></div><div class="section" title="获得一个流程定义的资源内容"><div class="titlepage"><div><div><h3 class="title"><a name="N1370C"></a>获得一个流程定义的资源内容</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">definitions</span><span class="pun">/{</span><span class="pln">processDefinitionId</span><span class="pun">}/</span><span class="pln">resourcedata</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13716"></a><p class="title"><b>Table&nbsp;15.28.&nbsp;获得一个流程定义的资源内容 - URL参数</b></p><div class="table-contents"><table summary="获得一个流程定义的资源内容 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processDefinitionId</td><td>是</td><td>String</td><td>期望获得资源数据的流程定义的id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>响应：</strong></span>
    </p><p>
      与 <code class="literal">GET repository/deployment/{deploymentId}/resourcedata/{resourceId}</code>的响应码和响应体完全一致。
    </p></div><div class="section" title="获得流程定义的BPMN模型"><div class="titlepage"><div><div><h3 class="title"><a name="N1373B"></a>获得流程定义的BPMN模型</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">definitions</span><span class="pun">/{</span><span class="pln">processDefinitionId</span><span class="pun">}/</span><span class="pln">model</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13745"></a><p class="title"><b>Table&nbsp;15.29.&nbsp;获得流程定义的BPMN模型 - URL参数</b></p><div class="table-contents"><table summary="获得流程定义的BPMN模型 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processDefinitionId</td><td>是</td><td>String</td><td>期望获得模型的流程定义的id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N13761"></a><p class="title"><b>Table&nbsp;15.30.&nbsp;获得流程定义的BPMN模型 - 响应码</b></p><div class="table-contents"><table summary="获得流程定义的BPMN模型 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示已找到流程定义，并返回了模型。</td></tr><tr><td>404</td><td>表示找不到请求的流程定义。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>响应体：</strong></span>
       响应体是一个转换为JSON格式的<code class="literal">org.activiti.bpmn.model.BpmnModel</code>，包含整个流程定义模型。
</p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"processes"</span><span class="pun">:[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"oneTaskProcess"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"xmlRowNumber"</span><span class="pun">:</span><span class="lit">7</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"xmlColumnNumber"</span><span class="pun">:</span><span class="lit">60</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"extensionElements"</span><span class="pun">:{</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"name"</span><span class="pun">:</span><span class="str">"The One Task Process"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"executable"</span><span class="pun">:</span><span class="kwd">true</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"documentation"</span><span class="pun">:</span><span class="str">"One task process description"</span><span class="pun">,</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">],</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p><p>

    </p></div><div class="section" title="暂停流程定义"><div class="titlepage"><div><div><h3 class="title"><a name="N13786"></a>暂停流程定义</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT repository</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">definitions</span><span class="pun">/{</span><span class="pln">processDefinitionId</span><span class="pun">}</span></pre><p>
        </p><p>
         <span class="bold"><strong>请求JSON体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"action"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"suspend"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"includeProcessInstances"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"false"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"date"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-15T00:42:12Z"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
        </p><div class="table"><a name="processDefinitionActionBodyParameters"></a><p class="title"><b>Table&nbsp;15.31.&nbsp;暂停流程定义 - 请求的JSON参数</b></p><div class="table-contents"><table summary="暂停流程定义 - 请求的JSON参数" border="1"><colgroup><col><col></colgroup><thead><tr><th>参数</th><th>描述</th><th>是否必须</th></tr></thead><tbody><tr><td>action</td><td>执行的动作。<code class="literal">activate</code> 或 <code class="literal">suspend</code>。</td><td>是</td></tr><tr><td>includeProcessInstances</td><td>是否把流程定义下正在运行的流程时也暂停或激活。如果忽略，就不改变流程实例的状态。</td><td>否</td></tr><tr><td>date</td><td>执行暂停或激活的日期（ISO-8601格式）。如果忽略，会立即执行暂停或激活。</td><td>否</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N137C4"></a><p class="title"><b>Table&nbsp;15.32.&nbsp;暂停流程定义 - 响应码</b></p><div class="table-contents"><table summary="暂停流程定义 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示暂停流程成功。</td></tr><tr><td>404</td><td>表示找不到请求的流程定义。</td></tr><tr><td>409</td><td>表示请求的流程定义已经暂停了。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span> 参考 <code class="literal">repository/process-definitions/{processDefinitionId}</code>的响应。
      </p></div><div class="section" title="激活流程定义"><div class="titlepage"><div><div><h3 class="title"><a name="N137E9"></a>激活流程定义</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT repository</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">definitions</span><span class="pun">/{</span><span class="pln">processDefinitionId</span><span class="pun">}</span></pre><p>
        </p><p>
         <span class="bold"><strong>请求JSON体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"action"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"activate"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"includeProcessInstances"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"true"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"date"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-15T00:42:12Z"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>

        参考暂停流程定义的 <a class="link" href="#processDefinitionActionBodyParameters" title="Table&nbsp;15.31.&nbsp;暂停流程定义 - 请求的JSON参数">JSON参数</a>。
        </p><p>
          </p><div class="table"><a name="N13800"></a><p class="title"><b>Table&nbsp;15.33.&nbsp;激活流程定义 - 响应码</b></p><div class="table-contents"><table summary="激活流程定义 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示激活流程成功。</td></tr><tr><td>404</td><td>表示找不到请求的流程定义</td></tr><tr><td>409</td><td>表示请求的流程定义已经激活了。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span> 参考 <code class="literal">repository/process-definitions/{processDefinitionId}</code>的响应。
      </p></div><div class="section" title="获得流程定义的所有候选启动者"><div class="titlepage"><div><div><h3 class="title"><a name="N13825"></a>获得流程定义的所有候选启动者</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">definitions</span><span class="pun">/{</span><span class="pln">processDefinitionId</span><span class="pun">}/</span><span class="pln">identitylinks</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N1382F"></a><p class="title"><b>Table&nbsp;15.34.&nbsp;获得流程定义的所有候选启动者 - URL参数</b></p><div class="table-contents"><table summary="获得流程定义的所有候选启动者 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processDefinitionId</td><td>是</td><td>String</td><td>期望获得IdentityLink的流程定义id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N1384B"></a><p class="title"><b>Table&nbsp;15.35.&nbsp;获得流程定义的所有候选启动者 - 响应码</b></p><div class="table-contents"><table summary="获得流程定义的所有候选启动者 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示已找到流程定义，并返回了请求的IdentityLink。</td></tr><tr><td>404</td><td>表示找不到请求的流程定义。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4/identitylinks/groups/admin"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"user"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"group"</span><span class="pun">:</span><span class="str">"admin"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"candidate"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4/identitylinks/users/kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"user"</span><span class="pun">:</span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"group"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"candidate"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">}</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
    </p></div><div class="section" title="为流程定义添加一个候选启动者"><div class="titlepage"><div><div><h3 class="title"><a name="N1386B"></a>为流程定义添加一个候选启动者</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">POST repository</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">definitions</span><span class="pun">/{</span><span class="pln">processDefinitionId</span><span class="pun">}/</span><span class="pln">identitylinks</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N13875"></a><p class="title"><b>Table&nbsp;15.36.&nbsp;为流程定义添加一个候选启动者 - URL参数</b></p><div class="table-contents"><table summary="为流程定义添加一个候选启动者 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>processDefinitionId</td><td>是</td><td>String</td><td>流程定义的id。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
       <span class="bold"><strong>请求体（用户）：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"user"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p><p>
       <span class="bold"><strong>请求体（组）：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"groupId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"sales"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p><p>
        </p><div class="table"><a name="N138A3"></a><p class="title"><b>Table&nbsp;15.37.&nbsp;为流程定义添加一个候选启动者 - 响应码</b></p><div class="table-contents"><table summary="为流程定义添加一个候选启动者 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示找到了流程定义，并创建了IdentityLink。</td></tr><tr><td>404</td><td>表示找不到请求的流程定义。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4/identitylinks/users/kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"user"</span><span class="pun">:</span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"group"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"candidate"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="删除流程定义的候选启动者"><div class="titlepage"><div><div><h3 class="title"><a name="N138C3"></a>删除流程定义的候选启动者</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">DELETE repository</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">definitions</span><span class="pun">/{</span><span class="pln">processDefinitionId</span><span class="pun">}/</span><span class="pln">identitylinks</span><span class="pun">/{</span><span class="pln">family</span><span class="pun">}/{</span><span class="pln">identityId</span><span class="pun">}</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N138CD"></a><p class="title"><b>Table&nbsp;15.38.&nbsp;删除流程定义的候选启动者 - URL参数</b></p><div class="table-contents"><table summary="删除流程定义的候选启动者 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>processDefinitionId</td><td>是</td><td>String</td><td>流程定义的id。</td></tr><tr><td>family</td><td>是</td><td>String</td><td><code class="literal">users</code> 或 <code class="literal">groups</code>，依赖IdentityLink的类型。</td></tr><tr><td>identityId</td><td>是</td><td>String</td><td>需要删除的候选创建者的身份的userId 或 groupId。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        </p><div class="table"><a name="N13900"></a><p class="title"><b>Table&nbsp;15.39.&nbsp;删除流程定义的候选启动者 - 响应码</b></p><div class="table-contents"><table summary="删除流程定义的候选启动者 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了流程定义，并删除了IdentityLink。响应体为空。</td></tr><tr><td>404</td><td>表示找不到请求的流程定义，或者在流程定义中找不到与url匹配的IdentityLink。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4/identitylinks/users/kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"user"</span><span class="pun">:</span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"group"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"candidate"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="获得流程定义的一个候选启动者"><div class="titlepage"><div><div><h3 class="title"><a name="N13920"></a>获得流程定义的一个候选启动者</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">definitions</span><span class="pun">/{</span><span class="pln">processDefinitionId</span><span class="pun">}/</span><span class="pln">identitylinks</span><span class="pun">/{</span><span class="pln">family</span><span class="pun">}/{</span><span class="pln">identityId</span><span class="pun">}</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N1392A"></a><p class="title"><b>Table&nbsp;15.40.&nbsp;获得流程定义的一个候选启动者 - URL参数</b></p><div class="table-contents"><table summary="获得流程定义的一个候选启动者 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>processDefinitionId</td><td>是</td><td>String</td><td>流程定义的id。</td></tr><tr><td>family</td><td>是</td><td>String</td><td><code class="literal">users</code> 或 <code class="literal">groups</code>，依赖IdentityLink的类型。</td></tr><tr><td>identityId</td><td>是</td><td>String</td><td>用来获得候选启动者的身份的userId 或 groupId。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        </p><div class="table"><a name="N1395D"></a><p class="title"><b>Table&nbsp;15.41.&nbsp;获得流程定义的一个候选启动者 - 响应码</b></p><div class="table-contents"><table summary="获得流程定义的一个候选启动者 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了流程定义，并返回了IdentityLink。</td></tr><tr><td>404</td><td>表示找不到请求的流程定义，或者在流程定义中找不到与url匹配的IdentityLink。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4/identitylinks/users/kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"user"</span><span class="pun">:</span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"group"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"candidate"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div></div><div class="section" title="模型"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N1397D"></a>模型</h2></div></div></div><div class="section" title="获得模型列表"><div class="titlepage"><div><div><h3 class="title"><a name="N13980"></a>获得模型列表</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">models</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N1398A"></a><p class="title"><b>Table&nbsp;15.42.&nbsp;获得模型列表 - URL参数</b></p><div class="table-contents"><table summary="获得模型列表 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>否</td><td>String</td><td>指返回指定id的模型。</td></tr><tr><td>category</td><td>否</td><td>String</td><td>只返回指定分类的模型。</td></tr><tr><td>categoryLike</td><td>否</td><td>String</td><td>只返回与给定分类匹配的模型。使用<code class="literal">%</code>作为通配符。</td></tr><tr><td>categoryNotEquals</td><td>否</td><td>String</td><td>只返回非指定分类的模型。</td></tr><tr><td>name</td><td>否</td><td>String</td><td>只返回指定名称的模型。</td></tr><tr><td>nameLike</td><td>否</td><td>String</td><td>只返回与指定名称匹配的模型。使用<code class="literal">%</code>作为通配符。</td></tr><tr><td>key</td><td>否</td><td>String</td><td>只返回指定key的模型。</td></tr><tr><td>deploymentId</td><td>否</td><td>String</td><td>只返回包含在指定部署包中的模型。</td></tr><tr><td>version</td><td>否</td><td>Integer</td><td>只返回指定版本的模型。</td></tr><tr><td>latestVersion</td><td>否</td><td>Boolean</td><td>如果为 <code class="literal">true</code>，只返回最新版本的模型。最好与<code class="literal">key</code>一起使用。如果为 <code class="literal">false</code>，就会返回所有版本。</td></tr><tr><td>deployed</td><td>否</td><td>Boolean</td><td>如果为 <code class="literal">true</code>，只返回已部署的模型。如果为 <code class="literal">false</code>，只返回未部署的模型（deploymentId为null）。</td></tr><tr><td>tenantId</td><td>否</td><td>String</td><td>只返回指定tenantId的模型。</td></tr><tr><td>tenantIdLike</td><td>否</td><td>String</td><td>只返回与指定tenantId匹配的模型。</td></tr><tr><td>withoutTenantId</td><td>否</td><td>Boolean</td><td>如果为 <code class="literal">true</code>，只返回没有设置tenantId的模型。如果为 <code class="literal">false</code>，会忽略 <code class="literal">withoutTenantId</code> 参数。</td></tr><tr><td>sort</td><td>否</td><td>'id' (默认), 'category', 'createTime', 'key', 'lastUpdateTime', 'name'，'version'或'tenantId'</td><td>排序的字段，和'order'一起使用。</td></tr><tr><td><p>可以使用通用的 <a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a>。</p></td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N13A4C"></a><p class="title"><b>Table&nbsp;15.43.&nbsp;获得模型列表 - 响应码</b></p><div class="table-contents"><table summary="获得模型列表 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，并返回了模型</td></tr><tr><td>400</td><td>表示传递的参数格式错误。状态信息中包含更多信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"data"</span><span class="pun">:[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Model name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"key"</span><span class="pun">:</span><span class="str">"Model key"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"category"</span><span class="pun">:</span><span class="str">"Model category"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"version"</span><span class="pun">:</span><span class="lit">2</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"metaInfo"</span><span class="pun">:</span><span class="str">"Model metainfo"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"deploymentId"</span><span class="pun">:</span><span class="str">"7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"10"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/models/10"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"createTime"</span><span class="pun">:</span><span class="str">"2013-06-12T14:31:08.612+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"lastUpdateTime"</span><span class="pun">:</span><span class="str">"2013-06-12T14:31:08.612+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"deploymentUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/deployments/7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br><br>&nbsp; &nbsp;</span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"total"</span><span class="pun">:</span><span class="lit">2</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"start"</span><span class="pun">:</span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"sort"</span><span class="pun">:</span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"order"</span><span class="pun">:</span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"size"</span><span class="pun">:</span><span class="lit">2</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="获得一个模型"><div class="titlepage"><div><div><h3 class="title"><a name="N13A6C"></a>获得一个模型</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">models</span><span class="pun">/{</span><span class="pln">modelId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13A76"></a><p class="title"><b>Table&nbsp;15.44.&nbsp;获得一个模型 - URL参数</b></p><div class="table-contents"><table summary="获得一个模型 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>modelId</td><td>是</td><td>String</td><td>希望获得的模型id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N13A92"></a><p class="title"><b>Table&nbsp;15.45.&nbsp;获得一个模型 - 响应码</b></p><div class="table-contents"><table summary="获得一个模型 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了模型并成功返回了。</td></tr><tr><td>404</td><td>表示找不到请求的模型。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/models/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Model name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"key"</span><span class="pun">:</span><span class="str">"Model key"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"category"</span><span class="pun">:</span><span class="str">"Model category"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"version"</span><span class="pun">:</span><span class="lit">2</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"metaInfo"</span><span class="pun">:</span><span class="str">"Model metainfo"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"deploymentId"</span><span class="pun">:</span><span class="str">"2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"deploymentUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/deployments/2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"createTime"</span><span class="pun">:</span><span class="str">"2013-06-12T12:31:19.861+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"lastUpdateTime"</span><span class="pun">:</span><span class="str">"2013-06-12T12:31:19.861+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="更新模型"><div class="titlepage"><div><div><h3 class="title"><a name="N13AB2"></a>更新模型</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT repository</span><span class="pun">/</span><span class="pln">models</span><span class="pun">/{</span><span class="pln">modelId</span><span class="pun">}</span></pre><p>
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Model name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"key"</span><span class="pun">:</span><span class="str">"Model key"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"category"</span><span class="pun">:</span><span class="str">"Model category"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"version"</span><span class="pun">:</span><span class="lit">2</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"metaInfo"</span><span class="pun">:</span><span class="str">"Model metainfo"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"deploymentId"</span><span class="pun">:</span><span class="str">"2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="str">"updatedTenant"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
   所有请求参数都是可选的。比如，你可以只在请求体的JSON对象中包含'name'属性，只更新模型的名称，这样其他的字段都不会受到影响。如果显示包含了一个属性，并设置为null，模型值会被更新为null。比如：<code class="literal">{"metaInfo" : null}</code>会清空模型的metaInfo。
    </p><p>
          </p><div class="table"><a name="N13AC8"></a><p class="title"><b>Table&nbsp;15.46.&nbsp;更新模型 - 响应码</b></p><div class="table-contents"><table summary="更新模型 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了模型，并成功更新。</td></tr><tr><td>404</td><td>表示找不到请求的模型。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/models/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Model name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"key"</span><span class="pun">:</span><span class="str">"Model key"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"category"</span><span class="pun">:</span><span class="str">"Model category"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"version"</span><span class="pun">:</span><span class="lit">2</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"metaInfo"</span><span class="pun">:</span><span class="str">"Model metainfo"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"deploymentId"</span><span class="pun">:</span><span class="str">"2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"deploymentUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/deployments/2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"createTime"</span><span class="pun">:</span><span class="str">"2013-06-12T12:31:19.861+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"lastUpdateTime"</span><span class="pun">:</span><span class="str">"2013-06-12T12:31:19.861+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="str">""</span><span class="pln">updatedTenant</span><span class="str">"<br>}</span></pre><p>
    </p></div><div class="section" title="新建模型"><div class="titlepage"><div><div><h3 class="title"><a name="N13AE8"></a>新建模型</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST repository</span><span class="pun">/</span><span class="pln">models</span></pre><p>
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Model name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"key"</span><span class="pun">:</span><span class="str">"Model key"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"category"</span><span class="pun">:</span><span class="str">"Model category"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"version"</span><span class="pun">:</span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"metaInfo"</span><span class="pun">:</span><span class="str">"Model metainfo"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"deploymentId"</span><span class="pun">:</span><span class="str">"2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="str">"tenant"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
   All request values are optional. For example, you can only include the 'name' attribute in the request body JSON-object, only setting the name of the model, leaving all other fields null.
    </p><p>
          </p><div class="table"><a name="N13AFB"></a><p class="title"><b>Table&nbsp;15.47.&nbsp;新建模型 - 响应码</b></p><div class="table-contents"><table summary="新建模型 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示成功创建了模型。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/models/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Model name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"key"</span><span class="pun">:</span><span class="str">"Model key"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"category"</span><span class="pun">:</span><span class="str">"Model category"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"version"</span><span class="pun">:</span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"metaInfo"</span><span class="pun">:</span><span class="str">"Model metainfo"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"deploymentId"</span><span class="pun">:</span><span class="str">"2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"deploymentUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/deployments/2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"createTime"</span><span class="pun">:</span><span class="str">"2013-06-12T12:31:19.861+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"lastUpdateTime"</span><span class="pun">:</span><span class="str">"2013-06-12T12:31:19.861+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="str">"tenant"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="删除模型"><div class="titlepage"><div><div><h3 class="title"><a name="N13B16"></a>删除模型</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">DELETE repository</span><span class="pun">/</span><span class="pln">models</span><span class="pun">/{</span><span class="pln">modelId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13B20"></a><p class="title"><b>Table&nbsp;15.48.&nbsp;删除模型 - URL参数</b></p><div class="table-contents"><table summary="删除模型 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>modelId</td><td>是</td><td>String</td><td>希望删除的模型id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N13B3C"></a><p class="title"><b>Table&nbsp;15.49.&nbsp;删除模型 - 响应码</b></p><div class="table-contents"><table summary="删除模型 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了模型并成功删除。响应体为空。</td></tr><tr><td>404</td><td>表示找不到请求的模型。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得模型的可编译源码"><div class="titlepage"><div><div><h3 class="title"><a name="N13B53"></a>获得模型的可编译源码</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">models</span><span class="pun">/{</span><span class="pln">modelId</span><span class="pun">}/</span><span class="pln">source</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13B5D"></a><p class="title"><b>Table&nbsp;15.50.&nbsp;获得模型的可编译源码 - URL参数</b></p><div class="table-contents"><table summary="获得模型的可编译源码 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>modelId</td><td>是</td><td>String</td><td>模型id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N13B79"></a><p class="title"><b>Table&nbsp;15.51.&nbsp;获得模型的可编译源码 - 响应码</b></p><div class="table-contents"><table summary="获得模型的可编译源码 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了模型并返回了源码。</td></tr><tr><td>404</td><td>表示找不到请求的模型。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
       响应体包含了模型的原始可编译源码。无论源码的内容是什么，响应的content-type都设置为<code class="literal">application/octet-stream</code>。
    </p></div><div class="section" title="设置模型的可编辑源码"><div class="titlepage"><div><div><h3 class="title"><a name="N13B99"></a>设置模型的可编辑源码</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">PUT repository</span><span class="pun">/</span><span class="pln">models</span><span class="pun">/{</span><span class="pln">modelId</span><span class="pun">}/</span><span class="pln">source</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N13BA3"></a><p class="title"><b>Table&nbsp;15.52.&nbsp;设置模型的可编辑源码 - URL参数</b></p><div class="table-contents"><table summary="设置模型的可编辑源码 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>modelId</td><td>是</td><td>String</td><td>模型的id。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
       <span class="bold"><strong>请求体：</strong></span>
           请求应该是<code class="literal">multipart/form-data</code>类型。应该只有一个文件区域，包含源码的二进制内容。
        </p><p>
          </p><div class="table"><a name="N13BC8"></a><p class="title"><b>Table&nbsp;15.53.&nbsp;设置模型的可编辑源码 - 响应码</b></p><div class="table-contents"><table summary="设置模型的可编辑源码 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了模型并更新了源码。</td></tr><tr><td>404</td><td>表示找不到请求的模型。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
       响应体包含了模型的原始可编译源码。无论源码的内容是什么，响应的content-type都设置为<code class="literal">application/octet-stream</code>。
    </p></div><div class="section" title="获得模型的附加可编辑源码"><div class="titlepage"><div><div><h3 class="title"><a name="N13BE8"></a>获得模型的附加可编辑源码</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET repository</span><span class="pun">/</span><span class="pln">models</span><span class="pun">/{</span><span class="pln">modelId</span><span class="pun">}/</span><span class="pln">source</span><span class="pun">-</span><span class="pln">extra</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13BF2"></a><p class="title"><b>Table&nbsp;15.54.&nbsp;获得模型的附加可编辑源码 - URL参数</b></p><div class="table-contents"><table summary="获得模型的附加可编辑源码 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>modelId</td><td>是</td><td>String</td><td>模型id</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N13C0E"></a><p class="title"><b>Table&nbsp;15.55.&nbsp;获得模型的附加可编辑源码 - 响应码</b></p><div class="table-contents"><table summary="获得模型的附加可编辑源码 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了模型并返回了源码。</td></tr><tr><td>404</td><td>表示找不到请求的模型。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
       响应体包含了模型的原始可编译源码。无论附加源码的内容是什么，响应的content-type都设置为<code class="literal">application/octet-stream</code>。
    </p></div><div class="section" title="设置模型的附加可编辑源码"><div class="titlepage"><div><div><h3 class="title"><a name="N13C2E"></a>设置模型的附加可编辑源码</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">PUT repository</span><span class="pun">/</span><span class="pln">models</span><span class="pun">/{</span><span class="pln">modelId</span><span class="pun">}/</span><span class="pln">source</span><span class="pun">-</span><span class="pln">extra</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N13C38"></a><p class="title"><b>Table&nbsp;15.56.&nbsp;设置模型的附加可编辑源码 - URL参数</b></p><div class="table-contents"><table summary="设置模型的附加可编辑源码 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>modelId</td><td>是</td><td>String</td><td>模型id</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
       <span class="bold"><strong>请求体：</strong></span>
           请求应该是<code class="literal">multipart/form-data</code>类型。应该只有一个文件区域，包含源码的二进制内容
        </p><p>
          </p><div class="table"><a name="N13C5D"></a><p class="title"><b>Table&nbsp;15.57.&nbsp;设置模型的附加可编辑源码 - 响应码</b></p><div class="table-contents"><table summary="设置模型的附加可编辑源码 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了模型并更新了附加源码。</td></tr><tr><td>404</td><td>表示找不到请求的模型。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
       响应体包含了模型的原始可编译源码。无论附加源码的内容是什么，响应的content-type都设置为<code class="literal">application/octet-stream</code>。
    </p></div></div><div class="section" title="流程实例"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N13C7D"></a>流程实例</h2></div></div></div><div class="section" title="获得流程实例"><div class="titlepage"><div><div><h3 class="title"><a name="N13C80"></a>获得流程实例</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13C8A"></a><p class="title"><b>Table&nbsp;15.58.&nbsp;获得流程实例 - URL参数</b></p><div class="table-contents"><table summary="获得流程实例 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>流程实例id</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N13CA6"></a><p class="title"><b>Table&nbsp;15.59.&nbsp;获得流程实例 - 响应码</b></p><div class="table-contents"><table summary="获得流程实例 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了流程实例并成功返回。</td></tr><tr><td>404</td><td>表示找不到请求的流程实例</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"businessKey"</span><span class="pun">:</span><span class="str">"myBusinessKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"suspended"</span><span class="pun">:</span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"processDefinitionUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/process-definitions/processOne%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"activityId"</span><span class="pun">:</span><span class="str">"processTask"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="删除流程实例"><div class="titlepage"><div><div><h3 class="title"><a name="N13CC6"></a>删除流程实例</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">DELETE runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13CD0"></a><p class="title"><b>Table&nbsp;15.60.&nbsp;删除流程实例 - URL参数</b></p><div class="table-contents"><table summary="删除流程实例 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>希望删除的流程实例id</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N13CEC"></a><p class="title"><b>Table&nbsp;15.61.&nbsp;删除流程实例 - 响应码</b></p><div class="table-contents"><table summary="删除流程实例 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了流程实例并已删除。响应内容为空。</td></tr><tr><td>404</td><td>表示找不到请求的流程实例</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="激活或挂起流程实例"><div class="titlepage"><div><div><h3 class="title"><a name="N13D03"></a>激活或挂起流程实例</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13D0D"></a><p class="title"><b>Table&nbsp;15.62.&nbsp;激活或挂起流程实例 - URL参数</b></p><div class="table-contents"><table summary="激活或挂起流程实例 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>希望激活或挂起的流程实例id</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求响应体（挂起）：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"action"</span><span class="pun">:</span><span class="str">"suspend"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p><p>
       <span class="bold"><strong>请求响应体（激活）：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"action"</span><span class="pun">:</span><span class="str">"activate"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p><p>
          </p><div class="table"><a name="N13D3B"></a><p class="title"><b>Table&nbsp;15.63.&nbsp;激活或挂起流程实例 - 响应码</b></p><div class="table-contents"><table summary="激活或挂起流程实例 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了流程实例并执行了对应操作。</td></tr><tr><td>400</td><td>表示提供的操作不合法。</td></tr><tr><td>404</td><td>表示找不到请求的流程实例</td></tr><tr><td>409</td><td>表示无法执行请求的流程实例操作，因为流程实例已经激活或挂起了。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="启动流程实例"><div class="titlepage"><div><div><h3 class="title"><a name="N13D5C"></a>启动流程实例</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span></pre><p>
        </p><p>
       <span class="bold"><strong>请求体（使用流程定义id启动）：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"processDefinitionId"</span><span class="pun">:</span><span class="str">"oneTaskProcess:1:158"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"businessKey"</span><span class="pun">:</span><span class="str">"myBusinessKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"variables"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"myVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="str">"This is a variable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p><p>
       <span class="bold"><strong>请求体（使用流程定义key启动）：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"processDefinitionKey"</span><span class="pun">:</span><span class="str">"oneTaskProcess"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"businessKey"</span><span class="pun">:</span><span class="str">"myBusinessKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"tenant1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"variables"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"myVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="str">"This is a variable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p><p>
       <span class="bold"><strong>请求体（使用message启动）：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"message"</span><span class="pun">:</span><span class="str">"newOrderMessage"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"businessKey"</span><span class="pun">:</span><span class="str">"myBusinessKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"tenant1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"variables"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"myVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="str">"This is a variable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p><p>
	请求体中只能使用<code class="literal">processDefinitionId</code>，<code class="literal">processDefinitionKey</code>或<code class="literal">message</code>三者之一。参数<code class="literal">businessKey</code>，<code class="literal">variables</code>和<code class="literal">tenantId</code>都是可选的。
	可以在<a class="link" href="#restVariables" title="变量格式">REST变量章节</a>了解更多关于变量格式的信息。注意忽略变量作用域，流程变量总是<code class="literal">local</code>。
    </p><p>
          </p><div class="table"><a name="N13D9C"></a><p class="title"><b>Table&nbsp;15.64.&nbsp;启动流程实例 - 响应码</b></p><div class="table-contents"><table summary="启动流程实例 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示成功启动了流程实例。</td></tr><tr><td>400</td><td>表示要么找到不到流程定义（基于id或key），要么指定的message不会启动流程，要么传递了非法的变量。状态描述中包含了错误相关的额外信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"businessKey"</span><span class="pun">:</span><span class="str">"myBusinessKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"suspended"</span><span class="pun">:</span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"processDefinitionUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/process-definitions/processOne%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"activityId"</span><span class="pun">:</span><span class="str">"processTask"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="显示流程实例列表"><div class="titlepage"><div><div><h3 class="title"><a name="restProcessInstancesGet"></a>显示流程实例列表</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13DC7"></a><p class="title"><b>Table&nbsp;15.65.&nbsp;显示流程实例列表 - URL参数</b></p><div class="table-contents"><table summary="显示流程实例列表 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>否</td><td>String</td><td>只返回指定id的流程实例。</td></tr><tr><td>processDefinitionKey</td><td>否</td><td>String</td><td>只返回指定流程定义key的流程实例。</td></tr><tr><td>processDefinitionId</td><td>否</td><td>String</td><td>只返回指定流程定义id的流程实例。</td></tr><tr><td>businessKey</td><td>否</td><td>String</td><td>只返回指定businessKey的流程实例。</td></tr><tr><td>involvedUser</td><td>否</td><td>String</td><td>只返回指定用户参与过的流程实例。</td></tr><tr><td>suspended</td><td>否</td><td>Boolean</td><td>如果为 <code class="literal">true</code>，只返回挂起的流程实例。如果为 <code class="literal">false</code>，只返回未挂起（激活）的流程实例。</td></tr><tr><td>superProcessInstanceId</td><td>否</td><td>String</td><td>只返回指定上级流程实例id的流程实例（对应call-activity）。</td></tr><tr><td>subProcessInstanceId</td><td>否</td><td>String</td><td>只返回指定子流程id的流程实例（对方call-activity）。</td></tr><tr><td>excludeSubprocesses</td><td>否</td><td>Boolean</td><td>只返回非子流程的流程实例。</td></tr><tr><td>includeProcessVariables</td><td>否</td><td>Boolean</td><td>表示结果中包含流程变量。</td></tr><tr><td>tenantId</td><td>否</td><td>String</td><td>只返回指定tenantId的流程实例。</td></tr><tr><td>tenantIdLike</td><td>否</td><td>String</td><td>只返回与指定tenantId匹配的流程实例。</td></tr><tr><td>withoutTenantId</td><td>否</td><td>Boolean</td><td>如果为 <code class="literal">true</code>，只返回未设置tenantId的流程实例。如果为 <code class="literal">false</code>，会忽略 <code class="literal">withoutTenantId</code> 参数。</td></tr><tr><td>sort</td><td>否</td><td>String</td><td>排序字段，应该为<code class="literal">id</code>（默认），<code class="literal">processDefinitionId</code>，<code class="literal">tenantId</code> 或 <code class="literal">processDefinitionKey</code>三者之一。</td></tr><tr><td><p>可以使用通用的<a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a>。</p></td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N13E7D"></a><p class="title"><b>Table&nbsp;15.66.&nbsp;显示流程实例列表 - 响应码</b></p><div class="table-contents"><table summary="显示流程实例列表 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，并返回了流程实例。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"data"</span><span class="pun">:[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"businessKey"</span><span class="pun">:</span><span class="str">"myBusinessKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"suspended"</span><span class="pun">:</span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"processDefinitionUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/process-definitions/processOne%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"activityId"</span><span class="pun">:</span><span class="str">"processTask"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"total"</span><span class="pun">:</span><span class="lit">2</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"start"</span><span class="pun">:</span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"sort"</span><span class="pun">:</span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"order"</span><span class="pun">:</span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"size"</span><span class="pun">:</span><span class="lit">2</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="查询流程实例"><div class="titlepage"><div><div><h3 class="title"><a name="N13E9D"></a>查询流程实例</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST query</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span></pre><p>
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"processDefinitionKey"</span><span class="pun">:</span><span class="str">"oneTaskProcess"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"variables"</span><span class="pun">:</span><span class="pln"><br>&nbsp; </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">1234</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"operation"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"equals"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"long"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="pun">...</span><span class="pln"><br></span><span class="pun">}</span></pre><p>

请求体可以包含所有用于<a class="link" href="#restProcessInstancesGet" title="显示流程实例列表">显示流程实例列表</a>中的查询参数。除此之外，查询条件中也可以使用变量列表，格式<a class="link" href="#restQueryVariable" title="JSON查询变量格式">在此</a>。
    </p><p>可以使用通用的 <a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a>。</p><p>
          </p><div class="table"><a name="N13EBE"></a><p class="title"><b>Table&nbsp;15.67.&nbsp;查询流程实例 - 响应码</b></p><div class="table-contents"><table summary="查询流程实例 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，并返回了流程实例。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"data"</span><span class="pun">:[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"businessKey"</span><span class="pun">:</span><span class="str">"myBusinessKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"suspended"</span><span class="pun">:</span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"processDefinitionUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/process-definitions/processOne%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"activityId"</span><span class="pun">:</span><span class="str">"processTask"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"total"</span><span class="pun">:</span><span class="lit">2</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"start"</span><span class="pun">:</span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"sort"</span><span class="pun">:</span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"order"</span><span class="pun">:</span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"size"</span><span class="pun">:</span><span class="lit">2</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="获得流程实例的流程图"><div class="titlepage"><div><div><h3 class="title"><a name="N13EDE"></a>获得流程实例的流程图</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13EE8"></a><p class="title"><b>Table&nbsp;15.68.&nbsp;获得流程实例的流程图 - URL参数</b></p><div class="table-contents"><table summary="获得流程实例的流程图 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>希望获得流程图的流程实例id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N13F04"></a><p class="title"><b>Table&nbsp;15.69.&nbsp;获得流程实例的流程图 - 响应码</b></p><div class="table-contents"><table summary="获得流程实例的流程图 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了流程实例，并返回了流程图。</td></tr><tr><td>400</td><td>表示找不到请求的流程实例，流程不包含挺信息（BPMN:DI），所以没有创建图片。</td></tr><tr><td>404</td><td>表示找不到请求的流程实例</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"businessKey"</span><span class="pun">:</span><span class="str">"myBusinessKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"suspended"</span><span class="pun">:</span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"processDefinitionUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/process-definitions/processOne%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"activityId"</span><span class="pun">:</span><span class="str">"processTask"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="获得流程实例的参与者"><div class="titlepage"><div><div><h3 class="title"><a name="N13F29"></a>获得流程实例的参与者</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">identitylinks</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13F33"></a><p class="title"><b>Table&nbsp;15.70.&nbsp;获得流程实例的参与者 - URL参数</b></p><div class="table-contents"><table summary="获得流程实例的参与者 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>关联的流程实例id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N13F4F"></a><p class="title"><b>Table&nbsp;15.71.&nbsp;获得流程实例的参与者 - 响应码</b></p><div class="table-contents"><table summary="获得流程实例的参与者 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了流程实例，并返回了IdentityLink。</td></tr><tr><td>404</td><td>表示找不到请求的流程实例</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/5/identitylinks/users/john/customType"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"user"</span><span class="pun">:</span><span class="str">"john"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"group"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"customType"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/5/identitylinks/users/paul/candidate"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"user"</span><span class="pun">:</span><span class="str">"paul"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"group"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"candidate"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">}</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
注意<code class="literal">groupId</code>总是null，因为只有用户才能实际参与到流程实例中。
    </p></div><div class="section" title="为流程实例添加一个参与者"><div class="titlepage"><div><div><h3 class="title"><a name="N13F72"></a>为流程实例添加一个参与者</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">identitylinks</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13F7C"></a><p class="title"><b>Table&nbsp;15.72.&nbsp;为流程实例添加一个参与者 - URL参数</b></p><div class="table-contents"><table summary="为流程实例添加一个参与者 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>关联的流程实例id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"userId"</span><span class="pun">:</span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"participant"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
<code class="literal">userId</code> 和 <code class="literal">type</code> 都是必填项。
    </p><p>
          </p><div class="table"><a name="N13FA7"></a><p class="title"><b>Table&nbsp;15.73.&nbsp;为流程实例添加一个参与者 - 响应码</b></p><div class="table-contents"><table summary="为流程实例添加一个参与者 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示找到了流程实例，并创建了关联。</td></tr><tr><td>400</td><td>表示请求体没有包含userId或type。</td></tr><tr><td>404</td><td>表示找不到请求的流程实例</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/5/identitylinks/users/john/customType"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"user"</span><span class="pun">:</span><span class="str">"john"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"group"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"type"</span><span class="pun">:</span><span class="str">"customType"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
注意<code class="literal">groupId</code>总是null，因为只有用户才能实际参与到流程实例中。
    </p></div><div class="section" title="删除一个流程实例的参与者"><div class="titlepage"><div><div><h3 class="title"><a name="N13FCF"></a>删除一个流程实例的参与者</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">DELETE runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">identitylinks</span><span class="pun">/</span><span class="pln">users</span><span class="pun">/{</span><span class="pln">userId</span><span class="pun">}/{</span><span class="pln">type</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N13FD9"></a><p class="title"><b>Table&nbsp;15.74.&nbsp;删除一个流程实例的参与者 - URL参数</b></p><div class="table-contents"><table summary="删除一个流程实例的参与者 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>流程实例id</td></tr><tr><td>userId</td><td>是</td><td>String</td><td>要删除关联的用户id</td></tr><tr><td>type</td><td>是</td><td>String</td><td>删除的关联类型</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N14007"></a><p class="title"><b>Table&nbsp;15.75.&nbsp;删除一个流程实例的参与者 - 响应码</b></p><div class="table-contents"><table summary="删除一个流程实例的参与者 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了流程实例，并删除了关联。响应体为空。</td></tr><tr><td>404</td><td>表示找不到请求的流程实例，或找不到期望删除的关联。响应状态包含了错误的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/5/identitylinks/users/john/customType"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"user"</span><span class="pun">:</span><span class="str">"john"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"group"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"type"</span><span class="pun">:</span><span class="str">"customType"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
注意<code class="literal">groupId</code>总是null，因为只有用户才能实际参与到流程实例中。
    </p></div><div class="section" title="列出流程实例的变量"><div class="titlepage"><div><div><h3 class="title"><a name="N1402A"></a>列出流程实例的变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">variables</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14034"></a><p class="title"><b>Table&nbsp;15.76.&nbsp;列出流程实例的变量 - URL参数</b></p><div class="table-contents"><table summary="列出流程实例的变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>变量对应的流程实例id</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N14050"></a><p class="title"><b>Table&nbsp;15.77.&nbsp;列出流程实例的变量 - 响应码</b></p><div class="table-contents"><table summary="列出流程实例的变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了流程实例，并返回了变量。</td></tr><tr><td>404</td><td>表示找不到请求的流程实例</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"intProcVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"integer"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="lit">123</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pun">:</span><span class="str">"local"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"byteArrayProcVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"binary"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"valueUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/5/variables/byteArrayProcVar/data"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pun">:</span><span class="str">"local"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp;</span><span class="pun">...</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
当变量为二进制或序列化类型时，<code class="literal">valueUrl</code>给出了获得原始数据的URL。如果是普通变量，变量值就会直接包含在响应中。
注意只会返回<code class="literal">local</code>作用域的变量，因为流程实例变量没有<code class="literal">global</code>作用域。</p></div><div class="section" title="获得流程实例的一个变量"><div class="titlepage"><div><div><h3 class="title"><a name="N14079"></a>获得流程实例的一个变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">variables</span><span class="pun">/{</span><span class="pln">variableName</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14083"></a><p class="title"><b>Table&nbsp;15.78.&nbsp;获得流程实例的一个变量 - URL参数</b></p><div class="table-contents"><table summary="获得流程实例的一个变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>变量对应的流程实例id</td></tr><tr><td>variableName</td><td>是</td><td>String</td><td>获取变量的名称</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N140A8"></a><p class="title"><b>Table&nbsp;15.79.&nbsp;获得流程实例的一个变量 - 响应码</b></p><div class="table-contents"><table summary="获得流程实例的一个变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了流程实例和变量，并返回了变量。</td></tr><tr><td>400</td><td>表示请求体不完全，或包含非法值。状态描述包含对应错误的详细信息。</td></tr><tr><td>404</td><td>表示找不到请求的流程实例，或流程实例中不包含指定名称的变量。状态描述中包含对应错误的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"intProcVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"integer"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="lit">123</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pun">:</span><span class="str">"local"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">}</span></pre><p>
    当变量为二进制或序列化类型时，<code class="literal">valueUrl</code>给出了获得原始数据的URL。如果是普通变量，变量值就会直接包含在响应中。
    注意只会返回<code class="literal">local</code>作用域的变量，因为流程实例变量没有<code class="literal">global</code>作用域。</p></div><div class="section" title="创建（或更新）流程实例变量"><div class="titlepage"><div><div><h3 class="title"><a name="N140D6"></a>创建（或更新）流程实例变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">variables</span></pre><p>
          </p><pre class="prettyprint"><span class="pln">PUT runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">variables</span></pre><p>
        </p><p>
		  使用<code class="literal">POST</code>时，会创建所有传递的变量。如果流程实例中已经存在了其中一个变量，就会返回一个错误（409 - CONFLICT）。使用<code class="literal">PUT</code>时，
		  流程实例中不存在的变量会被创建，已存在的变量会被更新，不会有任何错误。
            </p><div class="table"><a name="N140E9"></a><p class="title"><b>Table&nbsp;15.80.&nbsp;创建（或更新）流程实例变量 - URL参数</b></p><div class="table-contents"><table summary="创建（或更新）流程实例变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>变量对应的流程实例id</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"intProcVar"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"integer"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="lit">123</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp;</span><span class="pun">...</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
        请求体的数组中可以包含任意多个变量。关于变量格式的更多信息可以参考<a class="link" href="#restVariables" title="变量格式">REST变量章节</a>。注意此处忽略作用域，流程实例只能设置<code class="literal">local</code>作用域。
        </p><p>
          </p><div class="table"><a name="N14115"></a><p class="title"><b>Table&nbsp;15.81.&nbsp;创建（或更新）流程实例变量 - 响应码</b></p><div class="table-contents"><table summary="创建（或更新）流程实例变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示找到了流程实例，并创建了变量。</td></tr><tr><td>400</td><td>表示请求体不完整，或包含非法值。状态描述包含对应错误的详细信息。</td></tr><tr><td>404</td><td>表示找不到请求的流程实例</td></tr><tr><td>409</td><td>表示找到了流程实例，但是已经存在一个相同名称的变量（只在使用POST方法时抛出）。可以使用更新方法替代。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"intProcVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"integer"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="lit">123</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pun">:</span><span class="str">"local"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp;</span><span class="pun">...</span><span class="pln"><br><br></span><span class="pun">]</span></pre><p>
  </p></div><div class="section" title="更新一个流程实例变量"><div class="titlepage"><div><div><h3 class="title"><a name="N1413F"></a>更新一个流程实例变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">variables</span><span class="pun">/{</span><span class="pln">variableName</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14149"></a><p class="title"><b>Table&nbsp;15.82.&nbsp;更新一个流程实例变量 - URL参数</b></p><div class="table-contents"><table summary="更新一个流程实例变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>变量对应的流程实例id</td></tr><tr><td>variableName</td><td>是</td><td>String</td><td>希望获得的变量名称</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
            </p><pre class="prettyprint"><span class="pln">&nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"intProcVar"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"integer"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="lit">123</span><span class="pln"><br>&nbsp;</span><span class="pun">}</span></pre><p>
        请求体的数组中可以包含任意多个变量。关于变量格式的更多信息可以参考<a class="link" href="#restVariables" title="变量格式">REST变量章节</a>。注意此处忽略作用域，流程实例只能设置<code class="literal">local</code>作用域。
        </p><p>
          </p><div class="table"><a name="N1417E"></a><p class="title"><b>Table&nbsp;15.83.&nbsp;更新一个流程实例变量 - 响应码</b></p><div class="table-contents"><table summary="更新一个流程实例变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了流程实例和变量，并更新了变量。</td></tr><tr><td>404</td><td>表示找不到请求的流程实例，或找不到给定名称的流程实例变量。状态描述包含对应错误的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"intProcVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"integer"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="lit">123</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pun">:</span><span class="str">"local"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">}</span></pre><p>
  当变量为二进制或序列化类型时，<code class="literal">valueUrl</code>给出了获得原始数据的URL。如果是普通变量，变量值就会直接包含在响应中。
  注意只会返回<code class="literal">local</code>作用域的变量，因为流程实例变量没有<code class="literal">global</code>作用域。
  </p></div><div class="section" title="创建一个新的二进制流程变量"><div class="titlepage"><div><div><h3 class="title"><a name="N141A7"></a>创建一个新的二进制流程变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">variables</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N141B1"></a><p class="title"><b>Table&nbsp;15.84.&nbsp;创建一个新的二进制流程变量 - URL参数</b></p><div class="table-contents"><table summary="创建一个新的二进制流程变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>创建新变量对应的流程实例id</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
           请求应该是<code class="literal">multipart/form-data</code>类型。应该只有一个文件区域，包含源码的二进制内容。除此之外，需要提供以下表单域：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">name</code>：必须的变量名称。</p></li><li class="listitem"><p><code class="literal">type</code>：创建的变量类型。如果忽略，会假设使用<code class="literal">binary</code>，请求的二进制数据会当做二进制数组保存起来。</p></li></ul></div><p>
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"binaryVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"scope"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"binary"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"valueUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://.../runtime/process-instances/123/variables/binaryVariable/data"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N141EC"></a><p class="title"><b>Table&nbsp;15.85.&nbsp;创建一个新的二进制流程变量 - 响应码</b></p><div class="table-contents"><table summary="创建一个新的二进制流程变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示成功创建了变量，并返回了结果</td></tr><tr><td>400</td><td>表示没有提供希望创建的变量名称。状态消息包含详细信息。</td></tr><tr><td>404</td><td>表示找不到请求的流程实例</td></tr><tr><td>409</td><td>表示流程实例中已经包含了给定名称的变量。可以使用PUT方法来更新变量。</td></tr><tr><td>415</td><td>表示序列化数据包含的对象的类并不在运行Activiti引擎的JVM中，所以无法反序列化。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="更新一个二进制的流程实例变量"><div class="titlepage"><div><div><h3 class="title"><a name="N14212"></a>更新一个二进制的流程实例变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT runtime</span><span class="pun">/</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">variables</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N1421C"></a><p class="title"><b>Table&nbsp;15.86.&nbsp;更新一个二进制的流程实例变量 - URL参数</b></p><div class="table-contents"><table summary="更新一个二进制的流程实例变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>创建新变量对应的流程实例id</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
           请求应该是<code class="literal">multipart/form-data</code>类型。应该只有一个文件区域，包含源码的二进制内容。除此之外，需要提供以下表单域：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">name</code>：必须的变量名称。</p></li><li class="listitem"><p><code class="literal">type</code>：创建的变量类型。如果忽略，会假设使用<code class="literal">binary</code>，请求的二进制数据会当做二进制数组保存起来。</p></li></ul></div><p>
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"binaryVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"scope"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"binary"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"valueUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://.../runtime/process-instances/123/variables/binaryVariable/data"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N14257"></a><p class="title"><b>Table&nbsp;15.87.&nbsp;更新一个二进制的流程实例变量 - 响应码</b></p><div class="table-contents"><table summary="更新一个二进制的流程实例变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示成功更新了变量，并返回了结果。</td></tr><tr><td>400</td><td>表示未提供希望更新的变量名称。状态消息包含了详细信息。</td></tr><tr><td>404</td><td>表示找不到请求的流程实例id，或找不到指定名称的流程实例变量。</td></tr><tr><td>415</td><td>表示序列化数据包含的对象的类并不在运行Activiti引擎的JVM中，所以无法反序列化。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div></div><div class="section" title="分支"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N14278"></a>分支</h2></div></div></div><div class="section" title="获取一个分支"><div class="titlepage"><div><div><h3 class="title"><a name="N1427B"></a>获取一个分支</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">executions</span><span class="pun">/{</span><span class="pln">executionId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14285"></a><p class="title"><b>Table&nbsp;15.88.&nbsp;获取一个分支 - URL参数</b></p><div class="table-contents"><table summary="获取一个分支 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>executionId</td><td>是</td><td>String</td><td>获取分支的id</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N142A1"></a><p class="title"><b>Table&nbsp;15.89.&nbsp;获取一个分支 - 响应码</b></p><div class="table-contents"><table summary="获取一个分支 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了分支，并成功返回。</td></tr><tr><td>404</td><td>表示找不到分支</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/executions/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"parentId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"parentUrl"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"processInstanceId"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"processInstanceUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"suspended"</span><span class="pun">:</span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"activityId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="对分支执行操作"><div class="titlepage"><div><div><h3 class="title"><a name="N142C1"></a>对分支执行操作</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT runtime</span><span class="pun">/</span><span class="pln">executions</span><span class="pun">/{</span><span class="pln">executionId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N142CB"></a><p class="title"><b>Table&nbsp;15.90.&nbsp;对分支执行操作 - URL参数</b></p><div class="table-contents"><table summary="对分支执行操作 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>executionId</td><td>是</td><td>String</td><td>希望执行操作的分支id</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体（继续执行分支）：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"action"</span><span class="pun">:</span><span class="str">"signal"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p><p>
       <span class="bold"><strong>请求体（分支接收了信号事件）：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"action"</span><span class="pun">:</span><span class="str">"signalEventReceived"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"signalName"</span><span class="pun">:</span><span class="str">"mySignal"</span><span class="pln"><br>&nbsp; </span><span class="str">"variables"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"> </span><span class="pun">...</span><span class="pln"> </span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
 提醒分支接收了一个信号事件，要使用一个<code class="literal">signalName</code>参数。还可以传递<code class="literal">variables</code>参数，它会在执行操作之前设置到分支中。
    </p><p>
       <span class="bold"><strong>请求体（分支接收了消息事件）：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"action"</span><span class="pun">:</span><span class="str">"messageEventReceived"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"messageName"</span><span class="pun">:</span><span class="str">"myMessage"</span><span class="pln"><br>&nbsp; </span><span class="str">"variables"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"> </span><span class="pun">...</span><span class="pln"> </span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
 提醒分支接收了一个消息事件，要使用一个<code class="literal">messageName</code>参数。还可以传递<code class="literal">variables</code>参数，它会在执行操作之前设置到分支中。
    </p><p>
          </p><div class="table"><a name="N1430E"></a><p class="title"><b>Table&nbsp;15.91.&nbsp;对分支执行操作 - 响应码</b></p><div class="table-contents"><table summary="对分支执行操作 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了分支，并执行了操作。</td></tr><tr><td>204</td><td>表示找到了分支，执行了操作，并且操作导致分支结束了。</td></tr><tr><td>400</td><td>表示请求的操作不合法，请求中缺少必须的参数，或传递了非法的变量。状态描述中包含了错误相关的详细信息。</td></tr><tr><td>404</td><td>表示找不到分支</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体（当操作没有导致分支结束的情况）：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/executions/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"parentId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"parentUrl"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"processInstanceId"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"processInstanceUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"suspended"</span><span class="pun">:</span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"activityId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="获得一个分支的所有活动节点"><div class="titlepage"><div><div><h3 class="title"><a name="N14338"></a>获得一个分支的所有活动节点</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">executions</span><span class="pun">/{</span><span class="pln">executionId</span><span class="pun">}/</span><span class="pln">activities</span></pre><p>
        </p><p>
		  返回分支以及子分支当前所有活动的节点（递归所有下级）。
        </p><p>
            </p><div class="table"><a name="N14344"></a><p class="title"><b>Table&nbsp;15.92.&nbsp;获得一个分支的所有活动节点 - URL参数</b></p><div class="table-contents"><table summary="获得一个分支的所有活动节点 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>executionId</td><td>是</td><td>String</td><td>获取节点对应的分支id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N14360"></a><p class="title"><b>Table&nbsp;15.93.&nbsp;获得一个分支的所有活动节点 - 响应码</b></p><div class="table-contents"><table summary="获得一个分支的所有活动节点 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了分支，并返回了节点。</td></tr><tr><td>404</td><td>表示找不到分支</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; </span><span class="str">"userTaskForManager"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"receiveTask"</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
    </p></div><div class="section" title="获取分支列表"><div class="titlepage"><div><div><h3 class="title"><a name="restExecutionsGet"></a>获取分支列表</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">executions</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N1438B"></a><p class="title"><b>Table&nbsp;15.94.&nbsp;获取分支列表 - URL参数</b></p><div class="table-contents"><table summary="获取分支列表 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>否</td><td>String</td><td>只返回指定id的分支。</td></tr><tr><td>activityId</td><td>否</td><td>String</td><td>只返回指定节点id的分支。</td></tr><tr><td>processDefinitionKey</td><td>否</td><td>String</td><td>只返回指定流程定义key的分支。</td></tr><tr><td>processDefinitionId</td><td>否</td><td>String</td><td>只返回指定流程定义id的分支。</td></tr><tr><td>processInstanceId</td><td>否</td><td>String</td><td>只返回作为指定流程实例id一部分的分支。</td></tr><tr><td>messageEventSubscriptionName</td><td>否</td><td>String</td><td>只返回订阅了指定名称消息的分支。</td></tr><tr><td>signalEventSubscriptionName</td><td>否</td><td>String</td><td>只返回订阅了指定名称信号的分支。</td></tr><tr><td>parentId</td><td>否</td><td>String</td><td>只返回指定分支直接下级的分支。</td></tr><tr><td>tenantId</td><td>否</td><td>String</td><td>只返回指定tenantId的分支。</td></tr><tr><td>tenantIdLike</td><td>否</td><td>String</td><td>只返回与指定tenantId匹配的分支。</td></tr><tr><td>withoutTenantId</td><td>否</td><td>Boolean</td><td>如果为 <code class="literal">true</code>，只返回未设置tenantId的分支。如果为 <code class="literal">false</code>，会忽略 <code class="literal">withoutTenantId</code> 参数。</td></tr><tr><td>sort</td><td>否</td><td>String</td><td>排序字段，应该和<code class="literal">processInstanceId</code>（默认）， <code class="literal">processDefinitionId</code>， <code class="literal">processDefinitionKey</code>或<code class="literal">tenantId</code>之一一起使用。</td></tr><tr><td><p>可以使用通用的 <a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a> 。</p></td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N14429"></a><p class="title"><b>Table&nbsp;15.95.&nbsp;获取分支列表 - 响应码</b></p><div class="table-contents"><table summary="获取分支列表 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，并返回了分支。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"data"</span><span class="pun">:[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/executions/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"parentId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"parentUrl"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"processInstanceId"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"processInstanceUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"suspended"</span><span class="pun">:</span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"activityId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/executions/7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"parentId"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"parentUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/executions/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"processInstanceId"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"processInstanceUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"suspended"</span><span class="pun">:</span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"activityId"</span><span class="pun">:</span><span class="str">"processTask"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"total"</span><span class="pun">:</span><span class="lit">2</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"start"</span><span class="pun">:</span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"sort"</span><span class="pun">:</span><span class="str">"processInstanceId"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"order"</span><span class="pun">:</span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"size"</span><span class="pun">:</span><span class="lit">2</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="查询分支"><div class="titlepage"><div><div><h3 class="title"><a name="N14449"></a>查询分支</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST query</span><span class="pun">/</span><span class="pln">executions</span></pre><p>
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"processDefinitionKey"</span><span class="pun">:</span><span class="str">"oneTaskProcess"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"variables"</span><span class="pun">:</span><span class="pln"><br>&nbsp; </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">1234</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"operation"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"equals"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"long"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceVariables"</span><span class="pun">:</span><span class="pln"><br>&nbsp; </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"processVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"some string"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"operation"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"equals"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"string"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="pun">...</span><span class="pln"><br></span><span class="pun">}</span></pre><p>

请求体可以包含在<a class="link" href="#restExecutionsGet" title="获取分支列表">获取分支列表</a>中可以使用的查询条件。除此之外，也可以在查询中提供<code class="literal">variables</code>和<code class="literal">processInstanceVariables</code>列表，关于变量的格式可以参考<a class="link" href="#restQueryVariable" title="JSON查询变量格式">此处</a>。
    </p><p>可以使用通用的 <a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a> 。</p><p>
          </p><div class="table"><a name="N14470"></a><p class="title"><b>Table&nbsp;15.96.&nbsp;查询分支 - 响应码</b></p><div class="table-contents"><table summary="查询分支 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，并返回了分支。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"data"</span><span class="pun">:[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/executions/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"parentId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"parentUrl"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"processInstanceId"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"processInstanceUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"suspended"</span><span class="pun">:</span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"activityId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/executions/7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"parentId"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"parentUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/executions/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"processInstanceId"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"processInstanceUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"suspended"</span><span class="pun">:</span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"activityId"</span><span class="pun">:</span><span class="str">"processTask"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"total"</span><span class="pun">:</span><span class="lit">2</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"start"</span><span class="pun">:</span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"sort"</span><span class="pun">:</span><span class="str">"processInstanceId"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"order"</span><span class="pun">:</span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"size"</span><span class="pun">:</span><span class="lit">2</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="获取分支的变量列表"><div class="titlepage"><div><div><h3 class="title"><a name="N14490"></a>获取分支的变量列表</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">executions</span><span class="pun">/{</span><span class="pln">executionId</span><span class="pun">}/</span><span class="pln">variables</span><span class="pun">?</span><span class="pln">scope</span><span class="pun">={</span><span class="pln">scope</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N1449A"></a><p class="title"><b>Table&nbsp;15.97.&nbsp;获取分支的变量列表 - URL参数</b></p><div class="table-contents"><table summary="获取分支的变量列表 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>executionId</td><td>是</td><td>String</td><td>变量对应的分支id。</td></tr><tr><td>scope</td><td>否</td><td>String</td><td><code class="literal">local</code> 或 <code class="literal">global</code>。如果忽略，会返回local和global作用域下的所有变量。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N144C4"></a><p class="title"><b>Table&nbsp;15.98.&nbsp;获取分支的变量列表 - 响应码</b></p><div class="table-contents"><table summary="获取分支的变量列表 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了分支，并返回了变量。</td></tr><tr><td>404</td><td>表示找不到请求的分支。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"intProcVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"integer"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="lit">123</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pun">:</span><span class="str">"global"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"byteArrayProcVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"binary"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"valueUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/5/variables/byteArrayProcVar/data"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pun">:</span><span class="str">"local"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp;</span><span class="pun">...</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
当变量为二进制或序列化类型时，<code class="literal">valueUrl</code>给出了获得原始数据的URL。如果是普通变量，变量值就会直接包含在响应中。
</p></div><div class="section" title="获得分支的一个变量"><div class="titlepage"><div><div><h3 class="title"><a name="N144E7"></a>获得分支的一个变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">executions</span><span class="pun">/{</span><span class="pln">executionId</span><span class="pun">}/</span><span class="pln">variables</span><span class="pun">/{</span><span class="pln">variableName</span><span class="pun">}?</span><span class="pln">scope</span><span class="pun">={</span><span class="pln">scope</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N144F1"></a><p class="title"><b>Table&nbsp;15.99.&nbsp;获得分支的一个变量 - URL参数</b></p><div class="table-contents"><table summary="获得分支的一个变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>executionId</td><td>是</td><td>String</td><td>变量对应的分支id</td></tr><tr><td>variableName</td><td>是</td><td>String</td><td>获取的变量名称。</td></tr><tr><td>scope</td><td>否</td><td>String</td><td><code class="literal">local</code> 或 <code class="literal">global</code>。如果忽略，返回local变量（如果存在）。如果不存在局部变量，返回global变量（如果存在）。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N14524"></a><p class="title"><b>Table&nbsp;15.100.&nbsp;获得分支的一个变量 - 响应码</b></p><div class="table-contents"><table summary="获得分支的一个变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了分支和变量，并返回了变量。</td></tr><tr><td>400</td><td>表示请求体不完全，或包含非法数值。状态描述中包含了错误相关的详细信息。</td></tr><tr><td>404</td><td>表示找不到请求的分支，或分支在请求作用域中不包含指定名称的变量（如果忽略scope参数，既不存在local变量也不存在global变量）。状态描述中包含了错误相关的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"intProcVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"integer"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="lit">123</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pun">:</span><span class="str">"local"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">}</span></pre><p>
    当变量为二进制或序列化类型时，<code class="literal">valueUrl</code>给出了获得原始数据的URL。如果是普通变量，变量值就会直接包含在响应中。
    </p></div><div class="section" title="新建（或更新）分支变量"><div class="titlepage"><div><div><h3 class="title"><a name="N1454C"></a>新建（或更新）分支变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST runtime</span><span class="pun">/</span><span class="pln">executions</span><span class="pun">/{</span><span class="pln">executionId</span><span class="pun">}/</span><span class="pln">variables</span></pre><p>
          </p><pre class="prettyprint"><span class="pln">PUT runtime</span><span class="pun">/</span><span class="pln">executions</span><span class="pun">/{</span><span class="pln">executionId</span><span class="pun">}/</span><span class="pln">variables</span></pre><p>
        </p><p>
		  使用<code class="literal">POST</code>时，会创建所有传递的变量。如果流程实例中已经存在了其中一个变量，就会返回一个错误（409 - CONFLICT）。使用<code class="literal">PUT</code>时，
		  流程实例中不存在的变量会被创建，已存在的变量会被更新，不会有任何错误。
            </p><div class="table"><a name="N1455F"></a><p class="title"><b>Table&nbsp;15.101.&nbsp;新建（或更新）分支变量 - URL参数</b></p><div class="table-contents"><table summary="新建（或更新）分支变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>executionId</td><td>是</td><td>String</td><td>变量对应的分支id</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"intProcVar"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"integer"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="lit">123</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pun">:</span><span class="str">"local"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp;</span><span class="pun">...</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
        <span class="bold"><strong>注意你只能提供作用域相同的变量。如果请求体数组中包含了不同作用域的变量，请求会返回一个错误（400 - BAD REQUEST）。</strong></span>请求体数据中可以传递任意个数的变量。关于变量格式的详细信息可以参考<a class="link" href="#restVariables" title="变量格式">REST变量章节</a>。注意，如果忽略了作用域，只有<code class="literal">local</code>作用域的比那两可以设置到流程实例中。
        </p><p>
          </p><div class="table"><a name="N1458F"></a><p class="title"><b>Table&nbsp;15.102.&nbsp;新建（或更新）分支变量 - 响应码</b></p><div class="table-contents"><table summary="新建（或更新）分支变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示找到了分支，并成功创建了变量。</td></tr><tr><td>400</td><td>表示请求体不完全或包含了非法数据。状态描述中包含了错误相关的详细信息。</td></tr><tr><td>404</td><td>表示找不到请求的分支。</td></tr><tr><td>409</td><td>表示找到了流程实例，但是已经存在一个相同名称的变量（只在使用POST方法时抛出）。可以使用更新方法替代。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"intProcVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"integer"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="lit">123</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pun">:</span><span class="str">"local"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp;</span><span class="pun">...</span><span class="pln"><br><br></span><span class="pun">]</span></pre><p>
  </p></div><div class="section" title="更新分支变量"><div class="titlepage"><div><div><h3 class="title"><a name="N145B9"></a>更新分支变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT runtime</span><span class="pun">/</span><span class="pln">executions</span><span class="pun">/{</span><span class="pln">executionId</span><span class="pun">}/</span><span class="pln">variables</span><span class="pun">/{</span><span class="pln">variableName</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N145C3"></a><p class="title"><b>Table&nbsp;15.103.&nbsp;更新分支变量 - URL参数</b></p><div class="table-contents"><table summary="更新分支变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>executionId</td><td>是</td><td>String</td><td>希望更新的变量对应的分支id。</td></tr><tr><td>variableName</td><td>是</td><td>String</td><td>希望更新的变量名称。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
            </p><pre class="prettyprint"><span class="pln">&nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"intProcVar"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"integer"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="lit">123</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pun">:</span><span class="str">"global"</span><span class="pln"><br>&nbsp;</span><span class="pun">}</span></pre><p>
        关于变量格式的详细信息可以参考<a class="link" href="#restVariables" title="变量格式">REST变量章节</a>。
        </p><p>
          </p><div class="table"><a name="N145F5"></a><p class="title"><b>Table&nbsp;15.104.&nbsp;更新分支变量 - 响应码</b></p><div class="table-contents"><table summary="更新分支变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了分支和变量，并成功更新了变量。</td></tr><tr><td>404</td><td>表示找不到请求的分支，或分支不包含指定名称的变量。状态描述中包含了错误相关的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"intProcVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"integer"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="lit">123</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pun">:</span><span class="str">"global"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">}</span></pre><p>
    当变量为二进制或序列化类型时，<code class="literal">valueUrl</code>给出了获得原始数据的URL。如果是普通变量，变量值就会直接包含在响应中。
  </p></div><div class="section" title="创建一个二进制变量"><div class="titlepage"><div><div><h3 class="title"><a name="N14618"></a>创建一个二进制变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST runtime</span><span class="pun">/</span><span class="pln">executions</span><span class="pun">/{</span><span class="pln">executionId</span><span class="pun">}/</span><span class="pln">variables</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14622"></a><p class="title"><b>Table&nbsp;15.105.&nbsp;创建一个二进制变量 - URL参数</b></p><div class="table-contents"><table summary="创建一个二进制变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>executionId</td><td>是</td><td>String</td><td>希望创建的新变量对应的分支id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
           请求应该是<code class="literal">multipart/form-data</code>类型。应该只有一个文件区域，包含源码的二进制内容。除此之外，需要提供以下表单域：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">name</code>：必须的变量名称。</p></li><li class="listitem"><p><code class="literal">type</code>：创建的变量类型。如果忽略，会假设使用<code class="literal">binary</code>，请求的二进制数据会当做二进制数组保存起来。</p></li></ul></div><p>
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"binaryVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"scope"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"binary"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"valueUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://.../runtime/executions/123/variables/binaryVariable/data"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N1465D"></a><p class="title"><b>Table&nbsp;15.106.&nbsp;创建一个二进制变量 - 响应码</b></p><div class="table-contents"><table summary="创建一个二进制变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示成功创建了变量，并返回了结果。</td></tr><tr><td>400</td><td>表示没有提供希望创建的变量名称。状态信息包含了详细信息。</td></tr><tr><td>404</td><td>表示找不到请求的分支。</td></tr><tr><td>409</td><td>表示分支已经拥有了一个与指定名称相关的变量。使用PUT方法来代替更新分支变量。</td></tr><tr><td>415</td><td>表示序列化数据包含的对象的类并不在运行Activiti引擎的JVM中，所以无法反序列化。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="更新已经已存在的二进制分支变量"><div class="titlepage"><div><div><h3 class="title"><a name="N14683"></a>更新已经已存在的二进制分支变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT runtime</span><span class="pun">/</span><span class="pln">executions</span><span class="pun">/{</span><span class="pln">executionId</span><span class="pun">}/</span><span class="pln">variables</span><span class="pun">/{</span><span class="pln">variableName</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N1468D"></a><p class="title"><b>Table&nbsp;15.107.&nbsp;更新已经已存在的二进制分支变量 - URL参数</b></p><div class="table-contents"><table summary="更新已经已存在的二进制分支变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>executionId</td><td>是</td><td>String</td><td>希望更新的变量对应的分支id。</td></tr><tr><td>variableName</td><td>是</td><td>String</td><td>希望更新的变量名称。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
           请求应该是<code class="literal">multipart/form-data</code>类型。应该只有一个文件区域，包含源码的二进制内容。除此之外，需要提供以下表单域：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">name</code>：必须的变量名称。</p></li><li class="listitem"><p><code class="literal">type</code>：创建的变量类型。如果忽略，会假设使用<code class="literal">binary</code>，请求的二进制数据会当做二进制数组保存起来。</p></li><li class="listitem"><p><code class="literal">scope</code>：创建的变量作用于。如果忽略，假设是<code class="literal">local</code>。</p></li></ul></div><p>
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"binaryVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"scope"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"binary"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"valueUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://.../runtime/executions/123/variables/binaryVariable/data"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N146D9"></a><p class="title"><b>Table&nbsp;15.108.&nbsp;更新已经已存在的二进制分支变量 - 响应码</b></p><div class="table-contents"><table summary="更新已经已存在的二进制分支变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示变量已成功工薪，并返回了结果。</td></tr><tr><td>400</td><td>表示没有提供希望更新的变量名称。状态信息包含了详细信息。</td></tr><tr><td>404</td><td>表示没有找到分支，或分支不包含指定名称的变量。</td></tr><tr><td>415</td><td>表示序列化数据包含的对象的类并不在运行Activiti引擎的JVM中，所以无法反序列化。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div></div><div class="section" title="任务"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N146FA"></a>任务</h2></div></div></div><div class="section" title="获取任务"><div class="titlepage"><div><div><h3 class="title"><a name="N146FD"></a>获取任务</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14707"></a><p class="title"><b>Table&nbsp;15.109.&nbsp;获取任务 - URL参数</b></p><div class="table-contents"><table summary="获取任务 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>希望获得的任务id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N14723"></a><p class="title"><b>Table&nbsp;15.110.&nbsp;获取任务 - 响应码</b></p><div class="table-contents"><table summary="获取任务 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了任务并返回。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"assignee"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"createTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"delegationState"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"pending"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"description"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Task description"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"dueDate"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"execution"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/executions/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"8"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"My task"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"owner"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"owner"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"parentTask"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/tasks/9"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"priority"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">50</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processDefinition"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstance"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"suspended"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"taskDefinitionKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"theTask"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/tasks/8"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"tenantId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">delegationState</code>：任务的代理状态。可以为<code class="literal">null</code>，<code class="literal">"pending"</code> 或 <code class="literal">"resolved"</code>。</p></li></ul></div><p>
    </p></div><div class="section" title="任务列表"><div class="titlepage"><div><div><h3 class="title"><a name="restTasksGet"></a>任务列表</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N1475E"></a><p class="title"><b>Table&nbsp;15.111.&nbsp;任务列表 - URL参数</b></p><div class="table-contents"><table summary="任务列表 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>否</td><td>String</td><td>只返回指定的名称。</td></tr><tr><td>nameLike</td><td>否</td><td>String</td><td>只返回与指定名称匹配的任务。</td></tr><tr><td>description</td><td>否</td><td>String</td><td>只返回指定描述的任务。</td></tr><tr><td>priority</td><td>否</td><td>Integer</td><td>只返回指定优先级的任务。</td></tr><tr><td>minimumPriority</td><td>否</td><td>Integer</td><td>只返回比指定优先级大的任务。</td></tr><tr><td>maximumPriority</td><td>否</td><td>Integer</td><td>只返回比指定优先级小的任务。</td></tr><tr><td>assignee</td><td>否</td><td>String</td><td>只返回分配给指定用户的任务。</td></tr><tr><td>assigneeLike</td><td>否</td><td>String</td><td>只返回负责人与指定值匹配的任务。</td></tr><tr><td>owner</td><td>否</td><td>String</td><td>只返回原拥有人为指定用户的任务。</td></tr><tr><td>ownerLike</td><td>否</td><td>String</td><td>只返回原拥有人与指定值匹配的任务。</td></tr><tr><td>unassigned</td><td>否</td><td>Boolean</td><td>只返回没有分配给任何人的任务。如果传递<code class="literal">false</code>，这个值就会被忽略。</td></tr><tr><td>delegationState</td><td>否</td><td>String</td><td>只返回指定代理状态的任务。可选值为<code class="literal">pending</code> 和 <code class="literal">resolved</code>。</td></tr><tr><td>candidateUser</td><td>否</td><td>String</td><td>只返回可以被指定用户领取的任务。这包含将用户设置为直接候选人和用户作为候选群组一员的情况。</td></tr><tr><td>candidateGroup</td><td>否</td><td>String</td><td>只返回可以被指定群组中用户领取的任务。</td></tr><tr><td>candidateGroups</td><td>否</td><td>String</td><td>只返回可以被指定群组列表中用户领取的任务。数值使用逗号分隔。</td></tr><tr><td>involvedUser</td><td>否</td><td>String</td><td>只返回指定用户参与过的任务。</td></tr><tr><td>taskDefinitionKey</td><td>否</td><td>String</td><td>只返回指定任务定义id的任务。</td></tr><tr><td>taskDefinitionKeyLike</td><td>否</td><td>String</td><td>只返回任务定义id与指定值匹配的任务。</td></tr><tr><td>processInstanceId</td><td>否</td><td>String</td><td>只返回作为指定id的流程实例的一部分的任务。</td></tr><tr><td>processInstanceBusinessKey</td><td>否</td><td>String</td><td>只返回作为指定key的流程实例的一部分的任务。</td></tr><tr><td>processInstanceBusinessKeyLike</td><td>否</td><td>String</td><td>只返回业务key与指定值匹配的流程实例的一部分的任务。</td></tr><tr><td>processDefinitionKey</td><td>否</td><td>String</td><td>只返回作为指定流程定义key的流程实例的一部分的任务。</td></tr><tr><td>processDefinitionKeyLike</td><td>否</td><td>String</td><td>只返回指定流程定义key与指定值匹配的流程实例的一部分的任务。</td></tr><tr><td>processDefinitionName</td><td>否</td><td>String</td><td>只返回作为指定流程定义名称的流程实例的一部分的任务。</td></tr><tr><td>processDefinitionNameLike</td><td>否</td><td>String</td><td>只返回流程定义名称与指定值匹配的流程实例的一部分的任务。</td></tr><tr><td>executionId</td><td>否</td><td>String</td><td>只返回作为指定id分支的一部分的任务。</td></tr><tr><td>createdOn</td><td>否</td><td>ISO Date</td><td>只返回指定创建时间的任务。</td></tr><tr><td>createdBefore</td><td>否</td><td>ISO Date</td><td>只返回在指定时间之前创建的任务。</td></tr><tr><td>createdAfter</td><td>否</td><td>ISO Date</td><td>只返回在指定时间之后创建的任务。</td></tr><tr><td>dueOn</td><td>否</td><td>ISO Date</td><td>只返回指定持续时间的任务。</td></tr><tr><td>dueBefore</td><td>否</td><td>ISO Date</td><td>只返回持续时间在指定时间之前的任务。</td></tr><tr><td>dueAfter</td><td>否</td><td>ISO Date</td><td>只返回持续时间在指定时间之后的任务。</td></tr><tr><td>withoutDueDate</td><td>否</td><td>boolean</td><td>只返回没有设置持续时间的任务。如果值为<code class="literal">false</code>就会忽略这个属性。</td></tr><tr><td>excludeSubTasks</td><td>否</td><td>Boolean</td><td>只返回非子任务的任务。</td></tr><tr><td>active</td><td>否</td><td>Boolean</td><td>如果为 <code class="literal">true</code>，只返回未挂起的任务（作为未挂起流程的一部分，或者不属于任何流程）。如果为false，只返回作为挂起流程一部分的任务。</td></tr><tr><td>includeTaskLocalVariables</td><td>否</td><td>Boolean</td><td>Indication to include task local variables in the result.</td></tr><tr><td>includeProcessVariables</td><td>否</td><td>Boolean</td><td>表示在结果中包含变量。</td></tr><tr><td>tenantId</td><td>否</td><td>String</td><td>只返回指定tenantId的任务。</td></tr><tr><td>tenantIdLike</td><td>否</td><td>String</td><td>只返回与指定tenantId匹配的任务。</td></tr><tr><td>withoutTenantId</td><td>否</td><td>Boolean</td><td>如果为 <code class="literal">true</code>，只返回未设置tenantId的任务。如果为 <code class="literal">false</code>，会忽略 <code class="literal">withoutTenantId</code> 参数。</td></tr><tr><td>candidateOrAssigned</td><td>否</td><td>String</td><td>选择已经被领取，或分配给某个用户，或者可以被用户领取（候选用户或组）。
                    </td></tr><tr><td><p>可以使用通用的 <a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a> 。</p></td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N14904"></a><p class="title"><b>Table&nbsp;15.112.&nbsp;任务列表 - 响应码</b></p><div class="table-contents"><table summary="任务列表 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，并返回任务。</td></tr><tr><td>400</td><td>表示传递的参数格式错误，或'delegationState'使用了不合法的数据('pending' 和 'resolved'以外的数据)。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"assignee"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"createTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"delegationState"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"pending"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"description"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Task description"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"dueDate"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"execution"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/executions/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"8"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"My task"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"owner"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"owner"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"parentTask"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/tasks/9"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"priority"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">50</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinition"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstance"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"suspended"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskDefinitionKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"theTask"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/tasks/8"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"tenantId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="查询任务"><div class="titlepage"><div><div><h3 class="title"><a name="N14924"></a>查询任务</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST query</span><span class="pun">/</span><span class="pln">tasks</span></pre><p>
        </p><p>
          <span class="bold"><strong>请求体：</strong></span>
          </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"My task"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"description"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"The task description"</span><span class="pun">,</span><span class="pln"><br><br>&nbsp; </span><span class="pun">...</span><span class="pln"><br><br>&nbsp; </span><span class="str">"taskVariables"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">1234</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"operation"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"equals"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"long"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="str">"processInstanceVariables"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">]</span><span class="pln"><br>&nbsp; </span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
        </p><p>
		  此处所有被支持的JSON参数都和<a class="link" href="#restTasksGet" title="任务列表">获得任务集合</a>完全一样（除了candidateGroupIn，它只能使用在POST任务查询REST服务中），只是使用JSON体参数的方式替代URL参数，这样就可以使用更加高级的查询方式，并能预防请求uri过长导致的问题。除此之外，可以基于任务和流程变量进行查询。<code class="literal">taskVariables</code> 和 <code class="literal">processInstanceVariables</code> 都可以包含 <a class="link" href="#restQueryVariable" title="JSON查询变量格式">此处描述</a>的json数组。
        </p><p>
          </p><div class="table"><a name="N14947"></a><p class="title"><b>Table&nbsp;15.113.&nbsp;查询任务 - 响应码</b></p><div class="table-contents"><table summary="查询任务 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，并返回任务。</td></tr><tr><td>400</td><td>表示传递了格式错误的参数，或'delegationState'传递了非法数据 ( 'pending' 和 'resolved'之外的值)。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"assignee"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"createTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"delegationState"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"pending"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"description"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Task description"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"dueDate"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"execution"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/executions/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"8"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"My task"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"owner"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"owner"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"parentTask"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/tasks/9"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"priority"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">50</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinition"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstance"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"suspended"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskDefinitionKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"theTask"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/tasks/8"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"tenantId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="更新任务"><div class="titlepage"><div><div><h3 class="title"><a name="N14967"></a>更新任务</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}</span></pre><p>
        </p><p>
         <span class="bold"><strong>请求JSON体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"assignee"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"assignee"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"delegationState"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"resolved"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"description"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"New task description"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"dueDate"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T13:06:02.438+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"New task name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"owner"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"owner"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"parentTaskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"priority"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">20</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      所有请求参数都是可选的。比如，你可以在请求体的JSON对象中只包含'assignee'属性，只更新任务的负责人，其他字段都不填。当包含的字段值为null时，任务的对应属性会被更新为null。比如：<code class="literal">{"dueDate" : null}</code>会清空任务的持续时间。
       </p><p>
          </p><div class="table"><a name="N1497D"></a><p class="title"><b>Table&nbsp;15.114.&nbsp;更新任务 - 响应码</b></p><div class="table-contents"><table summary="更新任务 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示成功更新了任务。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr><tr><td>409</td><td>表示请求的任务正在被更新。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span> 参考<code class="literal">runtime/tasks/{taskId}</code>的响应。
      </p></div><div class="section" title="操作任务"><div class="titlepage"><div><div><h3 class="title"><a name="N149A2"></a>操作任务</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}</span></pre><p>
        </p><p>
         <span class="bold"><strong>完成任务 - JSON体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"action"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"complete"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"variables"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">...</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
       完成任务。可以使用<code class="literal">variables</code>参数传递可选的variable数组。关于变量格式的详细信息可以参考<a class="link" href="#restVariables" title="变量格式">REST变量章节</a>。注意，此处忽略变量作用域，变量会设置到上级作用域，除非本地作用域应包含了同名变量。这与<code class="literal">TaskService.completeTask(taskId, variables)</code> 的行为是相同的。
       </p><p>
         <span class="bold"><strong>认领任务 - JSON体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"action"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"claim"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"assignee"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"userWhoClaims"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      根据指定的assignee认领任务。如果assignee为<code class="literal">null</code>，任务的执行人会变成空，又可以重新认领了。

       </p><p>
         <span class="bold"><strong>代理任务 - JSON体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"action"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"delegate"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"assignee"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"userToDelegateTo"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      指定assignee代理任务。assignee是必填项。
       </p><p>
         <span class="bold"><strong>处理任务 - JSON体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"action"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"resolve"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
处理任务代理。任务会返回给任务的原负责人（如果存在）。
       </p><p>
          </p><div class="table"><a name="N149DD"></a><p class="title"><b>Table&nbsp;15.115.&nbsp;操作任务 - 响应码</b></p><div class="table-contents"><table summary="操作任务 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示操作成功执行。</td></tr><tr><td>400</td><td>当请求包含了非法数据或当操作需要assignee参数时，却没有传。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr><tr><td>409</td><td>表示因为冲突导致无法执行操作。可能任务正在被更新，或者，在'<code class="literal">claim</code>'认清任务时，任务已经被其他用户认领了。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span> 参考<code class="literal">runtime/tasks/{taskId}</code>的响应。
      </p></div><div class="section" title="删除任务"><div class="titlepage"><div><div><h3 class="title"><a name="N14A0A"></a>删除任务</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">DELETE runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}?</span><span class="pln">cascadeHistory</span><span class="pun">={</span><span class="pln">cascadeHistory</span><span class="pun">}&amp;</span><span class="pln">deleteReason</span><span class="pun">={</span><span class="pln">deleteReason</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14A14"></a><p class="title"><b>Table&nbsp;15.116.&nbsp;&gt;删除任务 - URL参数</b></p><div class="table-contents"><table summary="&gt;删除任务 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>希望删除的任务id。</td></tr><tr><td>cascadeHistory</td><td>False</td><td>Boolean</td><td>删除任务时是否删除对应的任务历史（如果存在）。如果没有设置这个参数，默认为false。</td></tr><tr><td>deleteReason</td><td>False</td><td>String</td><td>删除任务的原因。<code class="literal">cascadeHistory</code>为true时，忽略此参数。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N14A45"></a><p class="title"><b>Table&nbsp;15.117.&nbsp;&gt;删除任务 - 响应码</b></p><div class="table-contents"><table summary="&gt;删除任务 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到任务，并成功删除。响应体为空。</td></tr><tr><td>403</td><td>表示无法删除任务，因为它是流程的一部分。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得任务的变量"><div class="titlepage"><div><div><h3 class="title"><a name="N14A61"></a>获得任务的变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">variables</span><span class="pun">?</span><span class="pln">scope</span><span class="pun">={</span><span class="pln">scope</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14A6B"></a><p class="title"><b>Table&nbsp;15.118.&nbsp;获得任务的变量 - URL参数</b></p><div class="table-contents"><table summary="获得任务的变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>变量对应的任务id。</td></tr><tr><td>scope</td><td>False</td><td>String</td><td>返回的变量作用于。如果为 '<code class="literal">local</code>'，只返回任务本身的变量。如果为 '<code class="literal">global</code>'，只返回任务上级分支的变量。如果不指定这个变量，会返回所有局部和全局的变量。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N14A96"></a><p class="title"><b>Table&nbsp;15.119.&nbsp;获得任务的变量 - 响应码</b></p><div class="table-contents"><table summary="获得任务的变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了任务并返回了请求的变量。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"doubleTaskVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"double"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">99.99</span><span class="pln"><br>&nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"stringProcVar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"global"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"string"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"This is a ProcVariable"</span><span class="pln"><br>&nbsp; </span><span class="pun">},</span><span class="pln"><br><br>&nbsp; </span><span class="pun">...</span><span class="pln"><br><br></span><span class="pun">]</span></pre><p>

      返回JSON数组型的变量。对响应的详细介绍可以参考<a class="link" href="#restVariables" title="变量格式">REST变量章节</a>。
    </p></div><div class="section" title="获取任务的一个变量"><div class="titlepage"><div><div><h3 class="title"><a name="N14ABA"></a>获取任务的一个变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">variables</span><span class="pun">/{</span><span class="pln">variableName</span><span class="pun">}?</span><span class="pln">scope</span><span class="pun">={</span><span class="pln">scope</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14AC4"></a><p class="title"><b>Table&nbsp;15.120.&nbsp;获取任务的一个变量 - URL参数</b></p><div class="table-contents"><table summary="获取任务的一个变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>获取变量对应的任务id。</td></tr><tr><td>variableName</td><td>是</td><td>String</td><td>获取变量对应的名称。</td></tr><tr><td>scope</td><td>False</td><td>String</td><td>返回的变量作用于。如果为 '<code class="literal">local</code>'，只返回任务本身的变量。如果为 '<code class="literal">global</code>'，只返回任务上级分支的变量。如果不指定这个变量，会返回所有局部和全局的变量。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N14AF8"></a><p class="title"><b>Table&nbsp;15.121.&nbsp;获取任务的一个变量 - 响应码</b></p><div class="table-contents"><table summary="获取任务的一个变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了任务并返回了请求的变量。</td></tr><tr><td>404</td><td>表示找不到任务，或者任务不包含指定名称的变量（在指定作用域下）。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myTaskVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"scope"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"string"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Hello my friend"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>

	  对响应的详细介绍可以参考<a class="link" href="#restVariables" title="变量格式">REST变量章节</a>。
    </p></div><div class="section" title="获取变量的二进制数据"><div class="titlepage"><div><div><h3 class="title"><a name="N14B1C"></a>获取变量的二进制数据</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">variables</span><span class="pun">/{</span><span class="pln">variableName</span><span class="pun">}/</span><span class="pln">data</span><span class="pun">?</span><span class="pln">scope</span><span class="pun">={</span><span class="pln">scope</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14B26"></a><p class="title"><b>Table&nbsp;15.122.&nbsp;获取变量的二进制数据 - URL参数</b></p><div class="table-contents"><table summary="获取变量的二进制数据 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>获取变量数据对应的任务id。</td></tr><tr><td>variableName</td><td>是</td><td>String</td><td>获取数据对应的变量名称。只能使用 <code class="literal">binary</code> 和 <code class="literal">serializable</code> 类型的变量。如果使用了其他类型的变量，会返回 <code class="literal">404</code> 。</td></tr><tr><td>scope</td><td>False</td><td>String</td><td>返回的变量作用于。如果为 '<code class="literal">local</code>'，只返回任务本身的变量。如果为 '<code class="literal">global</code>'，只返回任务上级分支的变量。如果不指定这个变量，会返回所有局部和全局的变量。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N14B63"></a><p class="title"><b>Table&nbsp;15.123.&nbsp;获取变量的二进制数据 - 响应码</b></p><div class="table-contents"><table summary="获取变量的二进制数据 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了任务并返回了请求的变量。</td></tr><tr><td>404</td><td>表示找不到任务，或者任务不包含指定名称的变量（在指定作用域下），或变量的二进制流不可用。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
	  响应体包含了变量的二进制值。当类型为 <code class="literal">binary</code>时，无论请求的accept-type头部设置了什么值，响应的content-type都为<code class="literal">application/octet-stream</code>。当类型为 <code class="literal">serializable</code>时， content-type为<code class="literal">application/x-java-serialized-object</code>。
    </p></div><div class="section" title="创建任务变量"><div class="titlepage"><div><div><h3 class="title"><a name="N14B8C"></a>创建任务变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">variables</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14B96"></a><p class="title"><b>Table&nbsp;15.124.&nbsp;创建任务变量 - URL参数</b></p><div class="table-contents"><table summary="创建任务变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>创建新变量对应的任务id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>创建简单（非二进制）变量的请求体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myTaskVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"string"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Hello my friend"</span><span class="pln"><br>&nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
请求体应该是包含一个或多个JSON对象的数组，对应应该创建的变量。
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">name</code>：必须的变量名称。</p></li><li class="listitem"><p><code class="literal">scope</code>:创建的变量的作用域。如果忽略，假设为<code class="literal">local</code>。</p></li><li class="listitem"><p><code class="literal">type</code>：创建的变量的类型。如果忽略，转换为对应的JSON的类型 (string, boolean, integer 或 double)。</p></li><li class="listitem"><p><code class="literal">value</code>：变量值。</p></li></ul></div><p>
      关于变量格式的详细信息可以参考<a class="link" href="#restVariables" title="变量格式">REST变量章节</a>。
        </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myTaskVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"scope"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"string"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Hello my friend"</span><span class="pln"><br>&nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
          </p><div class="table"><a name="N14BDF"></a><p class="title"><b>Table&nbsp;15.125.&nbsp;创建任务变量 - 响应码</b></p><div class="table-contents"><table summary="创建任务变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示创建了变量，并返回了结果。</td></tr><tr><td>400</td><td>表示没有传变量名，或尝试使用<code class="literal">global</code>作用域为独立任务（没有关联到流程）创建变量，或请求中的变量为空，或请求没有包含变量数组。状态信息包含了详细信息。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr><tr><td>409</td><td>表示任务已经存在指定名称的变量了。可以使用PUT方法来更新任务变量。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="创建二进制任务变量"><div class="titlepage"><div><div><h3 class="title"><a name="N14C03"></a>创建二进制任务变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">variables</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14C0D"></a><p class="title"><b>Table&nbsp;15.126.&nbsp;创建二进制任务变量 - URL参数</b></p><div class="table-contents"><table summary="创建二进制任务变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>创建新变量对应的任务id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
           请求应该是<code class="literal">multipart/form-data</code>类型。应该只有一个文件区域，包含源码的二进制内容。除此之外，需要提供以下表单域：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">name</code>：必须的变量名称。</p></li><li class="listitem"><p><code class="literal">scope</code>：创建的变量的作用域。如果忽略，假设使用 <code class="literal">local</code>。</p></li><li class="listitem"><p><code class="literal">type</code>：创建的变量类型。如果忽略，会假设使用<code class="literal">binary</code>，请求的二进制数据会当做二进制数组保存起来。</p></li></ul></div><p>
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"binaryVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"scope"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"binary"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"valueUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://.../runtime/tasks/123/variables/binaryVariable/data"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N14C50"></a><p class="title"><b>Table&nbsp;15.127.&nbsp;创建二进制任务变量 - 响应码</b></p><div class="table-contents"><table summary="创建二进制任务变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示创建了变量，并返回了结果。</td></tr><tr><td>400</td><td>表示没有传变量名，或尝试使用<code class="literal">global</code>作用域为独立任务（没有关联到流程）创建变量。状态信息包含了详细信息。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr><tr><td>409</td><td>表示任务已经存在指定名称的变量了。可以使用PUT方法来更新任务变量。</td></tr><tr><td>415</td><td>表示序列化数据包含的对象的类并不在运行Activiti引擎的JVM中，所以无法反序列化。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="更新任务的一个已有变量"><div class="titlepage"><div><div><h3 class="title"><a name="N14C79"></a>更新任务的一个已有变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">variables</span><span class="pun">/{</span><span class="pln">variableName</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14C83"></a><p class="title"><b>Table&nbsp;15.128.&nbsp;更新任务的一个已有变量 - URL参数</b></p><div class="table-contents"><table summary="更新任务的一个已有变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>希望更新的变量对应的任务id。</td></tr><tr><td>variableName</td><td>是</td><td>String</td><td>希望更新的变量名称。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>更新简单（非二进制）变量的请求体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myTaskVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"scope"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"string"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Hello my friend"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">name</code>：必须的变量名称。</p></li><li class="listitem"><p><code class="literal">scope</code>：更新的变量的作用域。如果忽略，假设为<code class="literal">local</code>。</p></li><li class="listitem"><p><code class="literal">type</code>：更新的变量的类型。如果忽略，转换为对应的JSON的类型 (string, boolean, integer 或 double)。</p></li><li class="listitem"><p><code class="literal">value</code>：变量值。</p></li></ul></div><p>
      关于变量格式的详细信息可以参考<a class="link" href="#restVariables" title="变量格式">REST变量章节</a>。
        </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myTaskVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"scope"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"string"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Hello my friend"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N14CD5"></a><p class="title"><b>Table&nbsp;15.129.&nbsp;更新任务的一个已有变量 - 响应码</b></p><div class="table-contents"><table summary="更新任务的一个已有变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示成功更新了变量并返回了结果。</td></tr><tr><td>400</td><td>表示没有传变量名，或尝试使用<code class="literal">global</code>作用域为独立任务（没有关联到流程）创建变量。状态信息包含了详细信息。</td></tr><tr><td>404</td><td>表示找不到任务，或任务在指定作用域不包含指定名称的变量。状态信息包含错误的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="更新一个二进制任务变量"><div class="titlepage"><div><div><h3 class="title"><a name="N14CF4"></a>更新一个二进制任务变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">variables</span><span class="pun">/{</span><span class="pln">variableName</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14CFE"></a><p class="title"><b>Table&nbsp;15.130.&nbsp;更新一个二进制任务变量 - URL参数</b></p><div class="table-contents"><table summary="更新一个二进制任务变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>希望更新的变量对应的任务id。</td></tr><tr><td>variableName</td><td>是</td><td>String</td><td>希望更新的变量名称。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
           请求应该是<code class="literal">multipart/form-data</code>类型。应该只有一个文件区域，包含源码的二进制内容。除此之外，需要提供以下表单域：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">name</code>：必须的变量名称。</p></li><li class="listitem"><p><code class="literal">scope</code>：创建的变量的作用域。如果忽略，假设使用 <code class="literal">local</code>。</p></li><li class="listitem"><p><code class="literal">type</code>：创建的变量类型。如果忽略，会假设使用<code class="literal">binary</code>，请求的二进制数据会当做二进制数组保存起来。</p></li></ul></div><p>
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"binaryVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"scope"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"binary"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"valueUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://.../runtime/tasks/123/variables/binaryVariable/data"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N14D4A"></a><p class="title"><b>Table&nbsp;15.131.&nbsp;更新一个二进制任务变量 - 响应码</b></p><div class="table-contents"><table summary="更新一个二进制任务变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示更新了变量，并返回了结果。</td></tr><tr><td>400</td><td>表示没有传变量名，或尝试使用<code class="literal">global</code>作用域为独立任务（没有关联到流程）创建变量。状态信息包含了详细信息。</td></tr><tr><td>404</td><td>表示找不到任务，或任务在指定作用域不包含指定名称的变量。</td></tr><tr><td>415</td><td>表示序列化数据包含的对象的类并不在运行Activiti引擎的JVM中，所以无法反序列化。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="删除任务变量"><div class="titlepage"><div><div><h3 class="title"><a name="N14D6E"></a>删除任务变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">DELETE runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">variables</span><span class="pun">/{</span><span class="pln">variableName</span><span class="pun">}?</span><span class="pln">scope</span><span class="pun">={</span><span class="pln">scope</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14D78"></a><p class="title"><b>Table&nbsp;15.132.&nbsp;删除任务变量 - URL参数</b></p><div class="table-contents"><table summary="删除任务变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>希望删除的变量对应的任务id。</td></tr><tr><td>variableName</td><td>是</td><td>String</td><td>希望删除的变量名称。</td></tr><tr><td>scope</td><td>否</td><td>String</td><td>希望删除的变量的作用域。可以是<code class="literal">local</code> 或 <code class="literal">global</code>。如果忽略，假设为<code class="literal">local</code>。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N14DAF"></a><p class="title"><b>Table&nbsp;15.133.&nbsp;删除任务变量 - 响应码</b></p><div class="table-contents"><table summary="删除任务变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了任务变量，并成功删除。响应体为空。</td></tr><tr><td>404</td><td>表示找不到任务，或任务不包含指定名称的变量。状态信息包含错误的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="删除任务的所有局部变量"><div class="titlepage"><div><div><h3 class="title"><a name="N14DC6"></a>删除任务的所有局部变量</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">DELETE runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">variables</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14DD0"></a><p class="title"><b>Table&nbsp;15.134.&nbsp;删除任务的所有局部变量 - URL参数</b></p><div class="table-contents"><table summary="删除任务的所有局部变量 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>希望删除的变量对应的任务id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N14DEC"></a><p class="title"><b>Table&nbsp;15.135.&nbsp;删除任务的所有局部变量 - 响应码</b></p><div class="table-contents"><table summary="删除任务的所有局部变量 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示已经删除了任务的所有局部变量。响应体为空。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得任务的所有IdentityLink"><div class="titlepage"><div><div><h3 class="title"><a name="N14E03"></a>获得任务的所有IdentityLink</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">identitylinks</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14E0D"></a><p class="title"><b>Table&nbsp;15.136.&nbsp;获得任务的所有IdentityLink - URL参数</b></p><div class="table-contents"><table summary="获得任务的所有IdentityLink - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>希望获得IdentityLink对应的任务id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N14E29"></a><p class="title"><b>Table&nbsp;15.137.&nbsp;获得任务的所有IdentityLink - 响应码</b></p><div class="table-contents"><table summary="获得任务的所有IdentityLink - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了任务，并返回了IdentityLink。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"userId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"groupId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"candidate"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/runtime/tasks/100/identitylinks/users/kermit/candidate"</span><span class="pln"><br>&nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"userId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"groupId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"sales"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"candidate"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/runtime/tasks/100/identitylinks/groups/sales/candidate"</span><span class="pln"><br>&nbsp; </span><span class="pun">},</span><span class="pln"><br><br>&nbsp; </span><span class="pun">...</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
    </p></div><div class="section" title="获得一个任务的所有组或用户的IdentityLink"><div class="titlepage"><div><div><h3 class="title"><a name="N14E49"></a>获得一个任务的所有组或用户的IdentityLink</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">identitylinks</span><span class="pun">/</span><span class="pln">users<br>GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">identitylinks</span><span class="pun">/</span><span class="pln">groups</span></pre><p>
        </p><p>
		返回对应于用户或组的IdentityLink。响应体与状态码与获得一个任务的所有IdentityLink完全一样。
        </p></div><div class="section" title="获得一个任务的一个IdentityLink"><div class="titlepage"><div><div><h3 class="title"><a name="N14E53"></a>获得一个任务的一个IdentityLink</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">identitylinks</span><span class="pun">/{</span><span class="pln">family</span><span class="pun">}/{</span><span class="pln">identityId</span><span class="pun">}/{</span><span class="pln">type</span><span class="pun">}</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N14E5D"></a><p class="title"><b>Table&nbsp;15.138.&nbsp;获得一个任务的所有组或用户的IdentityLink - URL参数</b></p><div class="table-contents"><table summary="获得一个任务的所有组或用户的IdentityLink - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>任务的id。</td></tr><tr><td>family</td><td>是</td><td>String</td><td><code class="literal">groups</code> 或 <code class="literal">users</code>，对应期望获得哪种IdentityLink。</td></tr><tr><td>identityId</td><td>是</td><td>String</td><td>IdentityLink的id。</td></tr><tr><td>type</td><td>是</td><td>String</td><td>IdentityLink的类型。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        </p><div class="table"><a name="N14E99"></a><p class="title"><b>Table&nbsp;15.139.&nbsp;获得一个任务的所有组或用户的IdentityLink - 响应码</b></p><div class="table-contents"><table summary="获得一个任务的所有组或用户的IdentityLink - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了任务和IdentityLink，并成功返回。</td></tr><tr><td>404</td><td>表示找不到任务，或任务不包含请求的IdentityLink。状态包含了错误的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"userId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"groupId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"sales"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"candidate"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/runtime/tasks/100/identitylinks/groups/sales/candidate"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
  </p></div><div class="section" title="为任务创建一个IdentityLink"><div class="titlepage"><div><div><h3 class="title"><a name="N14EB9"></a>为任务创建一个IdentityLink</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">POST runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">identitylinks</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N14EC3"></a><p class="title"><b>Table&nbsp;15.140.&nbsp;为任务创建一个IdentityLink - URL参数</b></p><div class="table-contents"><table summary="为任务创建一个IdentityLink - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>任务的id。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
       <span class="bold"><strong>请求体（用户）：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"userId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"candidate"</span><span class="pun">,</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p><p>
       <span class="bold"><strong>请求体（组）：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"groupId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"sales"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"candidate"</span><span class="pun">,</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p><p>
        </p><div class="table"><a name="N14EF1"></a><p class="title"><b>Table&nbsp;15.141.&nbsp;为任务创建一个IdentityLink - 响应码</b></p><div class="table-contents"><table summary="为任务创建一个IdentityLink - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示找到了任务，并创建了IdentityLink。</td></tr><tr><td>404</td><td>表示找不到任务，或任务不包含请求的IdentityLink。状态包含了错误的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"userId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"groupId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"sales"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"candidate"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/runtime/tasks/100/identitylinks/groups/sales/candidate"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
    </p></div><div class="section" title="删除任务的一个IdentityLink"><div class="titlepage"><div><div><h3 class="title"><a name="N14F11"></a>删除任务的一个IdentityLink</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">DELETE runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">identitylinks</span><span class="pun">/{</span><span class="pln">family</span><span class="pun">}/{</span><span class="pln">identityId</span><span class="pun">}/{</span><span class="pln">type</span><span class="pun">}</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N14F1B"></a><p class="title"><b>Table&nbsp;15.142.&nbsp;删除任务的一个IdentityLink - URL参数</b></p><div class="table-contents"><table summary="删除任务的一个IdentityLink - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>任务的id。</td></tr><tr><td>family</td><td>是</td><td>String</td><td><code class="literal">groups</code> 或 <code class="literal">users</code>，对应IdentityLink的种类。</td></tr><tr><td>identityId</td><td>是</td><td>String</td><td>IdentityLink的id。</td></tr><tr><td>type</td><td>是</td><td>String</td><td>IdentityLink的类型。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
          </p><div class="table"><a name="N14F57"></a><p class="title"><b>Table&nbsp;15.143.&nbsp;删除任务的一个IdentityLink - 响应码</b></p><div class="table-contents"><table summary="删除任务的一个IdentityLink - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了任务和IdentityLInk，并成功删除了IdentityLink。响应体为空。</td></tr><tr><td>404</td><td>表示找不到任务，或任务不包含请求的IdentityLink。状态包含了错误的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="为任务创建评论"><div class="titlepage"><div><div><h3 class="title"><a name="N14F6E"></a>为任务创建评论</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">comments</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14F78"></a><p class="title"><b>Table&nbsp;15.144.&nbsp;为任务创建评论 - URL参数</b></p><div class="table-contents"><table summary="为任务创建评论 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>创建评论对应的任务id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
        </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"message"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"This is a comment on the task."</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"saveProcessInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
        </p><p>
          <code class="literal">saveProcessInstanceId</code>参数是可选的，如果为 <code class="literal">true</code> 会为评论保存任务的流程实例id。
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"taskUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/runtime/tasks/101/comments/123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/history/historic-process-instances/100/comments/123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"message"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"This is a comment on the task."</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"author"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"time"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2014-07-13T13:13:52.232+08:00"</span><span class="pln"><br>&nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"101"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"100"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N14FAC"></a><p class="title"><b>Table&nbsp;15.145.&nbsp;为任务创建评论 - 响应码</b></p><div class="table-contents"><table summary="为任务创建评论 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示创建了评论，并返回了结果。</td></tr><tr><td>400</td><td>表示请求不包含评论。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得任务的所有评论"><div class="titlepage"><div><div><h3 class="title"><a name="N14FC8"></a>获得任务的所有评论</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">comments</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N14FD2"></a><p class="title"><b>Table&nbsp;15.146.&nbsp;获得任务的所有评论 - URL参数</b></p><div class="table-contents"><table summary="获得任务的所有评论 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>获取评论对应的任务id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"taskUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/runtime/tasks/101/comments/123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/history/historic-process-instances/100/comments/123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"message"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"This is a comment on the task."</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"author"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"time"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2014-07-13T13:13:52.232+08:00"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"101"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"100"</span><span class="pln"><br>&nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"456"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"taskUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/runtime/tasks/101/comments/456"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/history/historic-process-instances/100/comments/456"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"message"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"This is another comment on the task."</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"author"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"gonzo"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"time"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2014-07-13T13:13:52.232+08:00"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"101"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"100"</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
          </p><div class="table"><a name="N14FF5"></a><p class="title"><b>Table&nbsp;15.147.&nbsp;获得任务的所有评论 - 响应码</b></p><div class="table-contents"><table summary="获得任务的所有评论 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了任务，并返回了评论。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得任务的一个评论"><div class="titlepage"><div><div><h3 class="title"><a name="N1500C"></a>获得任务的一个评论</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">comments</span><span class="pun">/{</span><span class="pln">commentId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N15016"></a><p class="title"><b>Table&nbsp;15.148.&nbsp;获得任务的一个评论 - URL参数</b></p><div class="table-contents"><table summary="获得任务的一个评论 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>获取评论对应的任务id。</td></tr><tr><td>commentId</td><td>是</td><td>String</td><td>评论的id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"taskUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/runtime/tasks/101/comments/123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/history/historic-process-instances/100/comments/123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"message"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"This is a comment on the task."</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"author"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"time"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2014-07-13T13:13:52.232+08:00"</span><span class="pln"><br>&nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"101"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"100"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N15042"></a><p class="title"><b>Table&nbsp;15.149.&nbsp;获得任务的一个评论 - 响应码</b></p><div class="table-contents"><table summary="获得任务的一个评论 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了任务和评论，并返回了评论。</td></tr><tr><td>404</td><td>表示找不到任务，或任务不包含指定id的评论。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="删除任务的一条评论"><div class="titlepage"><div><div><h3 class="title"><a name="N15059"></a>删除任务的一条评论</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">DELETE runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">comments</span><span class="pun">/{</span><span class="pln">commentId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N15063"></a><p class="title"><b>Table&nbsp;15.150.&nbsp;删除任务的一条评论 - URL参数</b></p><div class="table-contents"><table summary="删除任务的一条评论 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>删除评论对应的任务id。</td></tr><tr><td>commentId</td><td>是</td><td>String</td><td>评论的id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><div class="table"><a name="N15086"></a><p class="title"><b>Table&nbsp;15.151.&nbsp;删除任务的一条评论 - 响应码</b></p><div class="table-contents"><table summary="删除任务的一条评论 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了任务和评论，并删除了评论。响应体为空。</td></tr><tr><td>404</td><td>表示找不到任务，或任务不包含id的评论。</td></tr></tbody></table></div></div><br class="table-break"></div><div class="section" title="获得任务的所有事件"><div class="titlepage"><div><div><h3 class="title"><a name="N1509C"></a>获得任务的所有事件</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">events</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N150A6"></a><p class="title"><b>Table&nbsp;15.152.&nbsp;获得任务的所有事件 - URL参数</b></p><div class="table-contents"><table summary="获得任务的所有事件 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>获得事件对应的任务id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"action"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"AddUserLink"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"message"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"> </span><span class="str">"gonzo"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"contributor"</span><span class="pln"> </span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"taskUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/tasks/2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"time"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-05-17T11:50:50.000+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/tasks/2/events/4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"userId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br>&nbsp; </span><span class="pun">},</span><span class="pln"><br><br>&nbsp; </span><span class="pun">...</span><span class="pln"><br><br></span><span class="pun">]</span></pre><p>
          </p><div class="table"><a name="N150C9"></a><p class="title"><b>Table&nbsp;15.153.&nbsp;获得任务的所有事件 - 响应码</b></p><div class="table-contents"><table summary="获得任务的所有事件 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了任务，并返回了事件。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得任务的一个事件"><div class="titlepage"><div><div><h3 class="title"><a name="N150E0"></a>获得任务的一个事件</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">events</span><span class="pun">/{</span><span class="pln">eventId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N150EA"></a><p class="title"><b>Table&nbsp;15.154.&nbsp;获得任务的一个事件 - URL参数</b></p><div class="table-contents"><table summary="获得任务的一个事件 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>获得事件对应的任务id。</td></tr><tr><td>eventId</td><td>是</td><td>String</td><td>事件的id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"action"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"AddUserLink"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"message"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"> </span><span class="str">"gonzo"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"contributor"</span><span class="pln"> </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"taskUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/tasks/2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"time"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-05-17T11:50:50.000+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/tasks/2/events/4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"userId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N15116"></a><p class="title"><b>Table&nbsp;15.155.&nbsp;获得任务的一个事件 - 响应码</b></p><div class="table-contents"><table summary="获得任务的一个事件 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了任务和事件，并返回了事件。</td></tr><tr><td>404</td><td>表示找不到任务，或任务不包含对应id的事件。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="为任务创建一个附件，包含外部资源的链接"><div class="titlepage"><div><div><h3 class="title"><a name="N1512D"></a>为任务创建一个附件，包含外部资源的链接</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">attachments</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N15137"></a><p class="title"><b>Table&nbsp;15.156.&nbsp;为任务创建一个附件，包含外部资源的链接 - URL参数</b></p><div class="table-contents"><table summary="为任务创建一个附件，包含外部资源的链接 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>创建附件对应的任务id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
        </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Simple attachment"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"description"</span><span class="pun">:</span><span class="str">"Simple attachment description"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"simpleType"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"externalUrl"</span><span class="pun">:</span><span class="str">"http://activiti.org"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
创建附件只有name是必填的。
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/tasks/2/attachments/3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Simple attachment"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"description"</span><span class="pun">:</span><span class="str">"Simple attachment description"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"simpleType"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"taskUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/tasks/2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"externalUrl"</span><span class="pun">:</span><span class="str">"http://activiti.org"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"contentUrl"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N15163"></a><p class="title"><b>Table&nbsp;15.157.&nbsp;为任务创建一个附件，包含外部资源的链接 - 响应码</b></p><div class="table-contents"><table summary="为任务创建一个附件，包含外部资源的链接 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示创建了附件，并返回了结果。</td></tr><tr><td>400</td><td>表示请求中缺少了附件名称。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="为任务创建一个附件，包含附件文件"><div class="titlepage"><div><div><h3 class="title"><a name="N1517F"></a>为任务创建一个附件，包含附件文件</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">attachments</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N15189"></a><p class="title"><b>Table&nbsp;15.158.&nbsp;为任务创建一个附件，包含附件文件 - URL参数</b></p><div class="table-contents"><table summary="为任务创建一个附件，包含附件文件 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>创建附件对应的任务id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
           请求应该是<code class="literal">multipart/form-data</code>类型。应该只有一个文件区域，包含源码的二进制内容。除此之外，需要提供以下表单域：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">name</code>：必须的变量名称。</p></li><li class="listitem"><p><code class="literal">description</code>：附件的描述，可选。</p></li><li class="listitem"><p><code class="literal">type</code>：创建的变量类型。如果忽略，会假设使用<code class="literal">binary</code>，请求的二进制数据会当做二进制数组保存起来。</p></li></ul></div><p>
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/tasks/2/attachments/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Binary attachment"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"description"</span><span class="pun">:</span><span class="str">"Binary attachment description"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"binaryType"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/tasks/2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"externalUrl"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"contentUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/tasks/2/attachments/5/content"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N151C9"></a><p class="title"><b>Table&nbsp;15.159.&nbsp;为任务创建一个附件，包含附件文件 - 响应码</b></p><div class="table-contents"><table summary="为任务创建一个附件，包含附件文件 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示创建了附件，并返回了结果。</td></tr><tr><td>400</td><td>表示请求中缺少附件名称，或请求中未包含文件。错误信息中包含了详细信息。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得任务的所有附件"><div class="titlepage"><div><div><h3 class="title"><a name="N151E5"></a>获得任务的所有附件</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">attachments</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N151EF"></a><p class="title"><b>Table&nbsp;15.160.&nbsp;获得任务的所有附件 - URL参数</b></p><div class="table-contents"><table summary="获得任务的所有附件 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>获取附件对应的任务id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/tasks/2/attachments/3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Simple attachment"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"description"</span><span class="pun">:</span><span class="str">"Simple attachment description"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"simpleType"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"taskUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/tasks/2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"externalUrl"</span><span class="pun">:</span><span class="str">"http://activiti.org"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"contentUrl"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br>&nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/tasks/2/attachments/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Binary attachment"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"description"</span><span class="pun">:</span><span class="str">"Binary attachment description"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"binaryType"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"taskUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/tasks/2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"externalUrl"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"contentUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/tasks/2/attachments/5/content"</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
          </p><div class="table"><a name="N15212"></a><p class="title"><b>Table&nbsp;15.161.&nbsp;获得任务的所有附件 - 响应码</b></p><div class="table-contents"><table summary="获得任务的所有附件 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了任务，并返回了附件。</td></tr><tr><td>404</td><td>表示找不到任务。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得任务的一个附件"><div class="titlepage"><div><div><h3 class="title"><a name="N15229"></a>获得任务的一个附件</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">attachments</span><span class="pun">/{</span><span class="pln">attachmentId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N15233"></a><p class="title"><b>Table&nbsp;15.162.&nbsp;获得任务的一个附件 - URL参数</b></p><div class="table-contents"><table summary="获得任务的一个附件 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>获取附件对应的任务id。</td></tr><tr><td>attachmentId</td><td>是</td><td>String</td><td>附件的id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/tasks/2/attachments/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Binary attachment"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"description"</span><span class="pun">:</span><span class="str">"Binary attachment description"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"binaryType"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"taskUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/tasks/2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"externalUrl"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"contentUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/tasks/2/attachments/5/content"</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span></pre><p>
  </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
        <code class="literal">externalUrl - contentUrl：</code>如果附件是一个外部资源链接，<code class="literal">externalUrl</code>包含外部内容的URL。如果附件内容保存在Activiti引擎中，<code class="literal">contentUrl</code>会包含获取二进制流内容的URL。
      </p></li><li class="listitem"><p>
        <code class="literal">type：</code>可以是任何有效值。包含一个格式合法的media-type时（比如application/xml, text/plain），二进制HTTP响应的content-type会被设置为对应值。
      </p></li></ul></div><p>

        </p><p>
          </p><div class="table"><a name="N15275"></a><p class="title"><b>Table&nbsp;15.163.&nbsp;获得任务的一个附件 - 响应码</b></p><div class="table-contents"><table summary="获得任务的一个附件 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了任务和附件，并返回了附件。</td></tr><tr><td>404</td><td>表示找不到任务，或任务不包含对应id的附件。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获取附件的内容"><div class="titlepage"><div><div><h3 class="title"><a name="N1528C"></a>获取附件的内容</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">attachment</span><span class="pun">/{</span><span class="pln">attachmentId</span><span class="pun">}/</span><span class="pln">content</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N15296"></a><p class="title"><b>Table&nbsp;15.164.&nbsp;获取附件的内容 - URL参数</b></p><div class="table-contents"><table summary="获取附件的内容 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>获取附件数据对应的任务id。</td></tr><tr><td>attachmentId</td><td>是</td><td>String</td><td>附件的id，当附件指向外部URL，而不是Activiti中的内容，就会返回<code class="literal">404</code>。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N152BE"></a><p class="title"><b>Table&nbsp;15.165.&nbsp;获取附件的内容 - 响应码</b></p><div class="table-contents"><table summary="获取附件的内容 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了任务和附件，并返回了请求的内容。</td></tr><tr><td>404</td><td>表示找不到任务，或任务不包含对应id的任务，或附件不包含二进制流。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
      响应体包含了二进制内容。默认，响应的content-type设置为<code class="literal">application/octet-stream</code>，除非附件类型包含了合法的Content-Type。
    </p></div><div class="section" title="删除任务的一个附件"><div class="titlepage"><div><div><h3 class="title"><a name="N152DE"></a>删除任务的一个附件</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">DELETE runtime</span><span class="pun">/</span><span class="pln">tasks</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">attachments</span><span class="pun">/{</span><span class="pln">attachmentId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N152E8"></a><p class="title"><b>Table&nbsp;15.166.&nbsp;删除任务的一个附件 - URL参数</b></p><div class="table-contents"><table summary="删除任务的一个附件 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是</td><td>String</td><td>希望删除附件对应的任务id。</td></tr><tr><td>attachmentId</td><td>是</td><td>String</td><td>附件的id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><div class="table"><a name="N1530B"></a><p class="title"><b>Table&nbsp;15.167.&nbsp;删除任务的一个附件 - 响应码</b></p><div class="table-contents"><table summary="删除任务的一个附件 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了任务和附件，并删除了附件。响应体为空。</td></tr><tr><td>404</td><td>表示找不到任务，或任务不包含对应id的附件。</td></tr></tbody></table></div></div><br class="table-break"></div></div><div class="section" title="历史"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N15321"></a>历史</h2></div></div></div><div class="section" title="获得历史流程实例"><div class="titlepage"><div><div><h3 class="title"><a name="N15324"></a>获得历史流程实例</h3></div></div></div><p>
      </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}</span></pre><p>
    </p><p>
      </p><div class="table"><a name="N1532E"></a><p class="title"><b>Table&nbsp;15.168.&nbsp;获得历史流程实例 - 响应码</b></p><div class="table-contents"><table summary="获得历史流程实例 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了历史流程实例。</td></tr><tr><td>404</td><td>表示找不到历史流程实例。</td></tr></tbody></table></div></div><p><br class="table-break">
    </p><p>
      <span class="bold"><strong>成功响应体：</strong></span>
        </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"businessKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"endTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-18T14:06:32.715+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"durationInMillis"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">86400056</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startUserId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startActivityId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"startEvent"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"endActivityId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"endEvent"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"deleteReason"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"superProcessInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"variables"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"tenantId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div><div class="section" title="历史流程实例列表"><div class="titlepage"><div><div><h3 class="title"><a name="restHistoricProcessInstancesGet"></a>历史流程实例列表</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N15359"></a><p class="title"><b>Table&nbsp;15.169.&nbsp;历史流程实例列表 - URL参数</b></p><div class="table-contents"><table summary="历史流程实例列表 - URL参数" border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>否</td><td>String</td><td>历史流程实例id。</td></tr><tr><td>processDefinitionKey</td><td>否</td><td>String</td><td>历史流程实例的流程定义key。</td></tr><tr><td>processDefinitionId</td><td>否</td><td>String</td><td>历史流程实例的流程定义id。</td></tr><tr><td>businessKey</td><td>否</td><td>String</td><td>历史流程实例的businessKey。</td></tr><tr><td>involvedUser</td><td>否</td><td>String</td><td>历史流程实例的参与者。</td></tr><tr><td>finished</td><td>否</td><td>Boolean</td><td>表示历史流程实例是否结束了。</td></tr><tr><td>superProcessInstanceId</td><td>否</td><td>String</td><td>历史流程实例的上级流程实例id。</td></tr><tr><td>excludeSubprocesses</td><td>否</td><td>Boolean</td><td>只返回非子流程的历史流程实例。</td></tr><tr><td>finishedAfter</td><td>否</td><td>Date</td><td>只返回指定时间之后结束的历史流程实例。</td></tr><tr><td>finishedBefore</td><td>否</td><td>Date</td><td>只返回指定时间之前结束的历史流程实例。</td></tr><tr><td>startedAfter</td><td>否</td><td>Date</td><td>只返回指定时间之后开始的历史流程实例。</td></tr><tr><td>startedBefore</td><td>否</td><td>Date</td><td>只返回指定时间之前开始的历史流程实例。</td></tr><tr><td>startedBy</td><td>否</td><td>String</td><td>只返回由指定用户启动的历史流程实例。</td></tr><tr><td>includeProcessVariables</td><td>否</td><td>Boolean</td><td>表示是否应该返回历史流程实例变量。</td></tr><tr><td>tenantId</td><td>否</td><td>String</td><td>只返回指定tenantId的实例。</td></tr><tr><td>tenantIdLike</td><td>否</td><td>String</td><td>只返回与指定tenantId匹配的实例。</td></tr><tr><td>withoutTenantId</td><td>否</td><td>Boolean</td><td>如果为 <code class="literal">true</code>，只返回未设置tenantId的实例。如果为 <code class="literal">false</code>，会忽略 <code class="literal">withoutTenantId</code> 参数。</td></tr><tr><td><p>可以使用通用的 <a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a> 。</p></td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        </p><div class="table"><a name="N15418"></a><p class="title"><b>Table&nbsp;15.170.&nbsp;历史流程实例列表 - 响应码</b></p><div class="table-contents"><table summary="历史流程实例列表 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示成功返回了历史流程实例。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
          </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"businessKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"endTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-18T14:06:32.715+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"durationInMillis"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">86400056</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startUserId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startActivityId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"startEvent"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"endActivityId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"endEvent"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"deleteReason"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"superProcessInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"variables"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"test"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableScope"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"myTest"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"tenantId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div><div class="section" title="查询历史流程实例"><div class="titlepage"><div><div><h3 class="title"><a name="N15438"></a>查询历史流程实例</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">POST query</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span></pre><p>
      </p><p>
        <span class="bold"><strong>请求体：</strong></span>
        </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="pun">...</span><span class="pln"><br><br>&nbsp; </span><span class="str">"variables"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">1234</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"operation"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"equals"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"long"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p><p>
	    所有支持的JSON参数字段和<a class="link" href="#restHistoricProcessInstancesGet" title="历史流程实例列表">获得历史流程实例集合</a>完全一样，但是传递的是JSON参数，而不是URL参数，这样可以支持更高级的参数，同时避免请求uri过长。除此之外，查询支持基于流程变量查询。
		<code class="literal">variables</code>属性是一个json数组，包含<a class="link" href="#restQueryVariable" title="JSON查询变量格式">此处描述</a>的格式。
      </p><p>
        </p><div class="table"><a name="N15458"></a><p class="title"><b>Table&nbsp;15.171.&nbsp;查询历史流程实例 - 响应码</b></p><div class="table-contents"><table summary="查询历史流程实例 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，并返回结果。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
          </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"businessKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"endTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-18T14:06:32.715+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"durationInMillis"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">86400056</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startUserId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startActivityId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"startEvent"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"endActivityId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"endEvent"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"deleteReason"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"superProcessInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"variables"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"test"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableScope"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"myTest"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"tenantId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div><div class="section" title="删除历史流程实例"><div class="titlepage"><div><div><h3 class="title"><a name="N15478"></a>删除历史流程实例</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">DELETE history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}</span></pre><p>
      </p><p>
        </p><div class="table"><a name="N15482"></a><p class="title"><b>Table&nbsp;15.172.&nbsp;响应码</b></p><div class="table-contents"><table summary="响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示成功删除了历史流程实例。</td></tr><tr><td>404</td><td>表示找不到历史流程实例。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p></div><div class="section" title="获取历史流程实例的IdentityLink"><div class="titlepage"><div><div><h3 class="title"><a name="N15499"></a>获取历史流程实例的IdentityLink</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instance</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">identitylinks</span></pre><p>
      </p><p>
        </p><div class="table"><a name="N154A3"></a><p class="title"><b>Table&nbsp;15.173.&nbsp;响应码</b></p><div class="table-contents"><table summary="响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，并返回了IdentityLink。</td></tr><tr><td>404</td><td>表示找不到历史流程实例。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
          </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"participant"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"userId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"groupId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"taskUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-process-instances/5"</span><span class="pln"><br>&nbsp;</span><span class="pun">}</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
      </p></div><div class="section" title="获取历史流程实例变量的二进制数据"><div class="titlepage"><div><div><h3 class="title"><a name="N154C3"></a>获取历史流程实例变量的二进制数据</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">variables</span><span class="pun">/{</span><span class="pln">variableName</span><span class="pun">}/</span><span class="pln">data</span></pre><p>
      </p><p>
        </p><div class="table"><a name="N154CD"></a><p class="title"><b>Table&nbsp;15.174.&nbsp;获取历史流程实例变量的二进制数据 - 响应码</b></p><div class="table-contents"><table summary="获取历史流程实例变量的二进制数据 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了历史流程实例，并返回了请求的变量数据。</td></tr><tr><td>404</td><td>表示找不到请求的历史流程实例，或流程实例不包含指定名称的变量，或变量不是二进制流。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
      <span class="bold"><strong>成功响应体：</strong></span>
	  响应体包含了变量的二进制值。当类型为 <code class="literal">binary</code>时，无论请求的accept-type头部设置了什么值，响应的content-type都为<code class="literal">application/octet-stream</code>。当类型为 <code class="literal">serializable</code>时， content-type为<code class="literal">application/x-java-serialized-object</code>。
    </p></div><div class="section" title="为历史流程实例创建一条新评论"><div class="titlepage"><div><div><h3 class="title"><a name="N154F6"></a>为历史流程实例创建一条新评论</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">comments</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N15500"></a><p class="title"><b>Table&nbsp;15.175.&nbsp;为历史流程实例创建一条新评论 - URL参数</b></p><div class="table-contents"><table summary="为历史流程实例创建一条新评论 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>需要创建评论的流程实例id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>请求体：</strong></span>
        </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"message"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"This is a comment."</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"saveProcessInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
        </p><p>
         <code class="literal">saveProcessInstanceId</code>参数是可选的，如果为 <code class="literal">true</code> 会为评论保存流程实例id
       </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"taskUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/runtime/tasks/101/comments/123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/history/historic-process-instances/100/comments/123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"message"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"This is a comment on the task."</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"author"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"time"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2014-07-13T13:13:52.232+08:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"101"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"100"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N15534"></a><p class="title"><b>Table&nbsp;15.176.&nbsp;为历史流程实例创建一条新评论 - 响应码</b></p><div class="table-contents"><table summary="为历史流程实例创建一条新评论 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示创建了评论，并返回了结果。</td></tr><tr><td>400</td><td>表示请求中未包含评论。</td></tr><tr><td>404</td><td>表示找不到请求的历史流程实例。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得一个历史流程实例的所有评论"><div class="titlepage"><div><div><h3 class="title"><a name="N15550"></a>获得一个历史流程实例的所有评论</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">comments</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N1555A"></a><p class="title"><b>Table&nbsp;15.177.&nbsp;获得流程实例的所有评论 - URL参数</b></p><div class="table-contents"><table summary="获得流程实例的所有评论 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>必填</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>获取评论对应的流程实例id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/history/historic-process-instances/100/comments/123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"message"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"This is a comment on the task."</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"author"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"time"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2014-07-13T13:13:52.232+08:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"100"</span><span class="pln"><br>&nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; </span><span class="pun">{</span><span class="pln"> <br>&nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"456"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/history/historic-process-instances/100/comments/456"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"message"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"This is another comment."</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"author"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"gonzo"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"time"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2014-07-14T15:16:52.232+08:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"100"</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
          </p><div class="table"><a name="N1557D"></a><p class="title"><b>Table&nbsp;15.178.&nbsp;获得流程实例的所有评论 - 响应码</b></p><div class="table-contents"><table summary="获得流程实例的所有评论 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了流程实例，并返回了评论。</td></tr><tr><td>404</td><td>表示找不到请求的流程实例。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得历史流程实例的一条评论"><div class="titlepage"><div><div><h3 class="title"><a name="N15594"></a>获得历史流程实例的一条评论</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">comments</span><span class="pun">/{</span><span class="pln">commentId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N1559E"></a><p class="title"><b>Table&nbsp;15.179.&nbsp;获得历史流程的一条评论 - URL参数</b></p><div class="table-contents"><table summary="获得历史流程的一条评论 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>必填</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>获得评论对应的历史流程实例。</td></tr><tr><td>commentId</td><td>Yes</td><td>String</td><td>评论的id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8081/activiti-rest/service/history/historic-process-instances/100/comments/456"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"message"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"This is another comment."</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"author"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"gonzo"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"time"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2014-07-14T15:16:52.232+08:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"100"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N155CA"></a><p class="title"><b>Table&nbsp;15.180.&nbsp;获得历史流程的一条评论 - 响应码</b></p><div class="table-contents"><table summary="获得历史流程的一条评论 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了历史流程实例和评论，并返回了评论。</td></tr><tr><td>404</td><td>表示找不到请求的历史流程实例，或历史流程实例不包含指定id的评论。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="删除历史流程实例的一条评论"><div class="titlepage"><div><div><h3 class="title"><a name="N155E1"></a>删除历史流程实例的一条评论</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">DELETE history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">process</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">processInstanceId</span><span class="pun">}/</span><span class="pln">comments</span><span class="pun">/{</span><span class="pln">commentId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N155EB"></a><p class="title"><b>Table&nbsp;15.181.&nbsp;删除历史流程实例的一条评论 - URL参数</b></p><div class="table-contents"><table summary="删除历史流程实例的一条评论 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>必填</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>是</td><td>String</td><td>需要删除的评论对应的历史流程实例的id。</td></tr><tr><td>commentId</td><td>Yes</td><td>String</td><td>评论的id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><div class="table"><a name="N1560E"></a><p class="title"><b>Table&nbsp;15.182.&nbsp;删除历史流程实例的一条评论 - 响应码</b></p><div class="table-contents"><table summary="删除历史流程实例的一条评论 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了历史流程实例，并删除了评论。响应体为空。</td></tr><tr><td>404</td><td>表示找不到请求的历史流程实例，或历史流程实例不包含指定id的评论。</td></tr></tbody></table></div></div><br class="table-break"></div><div class="section" title="获得单独历史任务实例"><div class="titlepage"><div><div><h3 class="title"><a name="N15624"></a>获得单独历史任务实例</h3></div></div></div><p>
      </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">task</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}</span></pre><p>
    </p><p>
      </p><div class="table"><a name="N1562E"></a><p class="title"><b>Table&nbsp;15.183.&nbsp;获得单独历史任务实例 - 响应码</b></p><div class="table-contents"><table summary="获得单独历史任务实例 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了历史任务实例。</td></tr><tr><td>404</td><td>表示找不到历史任务实例。</td></tr></tbody></table></div></div><p><br class="table-break">
    </p><p>
      <span class="bold"><strong>成功响应体：</strong></span>
        </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processDefinitionUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-process-instances/3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"executionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"My task name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"description"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"My task description"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"deleteReason"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"owner"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"assignee"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"fozzie"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"startTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"endTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-18T14:06:32.715+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"durationInMillis"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">86400056</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"workTimeInMillis"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">234890</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"claimTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-18T11:01:54.715+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"taskDefinitionKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"taskKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"formKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"priority"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">50</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"dueDate"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-20T12:11:13.134+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"parentTaskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-task-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"variables"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"tenantId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div><div class="section" title="获取历史任务实例"><div class="titlepage"><div><div><h3 class="title"><a name="restHistoricTaskInstancesGet"></a>获取历史任务实例</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">task</span><span class="pun">-</span><span class="pln">instances</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N15659"></a><p class="title"><b>Table&nbsp;15.184.&nbsp;获取历史任务实例 - URL参数</b></p><div class="table-contents"><table summary="获取历史任务实例 - URL参数" border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>否</td><td>String</td><td>历史任务实例id。</td></tr><tr><td>processInstanceId</td><td>否</td><td>String</td><td>历史任务实例的流程实例id。</td></tr><tr><td>processDefinitionKey</td><td>否</td><td>String</td><td>历史任务实例的流程定义key。</td></tr><tr><td>processDefinitionKeyLike</td><td>否</td><td>String</td><td>历史任务实例的流程定义key与指定值匹配。</td></tr><tr><td>processDefinitionId</td><td>否</td><td>String</td><td>历史任务实例的流程定义id。</td></tr><tr><td>processDefinitionName</td><td>否</td><td>String</td><td>历史任务实例的流程定义名称。</td></tr><tr><td>processDefinitionNameLike</td><td>否</td><td>String</td><td>历史任务实例的流程定义名称与指定值匹配。</td></tr><tr><td>processBusinessKey</td><td>否</td><td>String</td><td>历史任务实例的流程实例businessKey。</td></tr><tr><td>processBusinessKeyLike</td><td>否</td><td>String</td><td>历史任务实例的流程实例业务key与指定值匹配。</td></tr><tr><td>executionId</td><td>否</td><td>String</td><td>历史任务实例的分支id。</td></tr><tr><td>taskDefinitionKey</td><td>否</td><td>String</td><td>流程的任务部分的流程定义key。</td></tr><tr><td>taskName</td><td>否</td><td>String</td><td>历史任务实例的任务名称。</td></tr><tr><td>taskNameLike</td><td>否</td><td>String</td><td>对任务名称使用'like'查询历史任务实例。</td></tr><tr><td>taskDescription</td><td>否</td><td>String</td><td>历史任务实例的任务描述。</td></tr><tr><td>taskDescriptionLike</td><td>否</td><td>String</td><td>对任务描述使用'like'查询历史任务实例。</td></tr><tr><td>taskDefinitionKey</td><td>否</td><td>String</td><td>历史任务实例对应的流程定义的任务定义key。</td></tr><tr><td>taskDeleteReason</td><td>否</td><td>String</td><td>历史任务实例的删除任务原因。</td></tr><tr><td>taskDeleteReasonLike</td><td>否</td><td>String</td><td>对删除任务原因使用'like'查询历史任务实例。</td></tr><tr><td>taskAssignee</td><td>否</td><td>String</td><td>历史任务实例的负责人。</td></tr><tr><td>taskAssigneeLike</td><td>否</td><td>String</td><td>对负责人使用'like'查询历史任务实例。</td></tr><tr><td>taskOwner</td><td>否</td><td>String</td><td>历史任务实例的原拥有者。</td></tr><tr><td>taskOwnerLike</td><td>否</td><td>String</td><td>对原拥有者使用'like'查询历史任务实例。</td></tr><tr><td>taskInvolvedUser</td><td>否</td><td>String</td><td>历史任务实例的参与者。</td></tr><tr><td>taskPriority</td><td>否</td><td>String</td><td>历史任务实例的优先级。</td></tr><tr><td>finished</td><td>否</td><td>Boolean</td><td>表示是否历史任务实例已经结束了。</td></tr><tr><td>processFinished</td><td>否</td><td>Boolean</td><td>表示历史任务实例的流程实例是否已经结束了。</td></tr><tr><td>parentTaskId</td><td>否</td><td>String</td><td>历史任务实例的可能的上级任务id。</td></tr><tr><td>dueDate</td><td>否</td><td>Date</td><td>只返回指定持续时间的历史任务实例。</td></tr><tr><td>dueDateAfter</td><td>否</td><td>Date</td><td>只返回指定持续时间之后的历史任务实例。</td></tr><tr><td>dueDateBefore</td><td>否</td><td>Date</td><td>只返回指定持续时间之前的历史任务实例。</td></tr><tr><td>withoutDueDate</td><td>否</td><td>Boolean</td><td>只返回没有设置持续时间的历史任务实例。当设置为<code class="literal">false</code>时会忽略这个参数。</td></tr><tr><td>taskCompletedOn</td><td>否</td><td>Date</td><td>只返回在指定时间完成的历史任务实例。</td></tr><tr><td>taskCompletedAfter</td><td>否</td><td>Date</td><td>只返回在指定时间之后完成的历史任务实例。</td></tr><tr><td>taskCompletedBefore</td><td>否</td><td>Date</td><td>只返回在指定时间之前完成的历史任务实例。</td></tr><tr><td>taskCreatedOn</td><td>否</td><td>Date</td><td>只返回指定创建时间的历史任务实例。</td></tr><tr><td>taskCreatedBefore</td><td>否</td><td>Date</td><td>只返回在指定时间前创建的历史任务实例。</td></tr><tr><td>taskCreatedAfter</td><td>否</td><td>Date</td><td>只返回在指定时间后创建的历史任务实例。</td></tr><tr><td>includeTaskLocalVariables</td><td>否</td><td>Boolean</td><td>表示是否应该返回历史任务实例局部变量。</td></tr><tr><td>includeProcessVariables</td><td>否</td><td>Boolean</td><td>表示是否应该返回历史任务实例全局变量。</td></tr><tr><td>tenantId</td><td>否</td><td>String</td><td>只返回指定tenantId的历史任务。</td></tr><tr><td>tenantIdLike</td><td>否</td><td>String</td><td>只返回与指定tenantId匹配的历史任务。</td></tr><tr><td>withoutTenantId</td><td>否</td><td>Boolean</td><td>如果为 <code class="literal">true</code>，只返回未设置tenantId的历史任务。如果为 <code class="literal">false</code>，会忽略 <code class="literal">withoutTenantId</code> 参数。</td></tr><tr><td><p>可以使用通用的 <a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a> 。</p></td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        </p><div class="table"><a name="N157FC"></a><p class="title"><b>Table&nbsp;15.185.&nbsp;获取历史任务实例 - 响应码</b></p><div class="table-contents"><table summary="获取历史任务实例 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示可以查询的历史任务实例。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
          </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-process-instances/3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"executionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"My task name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"description"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"My task description"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"deleteReason"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"owner"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"assignee"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"fozzie"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"endTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-18T14:06:32.715+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"durationInMillis"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">86400056</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"workTimeInMillis"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">234890</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"claimTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-18T11:01:54.715+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskDefinitionKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"taskKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"formKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"priority"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">50</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"dueDate"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-20T12:11:13.134+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"parentTaskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-task-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskVariables"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"test"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableScope"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"myTest"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processVariables"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"processTest"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableScope"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"global"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"myProcessTest"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"tenantId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div><div class="section" title="查询历史任务实例"><div class="titlepage"><div><div><h3 class="title"><a name="N1581C"></a>查询历史任务实例</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">POST query</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">task</span><span class="pun">-</span><span class="pln">instances</span></pre><p>
      </p><p>
        <span class="bold"><strong>查询历史任务实例 - 请求体：</strong></span>
        </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="pun">...</span><span class="pln"><br><br>&nbsp; </span><span class="str">"variables"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">1234</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"operation"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"equals"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"long"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p><p>
	    所有支持的JSON参数字段和<a class="link" href="#restHistoricTaskInstancesGet" title="获取历史任务实例">获得历史任务实例集合</a>完全一样，但是传递的是JSON参数，而不是URL参数，这样可以支持更高级的参数，同时避免请求uri过长。除此之外，查询支持基于流程变量查询。
		<code class="literal">taskVariables</code>和<code class="literal">processVariables</code>属性是一个json数组，包含<a class="link" href="#restQueryVariable" title="JSON查询变量格式">此处描述</a>的格式。
      </p><p>
        </p><div class="table"><a name="N1583F"></a><p class="title"><b>Table&nbsp;15.186.&nbsp;查询历史任务实例 - 响应码</b></p><div class="table-contents"><table summary="查询历史任务实例 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，并返回任务。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
          </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-process-instances/3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"executionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"My task name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"description"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"My task description"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"deleteReason"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"owner"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"assignee"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"fozzie"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"endTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-18T14:06:32.715+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"durationInMillis"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">86400056</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"workTimeInMillis"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">234890</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"claimTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-18T11:01:54.715+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskDefinitionKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"taskKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"formKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"priority"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">50</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"dueDate"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-20T12:11:13.134+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"parentTaskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-task-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskVariables"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"test"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableScope"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"local"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"myTest"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processVariables"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"processTest"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableScope"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"global"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"myProcessTest"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">]</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div><div class="section" title="删除历史任务实例"><div class="titlepage"><div><div><h3 class="title"><a name="N1585F"></a>删除历史任务实例</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">DELETE history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">task</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}</span></pre><p>
      </p><p>
        </p><div class="table"><a name="N15869"></a><p class="title"><b>Table&nbsp;15.187.&nbsp;响应码</b></p><div class="table-contents"><table summary="响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表似乎删除了历史任务实例。</td></tr><tr><td>404</td><td>表示找不到历史任务实例。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p></div><div class="section" title="获得历史任务实例的IdentityLink"><div class="titlepage"><div><div><h3 class="title"><a name="N15880"></a>获得历史任务实例的IdentityLink</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">task</span><span class="pun">-</span><span class="pln">instance</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">identitylinks</span></pre><p>
      </p><p>
        </p><div class="table"><a name="N1588A"></a><p class="title"><b>Table&nbsp;15.188.&nbsp;响应码</b></p><div class="table-contents"><table summary="响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，并返回了IdentityLink。</td></tr><tr><td>404</td><td>表示找不到任务实例。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
          </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"assignee"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"userId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"groupId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"6"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"taskUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-task-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br>&nbsp;</span><span class="pun">}</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
      </p></div><div class="section" title="获取历史任务实例变量的二进制值"><div class="titlepage"><div><div><h3 class="title"><a name="N158AA"></a>获取历史任务实例变量的二进制值</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">task</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">taskId</span><span class="pun">}/</span><span class="pln">variables</span><span class="pun">/{</span><span class="pln">variableName</span><span class="pun">}/</span><span class="pln">data</span></pre><p>
      </p><p>
        </p><div class="table"><a name="N158B4"></a><p class="title"><b>Table&nbsp;15.189.&nbsp;获取历史任务实例变量的二进制值 - 响应码</b></p><div class="table-contents"><table summary="获取历史任务实例变量的二进制值 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了任务实例，并返回了请求的变量数据。</td></tr><tr><td>404</td><td>表示找不到任务实例，或任务实例不包含指定名称的变量，或变量没有有效的二进制流。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
	    响应体包含了变量的二进制值。当类型为 <code class="literal">binary</code>时，无论请求的accept-type头部设置了什么值，响应的content-type都为<code class="literal">application/octet-stream</code>。当类型为 <code class="literal">serializable</code>时， content-type为<code class="literal">application/x-java-serialized-object</code>。
      </p></div><div class="section" title="获取历史活动实例"><div class="titlepage"><div><div><h3 class="title"><a name="restHistoricActivityInstancesGet"></a>获取历史活动实例</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">activity</span><span class="pun">-</span><span class="pln">instances</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N158E8"></a><p class="title"><b>Table&nbsp;15.190.&nbsp;获取历史活动实例 - URL参数</b></p><div class="table-contents"><table summary="获取历史活动实例 - URL参数" border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>activityId</td><td>否</td><td>String</td><td>活动实例id。</td></tr><tr><td>activityInstanceId</td><td>否</td><td>String</td><td>历史活动实例id。</td></tr><tr><td>activityName</td><td>否</td><td>String</td><td>历史活动实例的名称。</td></tr><tr><td>activityType</td><td>否</td><td>String</td><td>历史活动实例的元素类型。</td></tr><tr><td>executionId</td><td>否</td><td>String</td><td>历史活动实例的分支id。</td></tr><tr><td>finished</td><td>否</td><td>Boolean</td><td>表示历史活动实例是否完成。</td></tr><tr><td>taskAssignee</td><td>否</td><td>String</td><td>历史活动实例的负责人。</td></tr><tr><td>processInstanceId</td><td>否</td><td>String</td><td>历史活动实例的流程实例id。</td></tr><tr><td>processDefinitionId</td><td>否</td><td>String</td><td>历史活动实例的流程定义id。</td></tr><tr><td>tenantId</td><td>否</td><td>String</td><td>只返回指定tenantId的实例。</td></tr><tr><td>tenantIdLike</td><td>否</td><td>String</td><td>只返回与指定tenantId匹配的实例</td></tr><tr><td>withoutTenantId</td><td>否</td><td>Boolean</td><td>如果为 <code class="literal">true</code>，只返回未设置tenantId的历史。如果为 <code class="literal">false</code>，会忽略 <code class="literal">withoutTenantId</code> 参数。</td></tr><tr><td><p>可以使用通用的 <a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a> 。</p></td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        </p><div class="table"><a name="N1597A"></a><p class="title"><b>Table&nbsp;15.191.&nbsp;获取历史活动实例 - 响应码</b></p><div class="table-contents"><table summary="获取历史活动实例 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示反悔了查询的历史活动实例。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
          </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"activityId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"activityName"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"My user task"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"activityType"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"userTask"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-process-instances/3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"executionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"calledProcessInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"assignee"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"fozzie"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"endTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-18T14:06:32.715+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"durationInMillis"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">86400056</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"tenantId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div><div class="section" title="查询历史活动实例"><div class="titlepage"><div><div><h3 class="title"><a name="N1599A"></a>查询历史活动实例</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">POST query</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">activity</span><span class="pun">-</span><span class="pln">instances</span></pre><p>
      </p><p>
        <span class="bold"><strong>请求体：</strong></span>
        </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess%3A1%3A4"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p><p>
	    所有支持的JSON参数字段和<a class="link" href="#restHistoricTaskInstancesGet" title="获取历史任务实例">获得历史任务实例集合</a>完全一样，但是传递的是JSON参数，而不是URL参数，这样可以支持更高级的参数，同时避免请求uri过长。
      </p><p>
        </p><div class="table"><a name="N159B3"></a><p class="title"><b>Table&nbsp;15.192.&nbsp;查询历史活动实例 - 响应码</b></p><div class="table-contents"><table summary="查询历史活动实例 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求充公，并返回了活动。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
          </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"activityId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"activityName"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"My user task"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"activityType"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"userTask"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-process-instances/3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"executionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"calledProcessInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"assignee"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"fozzie"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"endTime"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-18T14:06:32.715+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"durationInMillis"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">86400056</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"tenantId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div><div class="section" title="列出历史变量实例"><div class="titlepage"><div><div><h3 class="title"><a name="restHistoricVariableInstancesGet"></a>列出历史变量实例</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">variable</span><span class="pun">-</span><span class="pln">instances</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N159DE"></a><p class="title"><b>Table&nbsp;15.193.&nbsp;列出历史变量实例 - URL参数</b></p><div class="table-contents"><table summary="列出历史变量实例 - URL参数" border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>processInstanceId</td><td>否</td><td>String</td><td>历史变量实例的流程实例id。</td></tr><tr><td>taskId</td><td>否</td><td>String</td><td>历史变量实例的任务id。</td></tr><tr><td>excludeTaskVariables</td><td>否</td><td>Boolean</td><td>表示从结果中排除任务变量。</td></tr><tr><td>variableName</td><td>否</td><td>String</td><td>历史变量实例的变量名称。</td></tr><tr><td>variableNameLike</td><td>否</td><td>String</td><td>对变量名称使用'like'操作历史变量实例。</td></tr><tr><td><p>可以使用通用的 <a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a> 。</p></td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        </p><div class="table"><a name="N15A28"></a><p class="title"><b>Table&nbsp;15.194.&nbsp;列出历史变量实例 - 响应码</b></p><div class="table-contents"><table summary="列出历史变量实例 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示获得了历史变量实例。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
          </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"14"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"6"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"variable"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableScope"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"global"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"test"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div><div class="section" title="查询历史变量实例"><div class="titlepage"><div><div><h3 class="title"><a name="N15A48"></a>查询历史变量实例</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">POST query</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">variable</span><span class="pun">-</span><span class="pln">instances</span></pre><p>
      </p><p>
        <span class="bold"><strong>请求体：</strong></span>
        </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"oneTaskProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="pun">...</span><span class="pln"><br><br>&nbsp; </span><span class="str">"variables"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">1234</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"operation"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"equals"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"long"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p><p>
	    所有支持的JSON参数字段和<a class="link" href="#restHistoricVariableInstancesGet" title="列出历史变量实例">获得历史变量实例集合</a>完全一样，但是传递的是JSON参数，而不是URL参数，这样可以支持更高级的参数，同时避免请求uri过长。除此之外，查询支持基于流程变量查询。
		<code class="literal">variables</code>属性是一个json数组，包含<a class="link" href="#restQueryVariable" title="JSON查询变量格式">此处描述</a>的格式。
      </p><p>
        </p><div class="table"><a name="N15A68"></a><p class="title"><b>Table&nbsp;15.195.&nbsp;查询历史变量实例 - 响应码</b></p><div class="table-contents"><table summary="查询历史变量实例 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，并返回任务。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
          </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"14"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"6"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"variable"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableScope"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"global"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"test"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div><div class="section" title="获取历史任务实例变量的二进制值"><div class="titlepage"><div><div><h3 class="title"><a name="N15A88"></a>获取历史任务实例变量的二进制值</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">variable</span><span class="pun">-</span><span class="pln">instances</span><span class="pun">/{</span><span class="pln">varInstanceId</span><span class="pun">}/</span><span class="pln">data</span></pre><p>
      </p><p>
        </p><div class="table"><a name="N15A92"></a><p class="title"><b>Table&nbsp;15.196.&nbsp;获取历史任务实例变量的二进制值 - 响应码</b></p><div class="table-contents"><table summary="获取历史任务实例变量的二进制值 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了变量实例，并返回了请求的变量数据。</td></tr><tr><td>404</td><td>表示找不到变量实例，或找不到对应名称的变量实例，或变量不包含合法的二进制流。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
      <span class="bold"><strong>成功响应体：</strong></span>
	  响应体包含了变量的二进制值。当类型为 <code class="literal">binary</code>时，无论请求的accept-type头部设置了什么值，响应的content-type都为<code class="literal">application/octet-stream</code>。当类型为 <code class="literal">serializable</code>时， content-type为<code class="literal">application/x-java-serialized-object</code>。
    </p></div><div class="section" title="获取历史细节"><div class="titlepage"><div><div><h3 class="title"><a name="restHistoricDetailGet"></a>获取历史细节</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">detail</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N15AC6"></a><p class="title"><b>Table&nbsp;15.197.&nbsp;获取历史细节 - URL参数</b></p><div class="table-contents"><table summary="获取历史细节 - URL参数" border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>否</td><td>String</td><td>历史细节的id。</td></tr><tr><td>processInstanceId</td><td>否</td><td>String</td><td>历史细节的流程实例id。</td></tr><tr><td>executionId</td><td>否</td><td>String</td><td>历史细节的分支id。</td></tr><tr><td>activityInstanceId</td><td>否</td><td>String</td><td>历史细节的活动实例id。</td></tr><tr><td>taskId</td><td>否</td><td>String</td><td>历史细节的任务id。</td></tr><tr><td>selectOnlyFormProperties</td><td>否</td><td>Boolean</td><td>表示结果中只返回FormProperties。</td></tr><tr><td>selectOnlyVariableUpdates</td><td>否</td><td>Boolean</td><td>表示结果中只返回变量更新信息。</td></tr><tr><td><p>可以使用通用的 <a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a> 。</p></td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        </p><div class="table"><a name="N15B22"></a><p class="title"><b>Table&nbsp;15.198.&nbsp;获取历史细节 - 响应码</b></p><div class="table-contents"><table summary="获取历史细节 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示返回了查询的历史细节。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
          </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"26"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"executionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"6"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"activityInstanceId"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"10"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"6"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-task-instances/6"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"time"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"detailType"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"variableUpdate"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"revision"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"variable"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableScope"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"global"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"test"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"propertyId"</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"propertyValue"</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div><div class="section" title="查询历史细节"><div class="titlepage"><div><div><h3 class="title"><a name="N15B42"></a>查询历史细节</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">POST query</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">detail</span></pre><p>
      </p><p>
        <span class="bold"><strong>请求体：</strong></span>
        </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p><p>
	    所有支持的JSON参数字段和<a class="link" href="#restHistoricVariableInstancesGet" title="列出历史变量实例">获得历史变量实例集合</a>完全一样，但是传递的是JSON参数，而不是URL参数，这样可以支持更高级的参数，同时避免请求uri过长。
      </p><p>
        </p><div class="table"><a name="N15B5B"></a><p class="title"><b>Table&nbsp;15.199.&nbsp;查询历史细节 - 响应码</b></p><div class="table-contents"><table summary="查询历史细节 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，并返回了历史细节。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
          </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"26"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"executionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"6"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"activityInstanceId"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"10"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"6"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-task-instances/6"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"time"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2013-04-17T10:17:43.902+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"detailType"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"variableUpdate"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"revision"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"variable"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myVariable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableScope"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"global"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"test"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"propertyId"</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"propertyValue"</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div><div class="section" title="获取历史细节变量的二进制数据"><div class="titlepage"><div><div><h3 class="title"><a name="N15B7B"></a>获取历史细节变量的二进制数据</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET history</span><span class="pun">/</span><span class="pln">historic</span><span class="pun">-</span><span class="pln">detail</span><span class="pun">/{</span><span class="pln">detailId</span><span class="pun">}/</span><span class="pln">data</span></pre><p>
      </p><p>
        </p><div class="table"><a name="N15B85"></a><p class="title"><b>Table&nbsp;15.200.&nbsp;获取历史细节变量的二进制数据 - 响应码</b></p><div class="table-contents"><table summary="获取历史细节变量的二进制数据 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了历史细节实例，并返回了请求的变量数据。</td></tr><tr><td>404</td><td>表示找不到历史细节实例，或历史细节实例不包含指定名称的变量，或变量不包含合法的二进制流。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
	    响应体包含了变量的二进制值。当类型为 <code class="literal">binary</code>时，无论请求的accept-type头部设置了什么值，响应的content-type都为<code class="literal">application/octet-stream</code>。当类型为 <code class="literal">serializable</code>时， content-type为<code class="literal">application/x-java-serialized-object</code>。
      </p></div></div><div class="section" title="表单"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N15BAE"></a>表单</h2></div></div></div><div class="section" title="获取表单数据"><div class="titlepage"><div><div><h3 class="title"><a name="N15BB1"></a>获取表单数据</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET form</span><span class="pun">/</span><span class="pln">form</span><span class="pun">-</span><span class="pln">data</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N15BBB"></a><p class="title"><b>Table&nbsp;15.201.&nbsp;获取表单数据 - URL参数</b></p><div class="table-contents"><table summary="获取表单数据 - URL参数" border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>taskId</td><td>是（如果没有processDefinitionId）</td><td>String</td><td>获取表单数据需要对应的任务id。</td></tr><tr><td>processDefinitionId</td><td>是（如果没有taskId）</td><td>String</td><td>获取startEvent表单数据需要对应的流程定义id。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        </p><div class="table"><a name="N15BE0"></a><p class="title"><b>Table&nbsp;15.202.&nbsp;获取表单数据 - 响应码</b></p><div class="table-contents"><table summary="获取表单数据 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示返回了查询的表单数据。</td></tr><tr><td>404</td><td>表示找不到表单数据。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>成功响应体：</strong></span>
          </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"formKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"deploymentId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definition/3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"6"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/runtime/task/6"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"formProperties"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"room"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Room"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"string"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"readable"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"writable"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"required"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"datePattern"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"enumValues"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"normal"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Normal bed"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"kingsize"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Kingsize bed"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">]</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">]</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div><div class="section" title="提交任务表单数据"><div class="titlepage"><div><div><h3 class="title"><a name="N15C00"></a>提交任务表单数据</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">POST form</span><span class="pun">/</span><span class="pln">form</span><span class="pun">-</span><span class="pln">data</span></pre><p>
      </p><p>
        <span class="bold"><strong>任务表单的请求体：</strong></span>
        </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"taskId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"properties"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"room"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"normal"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p><p>
        <span class="bold"><strong>startEvent表单的请求体：</strong></span>
        </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"businessKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myKey"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">(</span><span class="pln">optional</span><span class="pun">)</span><span class="pln"><br>&nbsp; </span><span class="str">"properties"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"room"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"normal"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p><p>
        </p><div class="table"><a name="N15C1C"></a><p class="title"><b>Table&nbsp;15.203.&nbsp;提交任务表单数据 - 响应码</b></p><div class="table-contents"><table summary="提交任务表单数据 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功，并提交了表单数据。</td></tr><tr><td>400</td><td>表示传递了错误格式的参数。状态信息包含了详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
        <span class="bold"><strong>startEvent表单数据的成功响应体（任务表单数据没有响应）：</strong></span>
          </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"url"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/history/historic-process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"businessKey"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myKey"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"suspended"</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processDefinitionId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processDefinitionUrl"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://localhost:8182/repository/process-definition/3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"activityId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"myTask"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p></div></div><div class="section" title="数据库表"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N15C3C"></a>数据库表</h2></div></div></div><div class="section" title="表列表"><div class="titlepage"><div><div><h3 class="title"><a name="N15C3F"></a>表列表</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET management</span><span class="pun">/</span><span class="pln">tables</span></pre><p>
      </p><p>
        </p><div class="table"><a name="N15C49"></a><p class="title"><b>Table&nbsp;15.204.&nbsp;表列表 - 响应码</b></p><div class="table-contents"><table summary="表列表 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示请求成功。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
       <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"ACT_RU_VARIABLE"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/management/tables/ACT_RU_VARIABLE"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"count"</span><span class="pun">:</span><span class="lit">4528</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"ACT_RU_EVENT_SUBSCR"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/management/tables/ACT_RU_EVENT_SUBSCR"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"count"</span><span class="pun">:</span><span class="lit">3</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp;</span><span class="pun">...</span><span class="pln"><br><br></span><span class="pun">]</span></pre><p>
    </p></div><div class="section" title="获得一张表"><div class="titlepage"><div><div><h3 class="title"><a name="N15C64"></a>获得一张表</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET management</span><span class="pun">/</span><span class="pln">tables</span><span class="pun">/{</span><span class="pln">tableName</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N15C6E"></a><p class="title"><b>Table&nbsp;15.205.&nbsp;获得一张表 - URL参数</b></p><div class="table-contents"><table summary="获得一张表 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>tableName</td><td>是</td><td>String</td><td>获取表的名称。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"ACT_RE_PROCDEF"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/management/tables/ACT_RE_PROCDEF"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"count"</span><span class="pun">:</span><span class="lit">60</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N15C91"></a><p class="title"><b>Table&nbsp;15.206.&nbsp;获得一张表 - 响应码</b></p><div class="table-contents"><table summary="获得一张表 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示表存在，并返回了表的记录数。</td></tr><tr><td>404</td><td>表示表不存在。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得表的列信息"><div class="titlepage"><div><div><h3 class="title"><a name="N15CA8"></a>获得表的列信息</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET management</span><span class="pun">/</span><span class="pln">tables</span><span class="pun">/{</span><span class="pln">tableName</span><span class="pun">}/</span><span class="pln">columns</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N15CB2"></a><p class="title"><b>Table&nbsp;15.207.&nbsp;获得表的列信息 - URL参数</b></p><div class="table-contents"><table summary="获得表的列信息 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>tableName</td><td>是</td><td>String</td><td>获取表的名称。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"tableName"</span><span class="pun">:</span><span class="str">"ACT_RU_VARIABLE"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"columnNames"</span><span class="pun">:[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"ID_"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"REV_"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"TYPE_"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"NAME_"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"columnTypes"</span><span class="pun">:[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"VARCHAR"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"INTEGER"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"VARCHAR"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"VARCHAR"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N15CD5"></a><p class="title"><b>Table&nbsp;15.208.&nbsp;获得表的列信息 - 响应码</b></p><div class="table-contents"><table summary="获得表的列信息 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示表存在，并返回了表的列信息。</td></tr><tr><td>404</td><td>表示表不存在。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得表的行数据"><div class="titlepage"><div><div><h3 class="title"><a name="N15CEC"></a>获得表的行数据</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET management</span><span class="pun">/</span><span class="pln">tables</span><span class="pun">/{</span><span class="pln">tableName</span><span class="pun">}/</span><span class="pln">data</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N15CF6"></a><p class="title"><b>Table&nbsp;15.209.&nbsp;获得表的行数据 - URL参数</b></p><div class="table-contents"><table summary="获得表的行数据 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>tableName</td><td>是</td><td>String</td><td>获取表的名称。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
            </p><div class="table"><a name="N15D12"></a><p class="title"><b>Table&nbsp;15.210.&nbsp;获得表的行数据 - URL参数</b></p><div class="table-contents"><table summary="获得表的行数据 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>start</td><td>否</td><td>Integer</td><td>从哪一行开始获取。默认为0。</td></tr><tr><td>size</td><td>否</td><td>Integer</td><td>获取行数，从<code class="literal">start</code>开始。默认为10。</td></tr><tr><td>orderAscendingColumn</td><td>否</td><td>String</td><td>对结果行进行排序的字段，正序。</td></tr><tr><td>orderDescendingColumn</td><td>否</td><td>String</td><td>对结果行进行排序的字段，倒序。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="lit">3</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"start"</span><span class="pun">:</span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"sort"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"order"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"size"</span><span class="pun">:</span><span class="lit">3</span><span class="pun">,</span><span class="pln"><br><br>&nbsp; &nbsp;</span><span class="str">"data"</span><span class="pun">:[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"TASK_ID_"</span><span class="pun">:</span><span class="str">"2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"NAME_"</span><span class="pun">:</span><span class="str">"var1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"REV_"</span><span class="pun">:</span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"TEXT_"</span><span class="pun">:</span><span class="str">"123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"LONG_"</span><span class="pun">:</span><span class="lit">123</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"ID_"</span><span class="pun">:</span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"TYPE_"</span><span class="pun">:</span><span class="str">"integer"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">]</span><span class="pln"><br><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N15D53"></a><p class="title"><b>Table&nbsp;15.211.&nbsp;获得表的行数据 - 响应码</b></p><div class="table-contents"><table summary="获得表的行数据 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示表存在，并返回了行数据。</td></tr><tr><td>404</td><td>表示表不存在。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div></div><div class="section" title="引擎"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N15D6A"></a>引擎</h2></div></div></div><div class="section" title="获得引擎属性"><div class="titlepage"><div><div><h3 class="title"><a name="N15D6D"></a>获得引擎属性</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET management</span><span class="pun">/</span><span class="pln">properties</span></pre><p>
        </p><p>
		返回引擎内部使用的只读属性。
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"next.dbid"</span><span class="pun">:</span><span class="str">"101"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"schema.history"</span><span class="pun">:</span><span class="str">"create(5.14)"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"schema.version"</span><span class="pun">:</span><span class="str">"5.14"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N15D80"></a><p class="title"><b>Table&nbsp;15.212.&nbsp;获得引擎属性 - 响应码</b></p><div class="table-contents"><table summary="获得引擎属性 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示返回了属性。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得引擎信息"><div class="titlepage"><div><div><h3 class="title"><a name="N15D92"></a>获得引擎信息</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET management</span><span class="pun">/</span><span class="pln">engine</span></pre><p>
        </p><p>
		获得REST服务使用的引擎的只读信息。
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"name"</span><span class="pun">:</span><span class="str">"default"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"version"</span><span class="pun">:</span><span class="str">"5.14"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"resourceUrl"</span><span class="pun">:</span><span class="str">"file://activiti/activiti.cfg.xml"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"exception"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N15DA5"></a><p class="title"><b>Table&nbsp;15.213.&nbsp;获得引擎信息 - 响应码</b></p><div class="table-contents"><table summary="获得引擎信息 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示返回了引擎信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div></div><div class="section" title="运行时"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N15DB7"></a>运行时</h2></div></div></div><div class="section" title="接收信号事件"><div class="titlepage"><div><div><h3 class="title"><a name="N15DBA"></a>接收信号事件</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST runtime</span><span class="pun">/</span><span class="pln">signals</span></pre><p>
        </p><p>
        提醒引擎，接收了一个信号事件，不会特别针对某个流程。
        </p><p>
         <span class="bold"><strong>JSON体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"signalName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"My Signal"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"tenantId"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"execute"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"async"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"variables"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"testVar"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"value"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"This is a string"</span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; </span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
        </p><div class="table"><a name="N15DCD"></a><p class="title"><b>Table&nbsp;15.214.&nbsp;接收信号事件 - JSON体参数</b></p><div class="table-contents"><table summary="接收信号事件 - JSON体参数" border="1"><colgroup><col><col></colgroup><thead><tr><th>参数</th><th>描述</th><th>必填</th></tr></thead><tbody><tr><td>signalName</td><td>signal的名称</td><td>是</td></tr><tr><td>tenantId</td><td>信号事件应该执行在的tenantId</td><td>否</td></tr><tr><td>async</td><td>如果为 <code class="literal">true</code>，处理信号应该是异步的。返回码为 <code class="literal">202 - Accepted</code> 表示请求已接受，但尚未执行。如果为 <code class="literal">false</code>，会立即处理信号，结果为 (<code class="literal">200 - OK</code>) 会在成功完成后返回。如果忽略，默认为 <code class="literal">false</code> 。</td><td>否</td></tr><tr><td>variables</td><td>变量数组（通用的参数格式）用来向信号传递载荷。不能把 <code class="literal">async</code> 设置为 <code class="literal">true</code>，它会导致返回错误。</td><td>否</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
          </p><div class="table"><a name="N15E13"></a><p class="title"><b>Table&nbsp;15.215.&nbsp;接收信号事件 - 响应码</b></p><div class="table-contents"><table summary="接收信号事件 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示已经处理了信号，没有发生错误。</td></tr><tr><td>202</td><td>表示信号处理已经进入一个异步作业的队列，准备执行了。</td></tr><tr><td>400</td><td>信号没有处理。缺少信号名，或同时使用了变量和异步，这是不允许的。响应体包含了错误的额外信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div></div><div class="section" title="作业"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N15E2F"></a>作业</h2></div></div></div><div class="section" title="获取一个作业"><div class="titlepage"><div><div><h3 class="title"><a name="N15E32"></a>获取一个作业</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET management</span><span class="pun">/</span><span class="pln">jobs</span><span class="pun">/{</span><span class="pln">jobId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N15E3C"></a><p class="title"><b>Table&nbsp;15.216.&nbsp;获取一个作业 - URL参数</b></p><div class="table-contents"><table summary="获取一个作业 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>jobId</td><td>是</td><td>String</td><td>获取的作业id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"8"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/management/jobs/8"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"processInstanceId"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"processInstanceUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"processDefinitionId"</span><span class="pun">:</span><span class="str">"timerProcess:1:4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"processDefinitionUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/process-definitions/timerProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"executionId"</span><span class="pun">:</span><span class="str">"7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"executionUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/executions/7"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"retries"</span><span class="pun">:</span><span class="lit">3</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"exceptionMessage"</span><span class="pun">:</span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"dueDate"</span><span class="pun">:</span><span class="str">"2013-06-04T22:05:05.474+0000"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"tenantId"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N15E5F"></a><p class="title"><b>Table&nbsp;15.217.&nbsp;获取一个作业 - 响应码</b></p><div class="table-contents"><table summary="获取一个作业 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示作业存在，并成功返回。</td></tr><tr><td>404</td><td>表示作业不存在。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="删除作业"><div class="titlepage"><div><div><h3 class="title"><a name="N15E76"></a>删除作业</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">DELETE management</span><span class="pun">/</span><span class="pln">jobs</span><span class="pun">/{</span><span class="pln">jobId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N15E80"></a><p class="title"><b>Table&nbsp;15.218.&nbsp;删除作业 - URL参数</b></p><div class="table-contents"><table summary="删除作业 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>jobId</td><td>是</td><td>String</td><td>期望删除的作业id。.</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N15E9C"></a><p class="title"><b>Table&nbsp;15.219.&nbsp;删除作业 - 响应码</b></p><div class="table-contents"><table summary="删除作业 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了作业，并成功删除。响应体为空。</td></tr><tr><td>404</td><td>表示找不到作业。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="执行作业"><div class="titlepage"><div><div><h3 class="title"><a name="N15EB3"></a>执行作业</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST management</span><span class="pun">/</span><span class="pln">jobs</span><span class="pun">/{</span><span class="pln">jobId</span><span class="pun">}</span></pre><p>
        </p><p>
         <span class="bold"><strong>请求JSON体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"action"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"execute"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
        </p><div class="table"><a name="N15EC4"></a><p class="title"><b>Table&nbsp;15.220.&nbsp;执行作业 - 请求的JSON参数</b></p><div class="table-contents"><table summary="执行作业 - 请求的JSON参数" border="1"><colgroup><col><col></colgroup><thead><tr><th>参数</th><th>描述</th><th>是否必填</th></tr></thead><tbody><tr><td>action</td><td>执行的操作。只支持<code class="literal">execute</code>。</td><td>是</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N15EDF"></a><p class="title"><b>Table&nbsp;15.221.&nbsp;执行作业 - 响应码</b></p><div class="table-contents"><table summary="执行作业 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示成功执行了操作。响应体为空。</td></tr><tr><td>404</td><td>表示找不到作业。</td></tr><tr><td>500</td><td>表示执行作业时出现了异常。状态描述包含了错误的详细信息。如果需要可以后续获取错误堆栈。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得作业的异常堆栈"><div class="titlepage"><div><div><h3 class="title"><a name="N15EFB"></a>获得作业的异常堆栈</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET management</span><span class="pun">/</span><span class="pln">jobs</span><span class="pun">/{</span><span class="pln">jobId</span><span class="pun">}/</span><span class="pln">exception</span><span class="pun">-</span><span class="pln">stracktrace</span></pre><p>
        </p><p>
        </p><div class="table"><a name="N15F05"></a><p class="title"><b>Table&nbsp;15.222.&nbsp;获得作业的异常堆栈 - URL参数</b></p><div class="table-contents"><table summary="获得作业的异常堆栈 - URL参数" border="1"><colgroup><col><col></colgroup><thead><tr><th>参数</th><th>描述</th><th>是否必填</th></tr></thead><tbody><tr><td>jobId</td><td>获取堆栈的作业id。</td><td>是</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          </p><div class="table"><a name="N15F1D"></a><p class="title"><b>Table&nbsp;15.223.&nbsp;获得作业的异常堆栈 - 响应码</b></p><div class="table-contents"><table summary="获得作业的异常堆栈 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了作业，并返回了堆栈。响应包含了原始堆栈，Content-Type永远是<code class="literal">text/plain</code>。</td></tr><tr><td>404</td><td>表示找不到作业，或作业不包含错误堆栈。状态描述包含错误的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获得作业列表"><div class="titlepage"><div><div><h3 class="title"><a name="N15F37"></a>获得作业列表</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET management</span><span class="pun">/</span><span class="pln">jobs</span></pre><p>
        </p><p>
        </p><div class="table"><a name="N15F41"></a><p class="title"><b>Table&nbsp;15.224.&nbsp;获得作业列表 - URL参数</b></p><div class="table-contents"><table summary="获得作业列表 - URL参数" border="1"><colgroup><col><col></colgroup><thead><tr><th>参数</th><th>描述</th><th>类型</th></tr></thead><tbody><tr><td>id</td><td>只返回指定id的作业。</td><td>String</td></tr><tr><td>processInstanceId</td><td>只返回指定id流程一部分的作业。</td><td>String</td></tr><tr><td>executionId</td><td>只返回指定id分支一部分的作业。</td><td>String</td></tr><tr><td>processDefinitionId</td><td>只返回指定流程定义id的作业。</td><td>String</td></tr><tr><td>withRetriesLeft</td><td>如果为 <code class="literal">true</code>，只返回尝试剩下的。如果为false，会忽略此参数。</td><td>Boolean</td></tr><tr><td>executable</td><td>如果为 <code class="literal">true</code>，只返回可执行的作业。如果为false，会忽略此参数。</td><td>Boolean</td></tr><tr><td>timersOnly</td><td>如果为 <code class="literal">true</code>，只返回类型为定时器的作业。如果为false，会忽略此参数。不能与<code class="literal">'messagesOnly'</code>一起使用。</td><td>Boolean</td></tr><tr><td>messagesOnly</td><td>如果为 <code class="literal">true</code>，只返回类型为消息的作业。如果为false，会忽略此参数。不能与<code class="literal">'timersOnly'</code>一起使用。</td><td>Boolean</td></tr><tr><td>withException</td><td>如果为 <code class="literal">true</code>，只返回执行时出现了异常的作业。如果为false，会忽略此参数。</td><td>Boolean</td></tr><tr><td>dueBefore</td><td>只返回在指定时间前到期的作业。如果使用了这个参数，就不会返回没有设置持续时间的作业。</td><td>Date</td></tr><tr><td>dueAfter</td><td>只返回在指定时间后到期的作业。如果使用了这个参数，就不会返回没有设置持续时间的作业。</td><td>Date</td></tr><tr><td>exceptionMessage</td><td>Only return jobs with the given exception message</td><td>String</td></tr><tr><td>tenantId</td><td>否</td><td>String</td><td>只返回指定tenantId的作业。</td></tr><tr><td>tenantIdLike</td><td>否</td><td>String</td><td>只返回与指定tenantId匹配的作业。</td></tr><tr><td>withoutTenantId</td><td>否</td><td>Boolean</td><td>如果为 <code class="literal">true</code>，只返回未设置tenantId的作业。如果为 <code class="literal">false</code>，会忽略 <code class="literal">withoutTenantId</code> 参数。</td></tr><tr><td>sort</td><td>对结果进行排序的字段，可以是 <code class="literal">id</code>, <code class="literal">dueDate</code>, <code class="literal">executionId</code>, <code class="literal">processInstanceId</code>， <code class="literal">retries</code>或<code class="literal">tenantId</code>其中之一。</td><td>String</td><td class="auto-generated">&nbsp;</td></tr><tr><td><p>可以使用通用的 <a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a> 。</p></td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"data"</span><span class="pun">:[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"13"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/management/jobs/13"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"processInstanceId"</span><span class="pun">:</span><span class="str">"5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"processInstanceUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/process-instances/5"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"processDefinitionId"</span><span class="pun">:</span><span class="str">"timerProcess:1:4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"processDefinitionUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/repository/process-definitions/timerProcess%3A1%3A4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"executionId"</span><span class="pun">:</span><span class="str">"12"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"executionUrl"</span><span class="pun">:</span><span class="str">"http://localhost:8182/runtime/executions/12"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"retries"</span><span class="pun">:</span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"exceptionMessage"</span><span class="pun">:</span><span class="str">"Can't find scripting engine for 'unexistinglanguage'"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"dueDate"</span><span class="pun">:</span><span class="str">"2013-06-07T10:00:24.653+0000"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"total"</span><span class="pun">:</span><span class="lit">2</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"start"</span><span class="pun">:</span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"sort"</span><span class="pun">:</span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"order"</span><span class="pun">:</span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"size"</span><span class="pun">:</span><span class="lit">2</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N16009"></a><p class="title"><b>Table&nbsp;15.225.&nbsp;获得作业列表 - 响应码</b></p><div class="table-contents"><table summary="获得作业列表 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示返回了作业。</td></tr><tr><td>400</td><td>表示在url参数中使用了非法的值，或参数中同时使用了<code class="literal">'messagesOnly'</code> 和 <code class="literal">'timersOnly'</code>。状态描述包含了错误的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div></div><div class="section" title="用户"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N16026"></a>用户</h2></div></div></div><div class="section" title="获得一个用户"><div class="titlepage"><div><div><h3 class="title"><a name="N16029"></a>获得一个用户</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET identity</span><span class="pun">/</span><span class="pln">users</span><span class="pun">/{</span><span class="pln">userId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N16033"></a><p class="title"><b>Table&nbsp;15.226.&nbsp;获得一个用户 - URL参数</b></p><div class="table-contents"><table summary="获得一个用户 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>userId</td><td>是</td><td>String</td><td>获取用户的id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"testuser"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"firstName"</span><span class="pun">:</span><span class="str">"Fred"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"lastName"</span><span class="pun">:</span><span class="str">"McDonald"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/identity/users/testuser"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"email"</span><span class="pun">:</span><span class="str">"no-reply@activiti.org"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N16056"></a><p class="title"><b>Table&nbsp;15.227.&nbsp;获得一个用户 - 响应码</b></p><div class="table-contents"><table summary="获得一个用户 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示用户存在，并成功返回。</td></tr><tr><td>404</td><td>表示用户不存在。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获取用户列表"><div class="titlepage"><div><div><h3 class="title"><a name="N1606D"></a>获取用户列表</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET identity</span><span class="pun">/</span><span class="pln">users</span></pre><p>
        </p><p>
        </p><div class="table"><a name="N16077"></a><p class="title"><b>Table&nbsp;15.228.&nbsp;获取用户列表 - URL参数</b></p><div class="table-contents"><table summary="获取用户列表 - URL参数" border="1"><colgroup><col><col></colgroup><thead><tr><th>参数</th><th>描述</th><th>类型</th></tr></thead><tbody><tr><td>id</td><td>只返回指定id的用户。</td><td>String</td></tr><tr><td>firstName</td><td>只返回指定firstname的用户。</td><td>String</td></tr><tr><td>lastName</td><td>只返回指定lastname的用户。</td><td>String</td></tr><tr><td>email</td><td>只返回指定email的用户。</td><td>String</td></tr><tr><td>firstNameLike</td><td>只返回firstname与指定值匹配的用户。使用<code class="literal">%</code>通配符。</td><td>String</td></tr><tr><td>lastNameLike</td><td>只返回lastname与指定值匹配的用户。使用<code class="literal">%</code>通配符。</td><td>String</td></tr><tr><td>emailLike</td><td>只返回email与指定值匹配的用户。使用<code class="literal">%</code>通配符。</td><td>String</td></tr><tr><td>memberOfGroup</td><td>只返回指定组成员的用户。</td><td>String</td></tr><tr><td>potentialStarter</td><td>只返回指定流程定义id的默认启动人。</td><td>String</td></tr><tr><td>sort</td><td>结果排序的字段，应该是<code class="literal">id</code>, <code class="literal">firstName</code>, <code class="literal">lastname</code> 或 <code class="literal">email</code>其中之一。</td><td>String</td></tr><tr><td><p>可以使用通用的 <a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a> 。</p></td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"data"</span><span class="pun">:[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"anotherUser"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"firstName"</span><span class="pun">:</span><span class="str">"Tijs"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"lastName"</span><span class="pun">:</span><span class="str">"Barrez"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/identity/users/anotherUser"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"email"</span><span class="pun">:</span><span class="str">"no-reply@alfresco.org"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"firstName"</span><span class="pun">:</span><span class="str">"Kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"lastName"</span><span class="pun">:</span><span class="str">"the Frog"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/identity/users/kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"email"</span><span class="pun">:</span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"testuser"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"firstName"</span><span class="pun">:</span><span class="str">"Fred"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"lastName"</span><span class="pun">:</span><span class="str">"McDonald"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/identity/users/testuser"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="str">"email"</span><span class="pun">:</span><span class="str">"no-reply@activiti.org"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"total"</span><span class="pun">:</span><span class="lit">3</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"start"</span><span class="pun">:</span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"sort"</span><span class="pun">:</span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"order"</span><span class="pun">:</span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"size"</span><span class="pun">:</span><span class="lit">3</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N160F4"></a><p class="title"><b>Table&nbsp;15.229.&nbsp;获取用户列表 - 响应码</b></p><div class="table-contents"><table summary="获取用户列表 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示成功返回了请求的用户。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="更新用户"><div class="titlepage"><div><div><h3 class="title"><a name="N16106"></a>更新用户</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT identity</span><span class="pun">/</span><span class="pln">users</span><span class="pun">/{</span><span class="pln">userId</span><span class="pun">}</span></pre><p>
        </p><p>
         <span class="bold"><strong>请求JSON体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"firstName"</span><span class="pun">:</span><span class="str">"Tijs"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"lastName"</span><span class="pun">:</span><span class="str">"Barrez"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"email"</span><span class="pun">:</span><span class="str">"no-reply@alfresco.org"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"password"</span><span class="pun">:</span><span class="str">"pass123"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      所有请求值都是可选的。比如，你可以在请求体JSON对象中只包含'firstName'属性，只更新用户的firstName，其他值都不受影响。当包含的属性设置为null，用户的属性会被更新为null，比如：<code class="literal">{"firstName" : null}</code>会清空用户的firstName。
       </p><p>
          </p><div class="table"><a name="N1611C"></a><p class="title"><b>Table&nbsp;15.230.&nbsp;更新用户 - 响应码</b></p><div class="table-contents"><table summary="更新用户 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示成功更新了用户。</td></tr><tr><td>404</td><td>表示找不到用户。</td></tr><tr><td>409</td><td>表示请求的用户被其他地方更新了。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span> 参考 <code class="literal">identity/users/{userId}</code>的响应。
      </p></div><div class="section" title="创建用户"><div class="titlepage"><div><div><h3 class="title"><a name="N16141"></a>创建用户</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST identity</span><span class="pun">/</span><span class="pln">users</span></pre><p>
        </p><p>
         <span class="bold"><strong>请求JSON体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="str">"tijs"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"firstName"</span><span class="pun">:</span><span class="str">"Tijs"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"lastName"</span><span class="pun">:</span><span class="str">"Barrez"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"email"</span><span class="pun">:</span><span class="str">"no-reply@alfresco.org"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"password"</span><span class="pun">:</span><span class="str">"pass123"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
       </p><p>
          </p><div class="table"><a name="N16154"></a><p class="title"><b>Table&nbsp;15.231.&nbsp;创建用户 - 响应码</b></p><div class="table-contents"><table summary="创建用户 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示成功创建了用户。</td></tr><tr><td>400</td><td>表示没有传用户的id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span> 参考 <code class="literal">identity/users/{userId}</code>的响应。
      </p></div><div class="section" title="删除用户"><div class="titlepage"><div><div><h3 class="title"><a name="N16174"></a>删除用户</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">DELETE identity</span><span class="pun">/</span><span class="pln">users</span><span class="pun">/{</span><span class="pln">userId</span><span class="pun">}</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N1617E"></a><p class="title"><b>Table&nbsp;15.232.&nbsp;删除用户 - URL参数</b></p><div class="table-contents"><table summary="删除用户 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>userId</td><td>是</td><td>String</td><td>期望删除的用户id。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
          </p><div class="table"><a name="N1619A"></a><p class="title"><b>Table&nbsp;15.233.&nbsp;删除用户 - 响应码</b></p><div class="table-contents"><table summary="删除用户 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了用户，并成功删除了。响应体为空。</td></tr><tr><td>404</td><td>表示找不到用户。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获取用户图片"><div class="titlepage"><div><div><h3 class="title"><a name="N161B1"></a>获取用户图片</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET identity</span><span class="pun">/</span><span class="pln">users</span><span class="pun">/{</span><span class="pln">userId</span><span class="pun">}/</span><span class="pln">picture</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N161BB"></a><p class="title"><b>Table&nbsp;15.234.&nbsp;获取用户图片 - URL参数</b></p><div class="table-contents"><table summary="获取用户图片 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>userId</td><td>是</td><td>String</td><td>期望获得图片的用户id。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
          <span class="bold"><strong>响应体：</strong></span>
		  响应体包含了演示图片数据，展示用户的图片。响应的Content-Type对应着创建图片时设置的mimeType。
          </p><div class="table"><a name="N161DB"></a><p class="title"><b>Table&nbsp;15.235.&nbsp;获取用户图片 - 响应码</b></p><div class="table-contents"><table summary="获取用户图片 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了用户和图片，图片在响应体中返回。</td></tr><tr><td>404</td><td>表示找不到用户，或用户没有图片。状态描述包含错误的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="更新用户图片"><div class="titlepage"><div><div><h3 class="title"><a name="N161F2"></a>更新用户图片</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET identity</span><span class="pun">/</span><span class="pln">users</span><span class="pun">/{</span><span class="pln">userId</span><span class="pun">}/</span><span class="pln">picture</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N161FC"></a><p class="title"><b>Table&nbsp;15.236.&nbsp;更新用户图片 - URL参数</b></p><div class="table-contents"><table summary="更新用户图片 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>userId</td><td>是</td><td>String</td><td>获得图片对应的用户id。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
       <span class="bold"><strong>请求体：</strong></span>
           请求应该是<code class="literal">multipart/form-data</code>类型。应该只有一个文件区域，包含源码的二进制内容。除此之外，需要提供以下表单域：
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><code class="literal">mimeType</code>：上传的图片的mime-type。如果省略，默认会使用 <code class="literal">image/jpeg</code> 作为图片的mime-type。</p></li></ul></div><p>
        </p><p>
          </p><div class="table"><a name="N1622B"></a><p class="title"><b>Table&nbsp;15.237.&nbsp;更新用户图片 - 响应码</b></p><div class="table-contents"><table summary="更新用户图片 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了用户，并更新了图片。响应体为空。</td></tr><tr><td>404</td><td>表示找不到用户。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="列出用户列表"><div class="titlepage"><div><div><h3 class="title"><a name="N16242"></a>列出用户列表</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">PUT identity</span><span class="pun">/</span><span class="pln">users</span><span class="pun">/{</span><span class="pln">userId</span><span class="pun">}/</span><span class="pln">info</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N1624C"></a><p class="title"><b>Table&nbsp;15.238.&nbsp;列出用户列表 - URL参数</b></p><div class="table-contents"><table summary="列出用户列表 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>userId</td><td>是</td><td>String</td><td>获取信息的用户id。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
          <span class="bold"><strong>响应体：</strong></span>
</p><pre class="prettyprint"><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"key"</span><span class="pun">:</span><span class="str">"key1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/identity/users/testuser/info/key1"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"key"</span><span class="pun">:</span><span class="str">"key2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/identity/users/testuser/info/key2"</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">}</span><span class="pln"><br></span><span class="pun">]</span></pre><p>
          </p><div class="table"><a name="N1626F"></a><p class="title"><b>Table&nbsp;15.239.&nbsp;列出用户列表 - 响应码</b></p><div class="table-contents"><table summary="列出用户列表 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了用户，并返回了信息列表（key和url）。</td></tr><tr><td>404</td><td>表示找不到用户。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获取用户信息"><div class="titlepage"><div><div><h3 class="title"><a name="N16286"></a>获取用户信息</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">GET identity</span><span class="pun">/</span><span class="pln">users</span><span class="pun">/{</span><span class="pln">userId</span><span class="pun">}/</span><span class="pln">info</span><span class="pun">/{</span><span class="pln">key</span><span class="pun">}</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N16290"></a><p class="title"><b>Table&nbsp;15.240.&nbsp;获取用户信息 - URL参数</b></p><div class="table-contents"><table summary="获取用户信息 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>userId</td><td>是</td><td>String</td><td>获取信息的用户id。</td></tr><tr><td>key</td><td>是</td><td>String</td><td>希望获取的用户信息的key。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
          <span class="bold"><strong>响应体：</strong></span>
</p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"key"</span><span class="pun">:</span><span class="str">"key1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"value"</span><span class="pun">:</span><span class="str">"Value 1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/identity/users/testuser/info/key1"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N162BC"></a><p class="title"><b>Table&nbsp;15.241.&nbsp;获取用户信息 - 响应码</b></p><div class="table-contents"><table summary="获取用户信息 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了用户和指定key的用户信息。</td></tr><tr><td>404</td><td>表示找不到用户，并用户没有指定key的信息。状态描述中包含了错误相关的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="更新用户的信息"><div class="titlepage"><div><div><h3 class="title"><a name="N162D3"></a>更新用户的信息</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">PUT identity</span><span class="pun">/</span><span class="pln">users</span><span class="pun">/{</span><span class="pln">userId</span><span class="pun">}/</span><span class="pln">info</span><span class="pun">/{</span><span class="pln">key</span><span class="pun">}</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N162DD"></a><p class="title"><b>Table&nbsp;15.242.&nbsp;更新用户的信息 - URL参数</b></p><div class="table-contents"><table summary="更新用户的信息 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>userId</td><td>是</td><td>String</td><td>期望更新的信息对应的用户id。</td></tr><tr><td>key</td><td>是</td><td>String</td><td>期望更新的用户信息的key。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
          <span class="bold"><strong>请求体：</strong></span>
</p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"value"</span><span class="pun">:</span><span class="str">"The updated value"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p><p>
          <span class="bold"><strong>响应体：</strong></span>
</p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"key"</span><span class="pun">:</span><span class="str">"key1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"value"</span><span class="pun">:</span><span class="str">"The updated value"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/identity/users/testuser/info/key1"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N16312"></a><p class="title"><b>Table&nbsp;15.243.&nbsp;更新用户的信息 - 响应码</b></p><div class="table-contents"><table summary="更新用户的信息 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示找到了用户，并更新了信息。</td></tr><tr><td>400</td><td>表示请求体中缺少数据。</td></tr><tr><td>404</td><td>表示找到用户，或找不到指定key的用户信息。状态描述中包含了错误相关的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="创建用户信息条目"><div class="titlepage"><div><div><h3 class="title"><a name="N1632E"></a>创建用户信息条目</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">POST identity</span><span class="pun">/</span><span class="pln">users</span><span class="pun">/{</span><span class="pln">userId</span><span class="pun">}/</span><span class="pln">info</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N16338"></a><p class="title"><b>Table&nbsp;15.244.&nbsp;创建用户信息条目 - URL参数</b></p><div class="table-contents"><table summary="创建用户信息条目 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>userId</td><td>是</td><td>String</td><td>期望创建信息的用户id。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
          <span class="bold"><strong>请求体：</strong></span>
</p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"key"</span><span class="pun">:</span><span class="str">"key1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"value"</span><span class="pun">:</span><span class="str">"The value"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      </p><p>
          <span class="bold"><strong>响应体：</strong></span>
</p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"key"</span><span class="pun">:</span><span class="str">"key1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"value"</span><span class="pun">:</span><span class="str">"The value"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/identity/users/testuser/info/key1"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N16364"></a><p class="title"><b>Table&nbsp;15.245.&nbsp;创建用户信息条目 - 响应码</b></p><div class="table-contents"><table summary="创建用户信息条目 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示找到了用户，并创建了信息。</td></tr><tr><td>400</td><td>表示请求体中缺少key或value。状态描述中包含了错误相关的详细信息。</td></tr><tr><td>404</td><td>表示找不到用户。</td></tr><tr><td>409</td><td>表示用户已经有了一条指定key的信息条目，可以更新资源实例（<code class="literal">PUT</code>）。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="删除用户的信息"><div class="titlepage"><div><div><h3 class="title"><a name="N16388"></a>删除用户的信息</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">DELETE identity</span><span class="pun">/</span><span class="pln">users</span><span class="pun">/{</span><span class="pln">userId</span><span class="pun">}/</span><span class="pln">info</span><span class="pun">/{</span><span class="pln">key</span><span class="pun">}</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N16392"></a><p class="title"><b>Table&nbsp;15.246.&nbsp;删除用户的信息 - URL参数</b></p><div class="table-contents"><table summary="删除用户的信息 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>userId</td><td>是</td><td>String</td><td>希望删除信息的用户id。</td></tr><tr><td>key</td><td>是</td><td>String</td><td>期望删除的用户信息的key。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
          </p><div class="table"><a name="N163B7"></a><p class="title"><b>Table&nbsp;15.247.&nbsp;删除用户的信息 - 响应码</b></p><div class="table-contents"><table summary="删除用户的信息 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了用户和信息，并删除了指定key的条目。响应体为空。</td></tr><tr><td>404</td><td>表示找不到用户，或用户不包含指定key的信息。状态描述中包含了错误相关的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div></div><div class="section" title="群组"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N163CE"></a>群组</h2></div></div></div><div class="section" title="获得群组"><div class="titlepage"><div><div><h3 class="title"><a name="N163D1"></a>获得群组</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET identity</span><span class="pun">/</span><span class="pln">groups</span><span class="pun">/{</span><span class="pln">groupId</span><span class="pun">}</span></pre><p>
        </p><p>
            </p><div class="table"><a name="N163DB"></a><p class="title"><b>Table&nbsp;15.248.&nbsp;获得群组 - URL参数</b></p><div class="table-contents"><table summary="获得群组 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必须</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>groupId</td><td>是</td><td>String</td><td>希望获得的群组id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"testgroup"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/identity/groups/testgroup"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Test group"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"type"</span><span class="pun">:</span><span class="str">"Test type"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N163FE"></a><p class="title"><b>Table&nbsp;15.249.&nbsp;获得群组 - 响应码</b></p><div class="table-contents"><table summary="获得群组 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示群组存在，并成功返回。</td></tr><tr><td>404</td><td>表示群组不存在。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获取群组列表"><div class="titlepage"><div><div><h3 class="title"><a name="N16415"></a>获取群组列表</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">GET identity</span><span class="pun">/</span><span class="pln">groups</span></pre><p>
        </p><p>
        </p><div class="table"><a name="N1641F"></a><p class="title"><b>Table&nbsp;15.250.&nbsp;获取群组列表 - URL参数</b></p><div class="table-contents"><table summary="获取群组列表 - URL参数" border="1"><colgroup><col><col></colgroup><thead><tr><th>参数</th><th>描述</th><th>类型</th></tr></thead><tbody><tr><td>id</td><td>只返回指定id的群组。</td><td>String</td></tr><tr><td>name</td><td>只返回指定名称的群组。</td><td>String</td></tr><tr><td>type</td><td>只返回指定类型的群组。</td><td>String</td></tr><tr><td>nameLike</td><td>只返回名称与指定值匹配的群组使用<code class="literal">%</code>作为通配符。</td><td>String</td></tr><tr><td>member</td><td>只返回成员与指定用户ing相同的群组。</td><td>String</td></tr><tr><td>potentialStarter</td><td>只返回成员作为指定id流程定义的潜在启动者的劝阻。</td><td>String</td></tr><tr><td>sort</td><td>结果排序的字段。应该是 <code class="literal">id</code>, <code class="literal">name</code> 或 <code class="literal">type</code>其中之一。</td><td>String</td></tr><tr><td><p>可以使用通用的 <a class="link" href="#restPagingAndSort" title="分页与排序">分页和排序查询参数</a> 。</p></td><td class="auto-generated">&nbsp;</td><td class="auto-generated">&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
          <span class="bold"><strong>成功响应体：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"data"</span><span class="pun">:[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp;</span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="str">"testgroup"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/identity/groups/testgroup"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Test group"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="str">"Test type"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp;</span><span class="pun">},</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"total"</span><span class="pun">:</span><span class="lit">3</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"start"</span><span class="pun">:</span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"sort"</span><span class="pun">:</span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"order"</span><span class="pun">:</span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"size"</span><span class="pun">:</span><span class="lit">3</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p><div class="table"><a name="N1647E"></a><p class="title"><b>Table&nbsp;15.251.&nbsp;获取群组列表 - 响应码</b></p><div class="table-contents"><table summary="获取群组列表 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示返回了请求的群组。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="更新群组"><div class="titlepage"><div><div><h3 class="title"><a name="N16490"></a>更新群组</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">PUT identity</span><span class="pun">/</span><span class="pln">groups</span><span class="pun">/{</span><span class="pln">groupId</span><span class="pun">}</span></pre><p>
        </p><p>
         <span class="bold"><strong>请求JSON体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Test group"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"type"</span><span class="pun">:</span><span class="str">"Test type"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
      所有请求值都是可选的。比如，你可以在请求体JSON对象中只包含'name'属性，只更新群组的名称，其他属性都不会受到英系那个。如果把一个属性设置为null，群组的数据就会更新为null。
       </p><p>
          </p><div class="table"><a name="N164A3"></a><p class="title"><b>Table&nbsp;15.252.&nbsp;更新群组 - 响应码</b></p><div class="table-contents"><table summary="更新群组 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>表示成功更新了群组。</td></tr><tr><td>404</td><td>表示找不到请求的群组。</td></tr><tr><td>409</td><td>表示请求的群组正在被其他地方更新。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span> 参考<code class="literal">identity/groups/{groupId}</code>的响应。
      </p></div><div class="section" title="创建群组"><div class="titlepage"><div><div><h3 class="title"><a name="N164C8"></a>创建群组</h3></div></div></div><p>
          </p><pre class="prettyprint"><span class="pln">POST identity</span><span class="pun">/</span><span class="pln">groups</span></pre><p>
        </p><p>
         <span class="bold"><strong>请求JSON体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"id"</span><span class="pun">:</span><span class="str">"testgroup"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"name"</span><span class="pun">:</span><span class="str">"Test group"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"type"</span><span class="pun">:</span><span class="str">"Test type"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
       </p><p>
          </p><div class="table"><a name="N164DB"></a><p class="title"><b>Table&nbsp;15.253.&nbsp;创建群组 - 响应码</b></p><div class="table-contents"><table summary="创建群组 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示创建了群组。</td></tr><tr><td>400</td><td>表示丢失了群组的id。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
       <span class="bold"><strong>成功响应体：</strong></span> 参考 <code class="literal">identity/groups/{groupId}</code>的响应。
      </p></div><div class="section" title="删除群组"><div class="titlepage"><div><div><h3 class="title"><a name="N164FB"></a>删除群组</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">DELETE identity</span><span class="pun">/</span><span class="pln">groups</span><span class="pun">/{</span><span class="pln">groupId</span><span class="pun">}</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N16505"></a><p class="title"><b>Table&nbsp;15.254.&nbsp;删除群组 - URL参数</b></p><div class="table-contents"><table summary="删除群组 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>groupId</td><td>是</td><td>String</td><td>期望删除的群组id。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
          </p><div class="table"><a name="N16521"></a><p class="title"><b>Table&nbsp;15.255.&nbsp;删除群组 - 响应码</b></p><div class="table-contents"><table summary="删除群组 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了群组，并成功删除了。响应体为空。</td></tr><tr><td>404</td><td>表示找不到请求的群组。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p></div><div class="section" title="获取群组的成员"><div class="titlepage"><div><div><h3 class="title"><a name="N16538"></a>获取群组的成员</h3></div></div></div><p> <code class="literal">identity/groups/members</code>不允许使用GET。使用 <code class="literal">identity/users?memberOfGroup=sales</code> URL来获得某个群组下的所有成员。</p></div><div class="section" title="为群组添加一个成员"><div class="titlepage"><div><div><h3 class="title"><a name="N16543"></a>为群组添加一个成员</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">POST identity</span><span class="pun">/</span><span class="pln">groups</span><span class="pun">/{</span><span class="pln">groupId</span><span class="pun">}/</span><span class="pln">members</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N1654D"></a><p class="title"><b>Table&nbsp;15.256.&nbsp;为群组添加一个成员 - URL参数</b></p><div class="table-contents"><table summary="为群组添加一个成员 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>groupId</td><td>是</td><td>String</td><td>期望添加成员的群组id。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
         <span class="bold"><strong>请求JSON体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"userId"</span><span class="pun">:</span><span class="str">"kermit"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
       </p><p>
          </p><div class="table"><a name="N16572"></a><p class="title"><b>Table&nbsp;15.257.&nbsp;为群组添加一个成员 - 响应码</b></p><div class="table-contents"><table summary="为群组添加一个成员 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>201</td><td>表示找到了群组，并添加了成员。</td></tr><tr><td>404</td><td>表示请求体中未包含userId。</td></tr><tr><td>404</td><td>表示找不到请求的群组。</td></tr><tr><td>409</td><td>表示请求的用户已经是群组的一员了。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
         <span class="bold"><strong>响应体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"userId"</span><span class="pun">:</span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"groupId"</span><span class="pun">:</span><span class="str">"sales"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/identity/groups/sales/members/kermit"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
       </p></div><div class="section" title="删除群组的成员"><div class="titlepage"><div><div><h3 class="title"><a name="N1659C"></a>删除群组的成员</h3></div></div></div><p>
        </p><pre class="prettyprint"><span class="pln">DELETE identity</span><span class="pun">/</span><span class="pln">groups</span><span class="pun">/{</span><span class="pln">groupId</span><span class="pun">}/</span><span class="pln">members</span><span class="pun">/{</span><span class="pln">userId</span><span class="pun">}</span></pre><p>
      </p><p>
          </p><div class="table"><a name="N165A6"></a><p class="title"><b>Table&nbsp;15.258.&nbsp;删除群组的成员 - URL参数</b></p><div class="table-contents"><table summary="删除群组的成员 - URL参数" border="1"><colgroup><col><col><col></colgroup><thead><tr><th>参数</th><th>是否必填</th><th>数据</th><th>描述</th></tr></thead><tbody><tr><td>groupId</td><td>是</td><td>String</td><td>期望删除成员的群组id。</td></tr><tr><td>userId</td><td>是</td><td>String</td><td>期望删除的用户id。</td></tr></tbody></table></div></div><p><br class="table-break">
      </p><p>
          </p><div class="table"><a name="N165CB"></a><p class="title"><b>Table&nbsp;15.259.&nbsp;删除群组的成员 - 响应码</b></p><div class="table-contents"><table summary="删除群组的成员 - 响应码" border="1"><colgroup><col><col></colgroup><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>204</td><td>表示找到了群组，并删除了成员。响应体为空。</td></tr><tr><td>404</td><td>表示找不到请求的群组，或用户不是群组的成员。状态描述中包含了错误相关的详细信息。</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
         <span class="bold"><strong>响应体：</strong></span>
           </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"userId"</span><span class="pun">:</span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp;</span><span class="str">"groupId"</span><span class="pun">:</span><span class="str">"sales"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="str">"http://localhost:8182/identity/groups/sales/members/kermit"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
       </p></div></div><div class="section" title="传统REST - 通用方法"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N165EC"></a>传统REST - 通用方法</h2></div></div></div><p><span class="bold"><strong>下面的章节中包含了传统的REST-api，它们在5.14版本中已经废弃了。REST url不会在未来删除，但是也不会维护了。未来的所有改进都会放到新REST API中。</strong></span></p><p>
	  Activiti包含了一套引擎的REST API，可以把activiti-rest.war部署到像Apache Tomcat一样的Servlet容器里。
	  默认Activiti引擎会连接一个单独运行的h2数据库。你可以修改WEB-INF/classes目录下的db.properties文件来修改数据库配置。
	  REST API使用JSON格式（http://www.json.org），内部使用Restlet构建（http://www.restlet.org）。
    </p><p>
      每个REST API调用都会使用单独的校验级别，你必须登录到系统中，来调用REST API（除了/login服务）。
	  认证是通过Basic HTTP认证实现的，如果你登录为管理员（比如kermit），
	  你应该可以访问下面介绍的所有接口。
    </p><p>
	  API遵守着通常的REST API约定，对读取操作使用GET，对创建对象使用POST，
	  对更新和执行操作使用PUT，对删除对象使用DELETE。在执行应先过很多次对象的操作时，
	  使用POST来执行这些操作来保证传递的参数不受限制。
	  使用POST的原因是HTTP DELETE方法不允许使用请求体。
	  使用DELETE的调用，理论上，它的请求体会被代理剔除。
	  为了保证不发生这种事情，我们使用了POST，虽然PUT也可以更新多个对象，
	  为了保持一致。
    </p><p>
	  所有rest调用都使用"application/json"作为Content-Type（除了上传请求使用"multipart/form-data"）。
    </p><p>
	  执行REST调用的url基础地址是http://localhost:8080/activiti-rest/service/。
	  比如，列出引擎中流程定义的方法，在你的浏览器中应该是：
      http://localhost:8080/activiti-rest/service/process-definitions
    </p><p>
	  你就也可以使用curl来通过REST API执行查询，比如：
      </p><pre class="prettyprint"><span class="pln">curl </span><span class="pun">--</span><span class="pln">basic </span><span class="pun">--</span><span class="pln">user kermit</span><span class="pun">:</span><span class="pln">kermit http</span><span class="pun">:</span><span class="com">//localhost:8080/activiti-rest/service/tasks?assignee=kermit</span></pre><p>
    </p><p>
	  请参考下面的描述，来了解哪些REST API是目前可用的。
	  请参考"API"章节作为，“一行的注释”，来了解核心API的功能，实现REST API的调用。
    </p></div><div class="section" title="资源"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N16604"></a>资源</h2></div></div></div><div class="section" title="上传发布"><div class="titlepage"><div><div><h3 class="title"><a name="N16608"></a>上传发布</h3></div></div></div><p>
        上传并安装发布.bpmn20.xml, .bpmn, .bar 或 .zip格式，使用普通的“html表单上传”（enctype=multipart/form-data）
		换句话说不是json请求。如果发布操作成功，发布信息会包含在返回的响应中。
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>请求：</strong></span>
            <code class="literal">POST /deployment</code>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>API: </strong></span>
            <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getRepositoryService().createDeployment().name(fileName).deploymentBuilder.deploy()</code>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>响应：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"10"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"activiti-examples.bar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"deploymentTime"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:54:26.750+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"category"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"examples"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p></li></ul></div></div><div class="section" title="获取发布"><div class="titlepage"><div><div><h3 class="title"><a name="N1662C"></a>获取发布</h3></div></div></div><p>
	    返回分页发布列表，可以通过"id", "name" 或 "deploymentTime"排序。
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>请求：</strong></span>
            <code class="literal">GET /deployments?start={start=0}&amp;size={size=10}&amp;sort={sort=id}&amp;order={order=asc}</code>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>API: </strong></span>
            <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getRepositoryService().createDeploymentQuery().listPage()</code>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>响应：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"10"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"activiti-examples.bar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"deploymentTime"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:54:26.750+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"category"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"examples"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p></li></ul></div></div><div class="section" title="获取发布资源"><div class="titlepage"><div><div><h3 class="title"><a name="N16650"></a>获取发布资源</h3></div></div></div><p>
	    返回发布的所有资源。
        实例： /deployment/10/resources
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>请求：</strong></span>
            <code class="literal">GET /deployment/{deploymentId}/resources</code>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>API: </strong></span>
            <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getRepositoryService().getDeploymentResourceNames(deploymentId)</code>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>响应：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"10"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"activiti-examples.bar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"deploymentTime"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:54:26.750+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"category"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"examples"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"resources"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">"resource1"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"resource2"</span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p></li></ul></div></div><div class="section" title="获取发布的一个资源"><div class="titlepage"><div><div><h3 class="title"><a name="N16674"></a>获取发布的一个资源</h3></div></div></div><p>
	    获取发布的一个资源。
        实例： /deployment/10/resource/org/activiti/examples/bpmn/usertask/FinancialReportProcess.bpmn20.xml
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>请求：</strong></span>
            <code class="literal">GET /deployment/{deploymentId}/resource/{resourceName}</code>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>API: </strong></span>
            <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getRepositoryService().getResourceAsStream(deploymentId, resourceName)</code>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>响应：</strong></span>
            </p><pre class="prettyprint"><span class="pun">比如，一个.</span><span class="pln">bpmn20</span><span class="pun">.</span><span class="pln">xml</span><span class="pun">文件，一个图片或其他发布资源包含的文件类型。</span></pre><p>
          </p></li></ul></div></div><div class="section" title="删除发布"><div class="titlepage"><div><div><h3 class="title"><a name="N16698"></a>删除发布</h3></div></div></div><p>
	    删除一个发布。
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>请求：</strong></span>
            <code class="literal">DELETE /deployment/{deploymentId}?cascade={cascade?}</code>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>API: </strong></span>
            <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getRepositoryService().deleteDeployment(deploymentId)</code>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>响应：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"success"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p></li></ul></div></div><div class="section" title="删除发布"><div class="titlepage"><div><div><h3 class="title"><a name="N166BC"></a>删除发布</h3></div></div></div><p>
	    删除多个发布。
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
            <span class="bold"><strong>请求：</strong></span>
            <code class="literal">POST /deployments/delete?cascade={cascade?}</code>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br></span><span class="str">"deploymentIds"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"> </span><span class="str">"10"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"11"</span><span class="pln"> </span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>API: </strong></span>
            <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getRepositoryService().deleteDeployment(deploymentId)</code>
          </p></li><li class="listitem"><p>
            <span class="bold"><strong>响应：</strong></span>
            </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"success"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
          </p></li></ul></div></div></div><div class="section" title="引擎"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N166E4"></a>引擎</h2></div></div></div><div class="section" title="获取流程引擎"><div class="titlepage"><div><div><h3 class="title"><a name="N166E7"></a>获取流程引擎</h3></div></div></div><p>
		  返回流程引擎安装细节。如果启动时出现了问题，
		  错误的细节会包含在响应的"exception"属性中。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">GET /process-engine</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API: </strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName)</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"default"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"resourceUrl"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"jar:file:\//&lt;path-to-deployment&gt;\/activiti-cfg.jar!\/activiti.properties"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"exception"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"version"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"5.11"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div></div><div class="section" title="流程"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N1670C"></a>流程</h2></div></div></div><div class="section" title="流程定义列表"><div class="titlepage"><div><div><h3 class="title"><a name="N1670F"></a>流程定义列表</h3></div></div></div><p>
		  返回发布的流程定义的信息，可以通过"id", "name", "version" 或
          "deploymentId"排序。BPMN2.0 XML的流程图的名字包含在"resourceName"属性中，
		  结合"deploymentId"属性，可以通过上面的获取发布资源REST API调用获得。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>分页请求：</strong></span>
              <code class="literal">GET /process-definitions?start={start=0}&amp;size={size=10}&amp;sort={sort=id}&amp;order={order=asc}</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getRepositoryService().createProcessDefinitionQuery().listPage()</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>分页响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"financialReport:1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"key"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"financialReport"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"version"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Monthly financial report"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"resourceName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"org/activiti/examples/bpmn/usertask/FinancialReportProcess.bpmn20.xml"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"diagramResourceName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"org/activiti/examples/bpmn/usertask/FinancialReportProcess.png"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"deploymentId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"10"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"startFormResourceKey"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"isGraphicNotationDefined"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="获得流程定义表单属性"><div class="titlepage"><div><div><h3 class="title"><a name="N16733"></a>获得流程定义表单属性</h3></div></div></div><p>
		  返回流程定义表单属性。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">GET /process-definition/{processDefinitionId}/properties</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getFormService().getStartFormData(processDefinitionId)</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"fullName"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Full name"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"${name}"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"String"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"required"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"readable"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"writeable"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">]</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
            </p></li></ul></div></div><div class="section" title="获得流程定义表单资源"><div class="titlepage"><div><div><h3 class="title"><a name="N16757"></a>获得流程定义表单资源</h3></div></div></div><p>
		  返回流程定义表单。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">GET /process-definition/{processDefinitionId}/form</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getTaskService().getRenderedStartFormById(processDefinitionId)</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="tag">&lt;user-defined-response&gt;</span></pre><p>
            </p></li></ul></div></div><div class="section" title="获取流程定义图"><div class="titlepage"><div><div><h3 class="title"><a name="N1677B"></a>获取流程定义图</h3></div></div></div><p>
		  如果存在，就返回一个流程定义的PNG图。
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                <span class="bold"><strong>请求：</strong></span>
                <code class="literal">GET /process-definition/{processDefinitionId}/diagram</code>
              </p></li><li class="listitem"><p>
                <span class="bold"><strong>API:</strong></span>
                <code class="literal">repositoryService.getResourceAsStream(processDefinition.getDeploymentId(), processDefinition.getDiagramResourceName());</code>
              </p></li><li class="listitem"><p>
                <span class="bold"><strong>响应：</strong></span>
                </p><pre class="prettyprint"><span class="pun">流程定义的</span><span class="pln">PNG</span><span class="pun">图。</span></pre><p>
              </p></li></ul></div></div><div class="section" title="启动流程实例"><div class="titlepage"><div><div><h3 class="title"><a name="N1679F"></a>启动流程实例</h3></div></div></div><p>
		  根据流程定义创建流程实例，返回新创建流程实例的细节信息。
		  可以使用请求体对象传递额外的变量（通过表单）。换句话说，
		  就是"processDefinitionId"属性旁边的属性。
        </p><p>
          注意如果提交的值为true（不是"true"），会被当做Boolean，即使没有使用描述符。
		  这与数字的处理方式相同。比如，123会当做整数。
		  "123"会当做字符串（除非使用描述符定义）。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">POST /process-instance</code>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"processDefinitionId"</span><span class="pun">:</span><span class="str">"financialReport:1:1700"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"businessKey"</span><span class="pun">:</span><span class="str">"order-4711"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li><li class="listitem"><p><span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getRuntimeService().startProcessInstanceById(processDefinitionId[, businessKey][, variables])</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"217"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processDefinitionId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"financialReport:1:1700"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"businessKey"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"order-4711"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"217"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="流程实例列表"><div class="titlepage"><div><div><h3 class="title"><a name="N167C6"></a>流程实例列表</h3></div></div></div><p>
		    返回活动的流程实例细节，可以通过"id", "startTime", "businessKey" 或
            "processDefinitionId"排序。你可以使用"processDefinitionId" and "businessKey"进行查询。
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                <span class="bold"><strong>分页请求：</strong></span>
                <code class="literal">GET /process-instances?start={start=0}&amp;size={size=10}&amp;sort={sort=id}&amp;order={order=asc}&amp;businessKey={businessKey}&amp;processDefinitionId={processDefinitionId}</code>
              </p></li><li class="listitem"><p>
                <span class="bold"><strong>API:</strong></span>
                <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getHistoryService().createHistoricProcessInstanceQuery().xxx.listPages()</code>
              </p></li><li class="listitem"><p>
                <span class="bold"><strong>分页响应：</strong></span>
                </p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"financialReport:1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"businessKey"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"55"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"startTime"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:54:26.750+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"startUserId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span></pre><p>
              </p></li></ul></div></div><div class="section" title="获得流程实例细节"><div class="titlepage"><div><div><h3 class="title"><a name="N167EA"></a>获得流程实例细节</h3></div></div></div><p>
		    返回指定流程实例的所有细节。可以是运行中或已结束的流程实例。
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                <span class="bold"><strong>请求：</strong></span>
                <code class="literal">GET /process-instance/{processInstanceId}</code>
              </p></li><li class="listitem"><p>
                <span class="bold"><strong>API:</strong></span>
                <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getHistoryService().createHistoricProcessInstanceQuery().processInstanceId(..).singleResult()</code>
              </p></li><li class="listitem"><p>
                <span class="bold"><strong>响应：</strong></span>
                </p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"processDefinitionId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"financialReport:1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"businessKey"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"55"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"startTime"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:54:26.750+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"startActivityId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"startFinancialAnalysis"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"startUserId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"completed"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"tasks"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"taskId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"3"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"taskName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Analyze report"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"owner"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"assignee"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"startTime"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:53:26.750+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"completed"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"activities"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"activityId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"activityName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Get report"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"activityType"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"ServiceTask"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"startTime"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:53:25.750+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"completed"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"startTime"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:53:25.950+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"duration"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">200</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"variables"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"reportName"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableValue"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"classified.pdf"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">]</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"historyVariables"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"reportName"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableValue"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"classified.pdf"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"variableType"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"String"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"revision"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"time"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:53:26.750+02:00"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">]</span><span class="pln"><br><br>&nbsp; </span><span class="pun">}</span></pre><p>
              </p></li></ul></div></div><div class="section" title="获得流程实例图"><div class="titlepage"><div><div><h3 class="title"><a name="N1680E"></a>获得流程实例图</h3></div></div></div><p>
			返回高亮的活动流程PNG图。如果流程定义未包含DI信息就会返回404。
            </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                  <span class="bold"><strong>请求：</strong></span>
                  <code class="literal">GET /process-instance/{processInstanceId}/diagram</code>
                </p></li><li class="listitem"><p>
                  <span class="bold"><strong>API:</strong></span>
                  <code class="literal">ProcessDiagramGenerator.generateDiagram(pde, "png", getRuntimeService().getActiveActivityIds(processInstanceId));</code>
                </p></li><li class="listitem"><p>
                  <span class="bold"><strong>响应：</strong></span>
                  </p><pre class="prettyprint"><span class="pun">返回高亮的活动流程</span><span class="pln">PNG</span><span class="pun">图。</span></pre><p>
                </p></li></ul></div></div><div class="section" title="获得流程实例的任务"><div class="titlepage"><div><div><h3 class="title"><a name="N16832"></a>获得流程实例的任务</h3></div></div></div><p>
			返回运行中流程实例的任务列表。
            </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                  <span class="bold"><strong>请求：</strong></span>
                  <code class="literal">GET /process-instance/{processInstanceId}/tasks</code>
                </p></li><li class="listitem"><p>
                  <span class="bold"><strong>API:</strong></span>
                  <code class="literal">taskService.createTaskQuery().processInstanceId(processInstanceId);</code>
                </p></li><li class="listitem"><p>
              <span class="bold"><strong>分页响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"127"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Handle vacation request"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"description"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Vacation request by Kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"delegationState"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"pending"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"dueDate"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:54:26.750+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"priority"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">50</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"assignee"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"executionId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"118"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"formResourceKey"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"org/activiti/examples/taskforms/approve.form"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"owner"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"parentTaskId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"120"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"financialReport:1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskDefinitionKey"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"125"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="继续特定流程实例的活动（receiveTask）"><div class="titlepage"><div><div><h3 class="title"><a name="N16856"></a>继续特定流程实例的活动（receiveTask）</h3></div></div></div><p>
			继续一个活动分支（receiveTask）。
            </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                  <span class="bold"><strong>请求：</strong></span>
                  <code class="literal">POST /process-instance/{processInstanceId}/signal</code>
                  </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"activityId"</span><span class="pun">:</span><span class="str">"receiveTask"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"variable1"</span><span class="pun">:</span><span class="str">"value"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"variable2"</span><span class="pun">:</span><span class="str">"value"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
                </p></li><li class="listitem"><p>
                  <span class="bold"><strong>API:</strong></span>
                  <code class="literal">runtimeService.signal(execution.getId(), variables);</code>
                </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"success"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="触发特定流程实例的信号"><div class="titlepage"><div><div><h3 class="title"><a name="N1687D"></a>触发特定流程实例的信号</h3></div></div></div><p>
			向特定流程实例发送一个信号，会触发所有订阅的信号事件。可以通过请求体发送额外的变量。
			如果你不想发送任何变量，可以使用空的请求体。
            </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                  <span class="bold"><strong>请求：</strong></span>
                  <code class="literal">POST /process-instance/{processInstanceId}/event/{signalName}</code>
                  </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"variable1"</span><span class="pun">:</span><span class="str">"value"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"variable2"</span><span class="pun">:</span><span class="str">"value"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
                </p></li><li class="listitem"><p>
                  <span class="bold"><strong>API:</strong></span>
                  <code class="literal">runtimeService.signalEventReceived(signalName, execution.getId()[, variables]);</code>
                </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"success"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div></div><div class="section" title="任务"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N168A5"></a>任务</h2></div></div></div><div class="section" title="获得任务简介"><div class="titlepage"><div><div><h3 class="title"><a name="N168A8"></a>获得任务简介</h3></div></div></div><p>
		  为特定用户返回任务简介：分配给用户的任务数量，用户可以认领的未分配任务的数量，
		  用户作为成员的群组可以认领的未分配任务。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">GET /tasks-summary?user={userId}</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getTaskService().createTaskQuery().xxx().count()</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"assigned"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pln"><br>&nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; </span><span class="str">"unassigned"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">"groups"</span><span class="pun">:</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"accountancy"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"sales"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"engineering"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"management"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="任务列表"><div class="titlepage"><div><div><h3 class="title"><a name="N168CC"></a>任务列表</h3></div></div></div><p>
		  返回分页的任务列表，可以同构"id", "name", "description", "priority", "assignee",
          "executionId" 或 "processInstanceId"排序。列表必须基于特定角色的用户：负责人
		  （分配给用户的任务列表）或候选人（用户可以领取的任务列表）或候选群组
		  （用户作为成员的群组可以认领的任务列表）。如果任务通过"formResourceKey"属性指定了一个表单。
		  任务的表单可以通过获取任务表单REST API获得。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>分页请求：</strong></span>
              <code class="literal">GET /tasks?[assignee={userId}|candidate={userId}|candidate-group={groupId}]&amp;start={start=0}&amp;size={size=10}&amp;sort={sort=id}&amp;order={order=asc}</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>实例：</strong></span>
              </p><pre class="prettyprint"><span class="pln">curl </span><span class="pun">--</span><span class="pln">basic </span><span class="pun">--</span><span class="pln">user kermit</span><span class="pun">:</span><span class="pln">kermit http</span><span class="pun">:</span><span class="com">//localhost:8080/activiti-rest/service/tasks?assignee=kermit</span></pre><p>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getTaskService().createTaskQuery().xxx().listPage()</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>分页响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"127"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Handle vacation request"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"description"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Vacation request by Kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"delegationState"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"pending"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"dueDate"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:54:26.750+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"priority"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">50</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"assignee"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"executionId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"118"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"formResourceKey"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"org/activiti/examples/taskforms/approve.form"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"owner"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"parentTaskId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"120"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"financialReport:1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskDefinitionKey"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"125"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="获取任务"><div class="titlepage"><div><div><h3 class="title"><a name="N168FA"></a>获取任务</h3></div></div></div><p>
		  通过任务id获取任务的细节。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">GET /task/{taskId}</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getTaskService().createTaskQuery().taskId(taskId).singleResult()</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"127"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Handle vacation request"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"description"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Vacation request by Kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"delegationState"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"pending"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"dueDate"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:54:26.750+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"priority"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">50</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"assignee"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"executionId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"118"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"formResourceKey"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"org/activiti/examples/taskforms/approve.form"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"owner"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"parentTaskId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"120"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processDefinitionId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"financialReport:1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"123"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"taskDefinitionKey"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"125"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"subTaskList"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"129"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Analyze request"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"description"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Analyze request"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"delegationState"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"pending"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"dueDate"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"2010-10-13T14:54:26.750+02:00"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"priority"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">50</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"assignee"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"executionId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"118"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"owner"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"parentTaskId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"127"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"identityLinkList"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"candidate"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"userId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Fozzie"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"groupId"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"attachmentList"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"130"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"vacation_request.xls"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"description"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Vacation request"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"application/pdf"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="获取任务表单"><div class="titlepage"><div><div><h3 class="title"><a name="N1691E"></a>获取任务表单</h3></div></div></div><p>
		  获取任务表单。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">GET /task/{taskId}/form</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getTaskService().getRenderedTaskForm(taskId)</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="tag">&lt;user-defined-response&gt;</span></pre><p>
            </p></li></ul></div></div><div class="section" title="执行任务操作"><div class="titlepage"><div><div><h3 class="title"><a name="N16942"></a>执行任务操作</h3></div></div></div><p>
		  对任务执行操作（认领，释放，分配或完成）。
		  对于“完成”操作的额外变量（通过表单）可以通过请求体传递。
		  要从表单读取更多变量，可以参考启动流程实例章节。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">PUT /task/{taskId}/[claim|unclaim|complete|assign]</code>
			  认领和释放不需要JSON体，对于完成你可以提供一些变量，分配必须使用userId。
			  例如，完成操作的请求体：
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"variableName1"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"variableValue1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"variableName2"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"variableValue2"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
			  例如，分配操作的请求体：
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"userId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"newAssignee"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li><li class="listitem"><p><span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getTaskService().xxx(taskId ...)</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"success"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="表单属性列表"><div class="titlepage"><div><div><h3 class="title"><a name="N1696A"></a>表单属性列表</h3></div></div></div><p>
		  返回运行中任务的表单的属性列表，由流程定义。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">GET /form/{taskId}/properties</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getFormService().getTaskFormData(taskId).getFormProperties()</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"userName"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"User"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"value"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"foobar"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"string"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"required"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"true"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"readable"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"true"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"writable"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"true"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="为任务添加一个附件"><div class="titlepage"><div><div><h3 class="title"><a name="N1698E"></a>为任务添加一个附件</h3></div></div></div><p>
		  为任务实例添加一个附件。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">PUT /task/{taskId}/attachment</code>
              </p><pre class="prettyprint"><span class="pun">{}</span></pre><p>
            </p></li><li class="listitem"><p><span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getTaskService().createAttachment(...)</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"130"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"vacation_request.xls"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"description"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Vacation request"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"application/pdf"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="获得任务附件"><div class="titlepage"><div><div><h3 class="title"><a name="N169B3"></a>获得任务附件</h3></div></div></div><p>
		  返回任务附件
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                <span class="bold"><strong>请求：</strong></span>
                <code class="literal">GET /attachment/{attachmentId}</code>
              </p></li><li class="listitem"><p>
                <span class="bold"><strong>API:</strong></span>
                <code class="literal">taskService.getAttachment(attachmentId);</code>
              </p></li><li class="listitem"><p>
                <span class="bold"><strong>响应：</strong></span>
                </p><pre class="prettyprint"><span class="pun">附件。</span></pre><p>
              </p></li></ul></div></div><div class="section" title="为任务添加一个url"><div class="titlepage"><div><div><h3 class="title"><a name="N169D7"></a>为任务添加一个url</h3></div></div></div><p>
		  为任务实例添加一个url
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">PUT /task/{taskId}/url</code>
              </p><pre class="prettyprint"><span class="pun">{}</span></pre><p>
            </p></li><li class="listitem"><p><span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getTaskService().createAttachment(...)</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"130"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"google.com"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"description"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Good search sitet"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"url"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"http://www.google.com"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div></div><div class="section" title="身份"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N169FD"></a>身份</h2></div></div></div><div class="section" title="登录"><div class="titlepage"><div><div><h3 class="title"><a name="N16A00"></a>登录</h3></div></div></div><p>
		  认证一个用户。如果用户和密码不匹配，会返回403.
		  如果认证成功，会返回200响应状态。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">POST /login</code>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"userId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"password"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getIdentityService().checkPassword(userId, password)</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"success"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="获得用户"><div class="titlepage"><div><div><h3 class="title"><a name="N16A27"></a>获得用户</h3></div></div></div><p>
		  返回用户的细节。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">GET /user/{userId}</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getIdentityService().createUserQuery().userId(userId).singleResult();</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"firstName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"lastName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"the Frog"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"email"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit@server.com"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="列出用户的群组"><div class="titlepage"><div><div><h3 class="title"><a name="N16A4B"></a>列出用户的群组</h3></div></div></div><p>
		  返回用户对应的群组分页列表，可以使用"id", "name" 或 "type"排序。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>分页请求：</strong></span>
              <code class="literal">GET /user/{userId}/groups?start={start=0}&amp;size={size=10}&amp;sort={sort=id}&amp;order={order=asc}</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getIdentityService().xxx(userId)</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>分页响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; data</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"admin"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"System administrator"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"security-role"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="查询用户"><div class="titlepage"><div><div><h3 class="title"><a name="N16A6D"></a>查询用户</h3></div></div></div><p>
		  返回用户列表，通过查询的文本搜索firstname和lastname。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>分页请求：</strong></span>
              <code class="literal">GET /users?searchText=ker</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getIdentityService().createUserQuery().userFirstNameLike(searchText).list()</code>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getIdentityService().createUserQuery().userLastNameLike(searchText).list()</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; data</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"firstName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"lastName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"the Frog"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"email"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit@server.com"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="创建用户"><div class="titlepage"><div><div><h3 class="title"><a name="N16A92"></a>创建用户</h3></div></div></div><p>
		  创建一个新用户。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">PUT /user</code>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"firstName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"lastName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"the Frog"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"email"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit@server.com"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"password"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getIdentityService().newUser();</code>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getIdentityService().saveUser();</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"success"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="为群组添加用户"><div class="titlepage"><div><div><h3 class="title"><a name="N16ABC"></a>为群组添加用户</h3></div></div></div><p>
		  为群组添加用户，通过这个REST服务。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">POST /user/{userId}/groups</code>
              </p><pre class="prettyprint"><span class="pun">[</span><span class="str">"management"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"sales"</span><span class="pun">]</span></pre><p>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">identityService().createMembership(userId, groupId);</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"success"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="从群组删除用户"><div class="titlepage"><div><div><h3 class="title"><a name="N16AE3"></a>从群组删除用户</h3></div></div></div><p>
		  从群组删除用户。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">DELETE /user/{userId}/groups/{groupId}</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">identityService().deleteMembership(userId, groupId);</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"success"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="获得用户图片"><div class="titlepage"><div><div><h3 class="title"><a name="N16B07"></a>获得用户图片</h3></div></div></div><p>
		  返回用户图片
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
                <span class="bold"><strong>请求：</strong></span>
                <code class="literal">GET /user/{userId}/picture</code>
              </p></li><li class="listitem"><p>
                <span class="bold"><strong>API:</strong></span>
                <code class="literal">identityService.getUserPicture(userId);</code>
              </p></li><li class="listitem"><p>
                <span class="bold"><strong>响应：</strong></span>
                </p><pre class="prettyprint"><span class="typ">The</span><span class="pln"> user picture</span><span class="pun">.</span></pre><p>
              </p></li></ul></div></div><div class="section" title="获得群组"><div class="titlepage"><div><div><h3 class="title"><a name="N16B2B"></a>获得群组</h3></div></div></div><p>
		  返回群组细节。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">GET /group/{groupId}</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getIdentityService().createGroupQuery().groupId(groupId).singleResult();</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"admin"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"System administrator"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"security-role"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="群组用户列表"><div class="titlepage"><div><div><h3 class="title"><a name="N16B4F"></a>群组用户列表</h3></div></div></div><p>
		  返回一个群组的用户细节，可以通过"id", "firstName", "lastName" 或 "email"排序。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>分页请求：</strong></span>
              <code class="literal">GET /group/{groupId}/users</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getIdentityService().createUserQuery().memberOfGroup(groupId).list()</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>分页响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; data</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"firstName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Kermit"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"lastName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"the Frog"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"email"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"kermit@server.com"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="查询群组"><div class="titlepage"><div><div><h3 class="title"><a name="N16B71"></a>查询群组</h3></div></div></div><p>
		  返回群组列表，通过查询的文本搜索id或name。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>分页请求：</strong></span>
              <code class="literal">GET /groups?searchText=ad</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>API:</strong></span>
              <code class="literal">identityService.createGroupQuery().list()</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; data</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"admin"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"System administrator"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"security-role"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="创建群组"><div class="titlepage"><div><div><h3 class="title"><a name="N16B93"></a>创建群组</h3></div></div></div><p>
		  创建新群组。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">PUT /group</code>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"admin"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"name"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"System administrator"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"type"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"security-role"</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">identityService.newGroup();</code>
              <code class="literal">identityService.saveGroup();</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"success"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="为群组添加用户"><div class="titlepage"><div><div><h3 class="title"><a name="N16BBD"></a>为群组添加用户</h3></div></div></div><p>
		  为群组添加用户。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">POST /group/{groupId}/users</code>
              </p><pre class="prettyprint"><span class="pun">[</span><span class="str">"kermit"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"fozzie"</span><span class="pun">]</span></pre><p>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">identityService().createMembership(userId, groupId);</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"success"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="为群组删除用户"><div class="titlepage"><div><div><h3 class="title"><a name="N16BE4"></a>为群组删除用户</h3></div></div></div><p>
		  为群组删除用户。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">DELETE /group/{groupId}/users/{userId}</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">identityService().deleteMembership(userId, groupId);</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"success"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div></div><div class="section" title="管理"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N16C09"></a>管理</h2></div></div></div><div class="section" title="作业列表"><div class="titlepage"><div><div><h3 class="title"><a name="N16C0C"></a>作业列表</h3></div></div></div><p>
		  返回分页的作业列表，可以通过"id", "process-instance-id", "execution-id",
          "due-date", "retries" 或一些自定义的属性id排序。列表可以通过
          process instance id, due date 或作业是否重试，是否可执行，只是消息或定时器来查询。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>分页请求：</strong></span>
              <code class="literal">GET /management/jobs?process-instance={processInstanceId?}&amp;with-retries-left={withRetriesLeft=false}&amp;executable={axecutable=false}&amp;only-timers={onlyTimers=false}&amp;only-messages={onlyMessage=false}&amp;duedate-lt={iso8601Date}&amp;duedate-ltoe={iso8601Date}&amp;duedate-ht={iso8601Date}&amp;duedate-htoe={iso8601Date}&amp;start={start=0}&amp;size={size=10}&amp;sort={sort=id}&amp;order={order=asc}</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).createJobQuery().xxx().listPage()</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>分页响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"212"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"executionId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"211"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"retries"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"processInstanceId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"210"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"dueDate"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"assignee"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"exceptionMessage"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Can\'t find scripting engine for \'groovy\'"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"id"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="获得作业"><div class="titlepage"><div><div><h3 class="title"><a name="N16C30"></a>获得作业</h3></div></div></div><p>
		  返回作业的细节。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">GET /management/job({jobId}</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).createJobQuery().id(jobId).singleResult()</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"id"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"212"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"executionId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"211"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"retries"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"processInstanceId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"210"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"dueDate"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"assignee"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"exceptionMessage"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Can\'t find scripting engine for \'groovy\'"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"stacktrace"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"org.activiti.engine.ActivitiException: Can't find scripting engine for 'groovy'\n\tat ..."</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="执行一个作业"><div class="titlepage"><div><div><h3 class="title"><a name="N16C54"></a>执行一个作业</h3></div></div></div><p>
		  执行一个作业。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">PUT /management/job/{jobId}/execute</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getManagementService().executeJob(jobId)</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"success"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="执行多个作业"><div class="titlepage"><div><div><h3 class="title"><a name="N16C78"></a>执行多个作业</h3></div></div></div><p>
		  执行多个作业。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">POST /management/jobs/execute</code>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"jobIds"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"> </span><span class="str">"212"</span><span class="pln"> </span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getManagementService().executeJob(jobId)</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"success"</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="数据库表列表"><div class="titlepage"><div><div><h3 class="title"><a name="N16C9F"></a>数据库表列表</h3></div></div></div><p>
		  返回引擎中的所有数据库表的元数据。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">GET /management/tables</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getManagementService().getTableCount()</code>
            </p></li><li class="listitem"><p>
              <span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"tableName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"ACT_GE_PROPERTY"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"noOfResults"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">2</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="获得表元数据"><div class="titlepage"><div><div><h3 class="title"><a name="N16CC3"></a>获得表元数据</h3></div></div></div><p>
		  返回一个数据库表的元数据。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>请求：</strong></span>
              <code class="literal">GET /management/table/{tableName}</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getManagementService().getTableMetaData(tableName))</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"tableName"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"ACT_GE_PROPERTY"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"columnNames"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">"REV_"</span><span class="pun">,</span><span class="str">"NAME_"</span><span class="pun">,</span><span class="str">"VALUE_"</span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"columnNames"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">"class java.lang.Integer"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"class java.lang.String"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"class java.lang.String"</span><span class="pun">]</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div><div class="section" title="获得表数据"><div class="titlepage"><div><div><h3 class="title"><a name="N16CE5"></a>获得表数据</h3></div></div></div><p>
		  返回分页的数据库表数据列表。
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              <span class="bold"><strong>分页请求：</strong></span>
              <code class="literal">GET /management/table/{tableName}/data</code>
            </p></li><li class="listitem"><p><span class="bold"><strong>API:</strong></span>
              <code class="literal">ProcessEngines.getProcessEngine(configuredProcessEngineName).getManagementService().createTablePageQuery().tableName(tableName).start(start).size(size).orderXXX(sort).singleResult();
              </code>
            </p></li><li class="listitem"><p><span class="bold"><strong>分页响应：</strong></span>
              </p><pre class="prettyprint"><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="str">"data"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"NAME_"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"schema.version"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"REV_"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"1"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"VALUE_"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"5.10"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">},</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"NAME_"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"next.dbid"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"REV_"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"4"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"VALUE_"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"310"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; </span><span class="pun">],</span><span class="pln"><br>&nbsp; </span><span class="str">"total"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"start"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"sort"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"NAME_"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"order"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"asc"</span><span class="pun">,</span><span class="pln"><br>&nbsp; </span><span class="str">"size"</span><span class="pun">:</span><span class="pln"> </span><span class="lit">2</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
            </p></li></ul></div></div></div></div><div class="chapter" title="Chapter&nbsp;16.&nbsp;集成CDI"><div class="titlepage"><div><div><h2 class="title"><a name="cdiintegration"></a>Chapter&nbsp;16.&nbsp;集成CDI</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#N16D25">设置activiti-cdi</a></span></dt><dd><dl><dt><span class="section"><a href="#N16D2A">查找流程引擎</a></span></dt><dt><span class="section"><a href="#N16D4E">配置Process Engine</a></span></dt><dt><span class="section"><a href="#N16D6C">发布流程</a></span></dt></dl></dd><dt><span class="section"><a href="#N16D7A">基于CDI环境的流程执行</a></span></dt><dd><dl><dt><span class="section"><a href="#N16D7F">与流程实例进行关联交互</a></span></dt><dt><span class="section"><a href="#N16DA9">声明式流程控制</a></span></dt><dt><span class="section"><a href="#N16DC0">在流程中引用bean</a></span></dt><dt><span class="section"><a href="#N16DD4">使用@BusinessProcessScoped beans</a></span></dt><dt><span class="section"><a href="#N16DDE">注入流程变量</a></span></dt><dt><span class="section"><a href="#N16E00">接收流程事件</a></span></dt><dt><span class="section"><a href="#N16E38">更多功能</a></span></dt></dl></dd><dt><span class="section"><a href="#N16E50">已知的问题</a></span></dt></dl></div><p>activiti-cdi模块提供activiti的可配置型和cdi扩展。
  activiti-cdi最突出的特性有：
   </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>支持@BusinessProcessScoped beans（绑定到流程实例的cdi bean），</p></li><li class="listitem"><p>流程为cdi bean支持自定义EL处理器，</p></li><li class="listitem"><p>使用注解为流程实例提供声明式控制，</p></li><li class="listitem"><p>Activiti可以挂接在cdi事件总线上，</p></li><li class="listitem"><p>支持Java EE和Java SE，支持Spring，</p></li><li class="listitem"><p>支持单元测试。</p></li></ul></div><p>
  </p>

  要想在maven项目中使用activiti-cdi，可以添加如下依赖：
<pre class="prettyprint"><span class="tag">&lt;dependency&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;groupId&gt;</span><span class="pln">org.activiti</span><span class="tag">&lt;/groupId&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;artifactId&gt;</span><span class="pln">activiti-cdi</span><span class="tag">&lt;/artifactId&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;version&gt;</span><span class="pln">5.x</span><span class="tag">&lt;/version&gt;</span><span class="pln"><br></span><span class="tag">&lt;/dependency&gt;</span></pre>
	把'x'替换成你的activiti版本（&gt;=5.6）。它会自动加入activiti-entin和spring。
  <div class="section" title="设置activiti-cdi"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N16D25"></a>设置activiti-cdi</h2></div></div></div><p>
	Activiti cdi可以安装在不同环境中。这里，我们会根据配置项一一讲解。
    </p><div class="section" title="查找流程引擎"><div class="titlepage"><div><div><h3 class="title"><a name="N16D2A"></a>查找流程引擎</h3></div></div></div><p>
		cdi扩展需要访问到ProcessEngine。为实现此功能，
		使用<code class="literal">org.activiti.cdi.spi.ProcessEngineLookup</code>接口在运行期进行查找。
		cdi模块使用默认的名为<code class="literal">org.activiti.cdi.impl.LocalProcessEngineLookup</code>的实现，
		它使用<code class="literal">ProcessEngines</code>这个工具类来查找ProcessEngine。默认配置下,
		使用<code class="literal">ProcessEngines#NAME_DEFAULT</code>来查找ProcessEngine。这个类可能是使用了自定义名称的子类。
		注意：需要把<code class="literal">activiti.cfg.xml</code>放在classpath下。
    	</p><p>
		Activiti cdi使用java.util.ServiceLoader SPI处理<code class="literal">org.activiti.cdi.spi.ProcessEngineLookup</code>的实例。
		为了提供接口的自定义实现，我们需要创建一个文本文件，名为
		<code class="literal">META-INF/services/org.activiti.cdi.spi.ProcessEngineLookup</code>，
		在文件中我们需要指定实现的全类名。
    	</p><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3>如果你没有提供自定义的<code class="literal">org.activiti.cdi.spi.ProcessEngineLookup</code>实现，
		activiti会使用默认的<code class="literal">LocalProcessEngineLookup</code>实现。这时，
		你所需要做的就是把activiti.cfg.xml放到classpath下（看下一章）。
    	</div></div><div class="section" title="配置Process Engine"><div class="titlepage"><div><div><h3 class="title"><a name="N16D4E"></a>配置Process Engine</h3></div></div></div><p>实际的配置依赖于选用的ProcessEngineLookup策略（参考上章）。
		这里，我们主要结合LocalProcessEngineLookup讨论可用的配置，
		这要求我们在classpath下提供一个spring的activiti.cfg.xml。</p><p>Activiti提供了不同的ProcessEngineConfiguration实现，主要是依赖实际使用的事务管理策略。
		activiti-cdi模块对事务的要求不严格，意味着任何事务管理策略都可以使用
		（即便是spring事务抽象层）。简单来讲，cdi模块提供两种自定义ProcessEngineConfiguration实现：
     	</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><code class="literal">org.activiti.cdi.CdiJtaProcessEngineConfiguration</code>：activiti的JtaProcessEngineConfiguration的子类，
			用于在activiti使用JTA管理的事务环境。
			</li><li class="listitem"><code class="literal">org.activiti.cdi.CdiStandaloneProcessEngineConfiguration</code>：activiti的StandaloneProcessEngineConfiguration的子类，
			用于在activiti使用简单JDBC事务环境。</li></ul></div><p>
		下面是JBoss 7下的activiti.cfg.xml文件的例子：
     	</p><pre class="prettyprint"><span class="pun">&lt;?</span><span class="pln">xml version</span><span class="pun">=</span><span class="str">"1.0"</span><span class="pln"> encoding</span><span class="pun">=</span><span class="str">"UTF-8"</span><span class="pun">?&gt;</span><span class="pln"><br></span><span class="tag">&lt;beans</span><span class="pln"> </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://www.springframework.org/schema/beans"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">xmlns:xsi</span><span class="pun">=</span><span class="atv">"http://www.w3.org/2001/XMLSchema-instance"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">xsi:schemaLocation</span><span class="pun">=</span><span class="atv">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">&lt;!-- lookup the JTA-Transaction manager --&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"transactionManager"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.springframework.jndi.JndiObjectFactoryBean"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jndiName"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"java:jboss/TransactionManager"</span><span class="tag">&gt;&lt;/property&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"resourceRef"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">&lt;!-- process engine configuration --&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.cdi.CdiJtaProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">&lt;!-- lookup the default Jboss datasource --&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"dataSourceJndiName"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"java:jboss/datasources/ExampleDS"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"databaseType"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"h2"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"transactionManager"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"transactionManager"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">&lt;!-- using externally managed transactions --&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"transactionsExternallyManaged"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"databaseSchemaUpdate"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br></span><span class="tag">&lt;/beans&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
			这是Glassfish 3.1.1下的例子（假设已经配置了名为jdbc/activiti的datasource）：
     	</p><pre class="prettyprint"><span class="pun">&lt;?</span><span class="pln">xml version</span><span class="pun">=</span><span class="str">"1.0"</span><span class="pln"> encoding</span><span class="pun">=</span><span class="str">"UTF-8"</span><span class="pun">?&gt;</span><span class="pln"><br></span><span class="tag">&lt;beans</span><span class="pln"> </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://www.springframework.org/schema/beans"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">xmlns:xsi</span><span class="pun">=</span><span class="atv">"http://www.w3.org/2001/XMLSchema-instance"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">xsi:schemaLocation</span><span class="pun">=</span><span class="atv">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">&lt;!-- lookup the JTA-Transaction manager --&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"transactionManager"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.springframework.jndi.JndiObjectFactoryBean"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"jndiName"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"java:appserver/TransactionManager"</span><span class="tag">&gt;&lt;/property&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"resourceRef"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">&lt;!-- process engine configuration --&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.cdi.CdiJtaProcessEngineConfiguration"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"dataSourceJndiName"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"jdbc/activiti"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"transactionManager"</span><span class="pln"> </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">"transactionManager"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">&lt;!-- using externally managed transactions --&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"transactionsExternallyManaged"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"databaseSchemaUpdate"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br></span><span class="tag">&lt;/beans&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
	  注意上面的额配置需要"spring-context"模块：
</p><pre class="prettyprint"><span class="tag">&lt;dependency&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;groupId&gt;</span><span class="pln">org.springframework</span><span class="tag">&lt;/groupId&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;artifactId&gt;</span><span class="pln">spring-context</span><span class="tag">&lt;/artifactId&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;version&gt;</span><span class="pln">3.0.3.RELEASE</span><span class="tag">&lt;/version&gt;</span><span class="pln"><br></span><span class="tag">&lt;/dependency&gt;</span></pre><p>
	  在Java SE环境下的配置和<a class="link" href="#configuration" title="创建ProcessEngine">创建ProcessEngine</a>章节中提供的例子一样，
     	使用 "CdiStandaloneProcessEngineConfiguration" 替换 "StandaloneProcessEngineConfiguration"。
     	</p></div><div class="section" title="发布流程"><div class="titlepage"><div><div><h3 class="title"><a name="N16D6C"></a>发布流程</h3></div></div></div><p>可以使用标准的activiti-api发布流程（<code class="literal">RepositoryService</code>）。另外，activiti-cdi提供自动发布
	  classpath下<code class="literal">processes.xml</code>中列出的流程的方式。
	  下面是一个processes.xml文件的例子：
     </p><pre class="prettyprint"><span class="pun">&lt;?</span><span class="pln">xml version</span><span class="pun">=</span><span class="str">"1.0"</span><span class="pln"> encoding</span><span class="pun">=</span><span class="str">"utf-8"</span><span class="pln"> </span><span class="pun">?&gt;</span><span class="pln"><br></span><span class="com">&lt;!-- list the processes to be deployed --&gt;</span><span class="pln"><br></span><span class="tag">&lt;processes&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">resource</span><span class="pun">=</span><span class="atv">"diagrams/myProcess.bpmn20.xml"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">resource</span><span class="pun">=</span><span class="atv">"diagrams/myOtherProcess.bpmn20.xml"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/processes&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp;</span></pre><p>
     </p></div></div><div class="section" title="基于CDI环境的流程执行"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N16D7A"></a>基于CDI环境的流程执行</h2></div></div></div><p>
	这一章，我们简短了解activiti cdi扩展使用的基于环境的流程执行模型。
	BPMN业务流程通常是一个长时间运行的操作，包含了用户和系统任务的操作。
	运行过程中，流程会分成多个单独的工作单元，由用户和应用逻辑执行。
	在activiti-cdi中，流程实例可以分配到cdi环境中，关联展现成一个工作单元。
	这是非常有用的，如果工作单元太复杂，比如如果实现的用户任务是不同形式的复杂顺序，
	可以在这个操作中保持"non-process-scoped"状态。

	默认配置下，流程实例分配到"broadest"激活环境，就会启动交互，
	如果交互环境没有激活，就会返回到请求中。
	</p><div class="section" title="与流程实例进行关联交互"><div class="titlepage"><div><div><h3 class="title"><a name="N16D7F"></a>与流程实例进行关联交互</h3></div></div></div><p>
		处理@BusinessProcessScoped beans，或注入流程变量时，我们实现了激活的cdi环境与流程实例的关联。
		Activiti-cdi提供了<code class="literal">org.activiti.cdi.BusinessProcess</code> bean
		来控制关联，特别是：
		</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><code class="literal">startProcessBy*(...)</code>方法，对应activiti的<code class="literal">RuntimeService</code>中的相关方法，
			允许启动和随后向关联的业务流程，</li><li class="listitem"><code class="literal">resumeProcessById(String processInstanceId)</code>，允许通过提供的id来关联流程实例，</li><li class="listitem"><code class="literal">resumeTaskById(String taskId)</code>，允许通过提供的id来关联任务（扩展情况下，也关联相应的流程实例），</li></ul></div><p>
		一个工作单元（比如用户任务）完成后，<code class="literal">completeTask()</code>方法可以调用来解除流程实例和会话/请求的关联。
		这会通知activiti当前任务已经完成，并让流程实例继续执行。
		</p><p>注意，<code class="literal">BusinessProcess</code> bean是<code class="literal">@Named</code> bean，意思是导出的方法可以通过
		表达式语言调用，比如在JSF页面中。下面的JSF 2 代码启动一个新的交互，
		把它分配给一个用户任务实例，id作为一个请求参数传递（比如<code class="literal">pageName.jsf?taskId=XX</code>）：
</p><pre class="prettyprint"><span class="tag">&lt;f:metadata&gt;</span><span class="pln"><br></span><span class="tag">&lt;f:viewParam</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"taskId"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;f:event</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"preRenderView"</span><span class="pln"> </span><span class="atn">listener</span><span class="pun">=</span><span class="atv">"#{businessProcess.startTask(taskId, true)}"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/f:metadata&gt;</span></pre><p>
		</p></div><div class="section" title="声明式流程控制"><div class="titlepage"><div><div><h3 class="title"><a name="N16DA9"></a>声明式流程控制</h3></div></div></div><p>
		Activiti-cdi允许通过注解声明启动流程实例和完成任务。
		<code class="literal">@org.activiti.cdi.annotation.StartProcess</code>注解允许
		通过"key"或"name"启动流程实例。
		注意流程实例会在注解的方法返回<span class="emphasis"><em>之后</em></span>启动。比如：
		</p><pre class="prettyprint"><span class="lit">@StartProcess</span><span class="pun">(</span><span class="str">"authorizeBusinessTripRequest"</span><span class="pun">)</span><span class="pln"><br></span><span class="kwd">public</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> submitRequest</span><span class="pun">(</span><span class="typ">BusinessTripRequest</span><span class="pln"> request</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// do some work</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> </span><span class="str">"success"</span><span class="pun">;</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		根据activiti的配置，注解方法的代码和启动流程实例
		会在同一个事务中执行。
		<code class="literal">@org.activiti.cdi.annotation.CompleteTask</code>事务的使用方式相同：
</p><pre class="prettyprint"><span class="lit">@CompleteTask</span><span class="pun">(</span><span class="pln">endConversation</span><span class="pun">=</span><span class="kwd">false</span><span class="pun">)</span><span class="pln"><br></span><span class="kwd">public</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> authorizeBusinessTrip</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// do some work</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> </span><span class="str">"success"</span><span class="pun">;</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
		<code class="literal">@CompleteTask</code>注解可以结束当前会话。
		默认行为会在activiti返回后结束会话。可以禁用结束会话的功能，
		实例可以参考上述代码。
		</p></div><div class="section" title="在流程中引用bean"><div class="titlepage"><div><div><h3 class="title"><a name="N16DC0"></a>在流程中引用bean</h3></div></div></div><p>
		Activiti-cdi使用自定义解析器把CDI bean暴露到activiti El中。这就可以在流程中引用这些bean：
</p><pre class="prettyprint"><span class="tag">&lt;userTask</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"authorizeBusinessTrip"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Authorize Business Trip"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">activiti:assignee</span><span class="pun">=</span><span class="atv">"#{authorizingManager.account.username}"</span><span class="pln"> </span><span class="tag">/&gt;</span></pre><p>
		"authorizingManager"可以是生产者方法提供的bean：
</p><pre class="prettyprint"><span class="lit">@Inject</span><span class="pln"> </span><span class="lit">@ProcessVariable</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> businessTripRequesterUsername</span><span class="pun">;</span><span class="pln"><br><br></span><span class="lit">@Produces</span><span class="pln"><br></span><span class="lit">@Named</span><span class="pln"><br></span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Employee</span><span class="pln"> authorizingManager</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">TypedQuery</span><span class="pun">&lt;</span><span class="typ">Employee</span><span class="pun">&gt;</span><span class="pln"> query </span><span class="pun">=</span><span class="pln"> entityManager</span><span class="pun">.</span><span class="pln">createQuery</span><span class="pun">(</span><span class="str">"SELECT e FROM Employee e WHERE e.account.username='"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">+</span><span class="pln"> businessTripRequesterUsername </span><span class="pun">+</span><span class="pln"> </span><span class="str">"'"</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Employee</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">Employee</span><span class="pln"> employee </span><span class="pun">=</span><span class="pln"> query</span><span class="pun">.</span><span class="pln">getSingleResult</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> employee</span><span class="pun">.</span><span class="pln">getManager</span><span class="pun">();</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
		你可以使用同样的方法在服务任务中调用EJB的业务方法，
		使用<code class="literal">activiti:expression="myEjb.method()"</code>扩展。
		注意，这要求在<code class="literal">MyEjb</code>类中使用<code class="literal">@Named</code>注解。
	  	</p></div><div class="section" title="使用@BusinessProcessScoped beans"><div class="titlepage"><div><div><h3 class="title"><a name="N16DD4"></a>使用@BusinessProcessScoped beans</h3></div></div></div>
		使用activiti-cdi，bean的生命周期可以绑定到流程实例上。为了扩展，可以提供一个自定义的环境实现，
		命名为BusinessProcessContext。BusinessProcessScoped bean的实例会作为流程变量保存到当前流程实例中。
		<span class="emphasis"><em>BusinessProcessScoped bean需要是PassivationCapable（比如序列化）。</em></span>
		下面是使用流程作用域bean的例子：
<pre class="prettyprint"><span class="lit">@Named</span><span class="pln"><br></span><span class="lit">@BusinessProcessScoped</span><span class="pln"><br></span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">BusinessTripRequest</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Serializable</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> serialVersionUID </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1L</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> startDate</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> endDate</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// ...</span><span class="pln"><br></span><span class="pun">}</span></pre>
		有时，我们需要使用流程作用域bean，没有与流程实例关联，比如启动流程之前。
		如果当前流程实例没有激活，BusinessProcessScoped bean实例会暂时保存在局部作用域里（比如，会话或请求，
		依赖环境。如果作用域后来与业务流程实例关联了，bean实例会刷新到流程实例里。）
	</div><div class="section" title="注入流程变量"><div class="titlepage"><div><div><h3 class="title"><a name="N16DDE"></a>注入流程变量</h3></div></div></div><p>
		流程变量可以实现用于注入。Activiti-CDI支持以下方式：
	  	</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><code class="literal">@BusinessProcessScoped</code>使用<code class="literal">@Inject [附加修饰] 类型 属性名</code>实现类型安全的注入</li><li class="listitem">使用<code class="literal">@ProcessVariable(name?)</code>修饰符实现对类型不安全的流程变量的注入：
<pre class="prettyprint"><span class="lit">@Inject</span><span class="pln"> </span><span class="lit">@ProcessVariable</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> accountNumber</span><span class="pun">;</span><span class="pln"><br></span><span class="lit">@Inject</span><span class="pln"> </span><span class="lit">@ProcessVariable</span><span class="pun">(</span><span class="str">"accountNumber"</span><span class="pun">)</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> account</span></pre></li></ul></div><p>
		为了通过EL引用流程变量，我们可以简单实用如下方式：
	  	</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><code class="literal">@Named @BusinessProcessScoped</code> beans可以直接引用，</li><li class="listitem">其他流程变量可以使用<code class="literal">ProcessVariables</code> bean来使用：
<pre class="prettyprint"><span class="com">#{processVariables['accountNumber']}</span></pre></li></ul></div><p>
	  	</p></div><div class="section" title="接收流程事件"><div class="titlepage"><div><div><h3 class="title"><a name="N16E00"></a>接收流程事件</h3></div></div></div><a class="link" href="#experimental" title="试验性功能">
			<span class="bold"><strong>[EXPERIMENTAL]</strong></span>
		</a><p>
		Activiti可以挂在CDI的事件总线上。这样我们可以使用标准CDI事件机制来监听流程事件。
		为了启用activiti的CDI事件支持，需要在配置中启用对应的解析监听器：
</p><pre class="prettyprint"><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"postBpmnParseHandlers"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;list&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.cdi.impl.event.CdiEventSupportBpmnParseHandler"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/list&gt;</span><span class="pln"><br></span><span class="tag">&lt;/property&gt;</span></pre><p>
现在activiti已经配置成使用CDI事件总线发布事件。下面给出了如何在CDI bean中处理事件的方式。
在CDI，我们可以使用<code class="literal">@Observes</code>注解声明特定的事件监听器。事件监听是类型安全的。
流程事件类型是<code class="literal">org.activiti.cdi.BusinessProcessEvent</code>。
下面是一个简单事件监听方法的例子：
</p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onProcessEvent</span><span class="pun">(</span><span class="lit">@Observes</span><span class="pln"> </span><span class="typ">BusinessProcessEvent</span><span class="pln"> businessProcessEvent</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// handle event</span><span class="pln"><br></span><span class="pun">}</span></pre><p>
监听器可以监听所有事件。如果想限制监听器接收的事件类型，我们可以添加修饰注解：
		</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><code class="literal">@BusinessProcess</code>：限制指定流程定义的事件。
			比如：<code class="literal">@Observes @BusinessProcess("billingProcess") BusinessProcessEvent evt</code></li><li class="listitem"><code class="literal">@StartActivity</code>：限制指定环节的事件。比如：
	  		<code class="literal">@Observes @StartActivity("shipGoods") BusinessProcessEvent evt</code> 在进入id为"shipGoods"的环节时会触发。
	  		</li><li class="listitem"><code class="literal">@EndActivity</code>：限制指定环节的事件。比如：
	  		<code class="literal">@Observes @EndActivity("shipGoods") BusinessProcessEvent evt</code> 在离开id为"shipGoods"的环节时会触发
	  		</li><li class="listitem"><code class="literal">@TakeTransition</code>：限制指定连线的事件。
	  		</li></ul></div><p>
		修饰命名可以自由组合。比如，为了接收"shipmentProcess"流程中所有离开"shipGoods"环节的事件，
		我们可以编写如下监听方法：
</p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> beforeShippingGoods</span><span class="pun">(</span><span class="lit">@Observes</span><span class="pln"> </span><span class="lit">@BusinessProcess</span><span class="pun">(</span><span class="str">"shippingProcess"</span><span class="pun">)</span><span class="pln"> </span><span class="lit">@EndActivity</span><span class="pun">(</span><span class="str">"shipGoods"</span><span class="pun">)</span><span class="pln"> </span><span class="typ">BusinessProcessEvent</span><span class="pln"> evt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// handle event</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
		默认配置下，事件监听器是同步调用，并在同一个事务环境中。
		CDI事务性监听器（只在JavaEE / EJB环境下有效），可以控制监听器什么时候处理事件，
		比如，我们可以保证监听器只在事件中的事务成功之后才处理：
</p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onShipmentSuceeded</span><span class="pun">(</span><span class="lit">@Observes</span><span class="pun">(</span><span class="pln">during</span><span class="pun">=</span><span class="typ">TransactionPhase</span><span class="pun">.</span><span class="pln">AFTER_SUCCESS</span><span class="pun">)</span><span class="pln"> </span><span class="lit">@BusinessProcess</span><span class="pun">(</span><span class="str">"shippingProcess"</span><span class="pun">)</span><span class="pln"> </span><span class="lit">@EndActivity</span><span class="pun">(</span><span class="str">"shipGoods"</span><span class="pun">)</span><span class="pln"> </span><span class="typ">BusinessProcessEvent</span><span class="pln"> evt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// send email to customer.</span><span class="pln"><br></span><span class="pun">}</span></pre><p>

	  	</p></div><div class="section" title="更多功能"><div class="titlepage"><div><div><h3 class="title"><a name="N16E38"></a>更多功能</h3></div></div></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem">流程引擎和服务都可以注入：<code class="literal">@Inject ProcessEngine, RepositoryService, TaskService</code>, ...</li><li class="listitem">当前流程实例和任务可以注入：<code class="literal">@Inject ProcessInstance, Task</code>,</li><li class="listitem">当前业务标识可以注入：<code class="literal">@Inject @BusinessKey String businessKey</code>,</li><li class="listitem">当前流程实例id可以注入 ：<code class="literal">@Inject @ProcessInstanceId String pid</code>,</li></ul></div></div></div><div class="section" title="已知的问题"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="N16E50"></a>已知的问题</h2></div></div></div><p>
		虽然activiti-cdi已经使用了SPI，并设计为“可移植扩展”，但是只在Weld下测试过。
	  	</p></div></div><div class="chapter" title="Chapter&nbsp;17.&nbsp;集成LDAP"><div class="titlepage"><div><div><h2 class="title"><a name="chapter_ldap"></a>Chapter&nbsp;17.&nbsp;集成LDAP</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#ldap_usage">用法</a></span></dt><dt><span class="section"><a href="#ldap_usecases">用例</a></span></dt><dt><span class="section"><a href="#ldap_configuration">配置</a></span></dt><dt><span class="section"><a href="#ldap_properties">属性</a></span></dt><dt><span class="section"><a href="#lda-explorer">为Explorer集成LDAP</a></span></dt></dl></div><p>
		企业通常已经在LDAP系统各种保存了用户和群组信息。
		自从5.14版本开始，Activiti提供了一种解决方案，
		通过简单的配置就可以告知activiti如何连接LDAP。
    </p><p>
		在Activiti 5.14之前，Activiti就已经可以集成LDAP了。
		然后，5.14的配置简单了很多。
		不过，配置LDAP的“老”办法依然有效。更确切的说，
		简化的配置其实是基于“老”方法的封装。
    </p><div class="section" title="用法"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="ldap_usage"></a>用法</h2></div></div></div><p>
			要想在你的项目中集成LDAP，
			在pom.xml中添加如下依赖：
            </p><pre class="prettyprint"><span class="tag">&lt;dependency&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;groupId&gt;</span><span class="pln">org.activiti</span><span class="tag">&lt;/groupId&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;artifactId&gt;</span><span class="pln">activiti-ldap</span><span class="tag">&lt;/artifactId&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;version&gt;</span><span class="pln">latest.version</span><span class="tag">&lt;/version&gt;</span><span class="pln"><br></span><span class="tag">&lt;/dependency&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p></div><div class="section" title="用例"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="ldap_usecases"></a>用例</h2></div></div></div><p>
			集成LDAP目前有两大用例：
            </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
						通过IdentityService进行认证。比如，使用Activiti Explorer
						通过LDAP登录。
                    </p></li><li class="listitem"><p>
						获得用户的组。这在查询用户可以看到哪些任务时非常重要。
						（比如，任务分配给一个候选组）。
                    </p></li></ul></div><p>
        </p></div><div class="section" title="配置"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="ldap_configuration"></a>配置</h2></div></div></div><p>
			集成LDAP是通过向流程引擎配置章节中的<code class="literal">configurators</code>注入
			<code class="literal">org.activiti.ldap.LDAPConfigurator</code>的实例来实现的。
			这个类是高度可扩展的：
			如果默认的实现不符合用例的话，
			可以很容易的重写方法，很多依赖的bean都是可插拔的。
        </p><p>
			这时一个实例配置（注意：当然，
			通过代码创建引擎时，是非常简单的）。
			现在不用担心所有参数，我们会在下一章详细讨论。
            </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"...SomeProcessEngineConfigurationClass"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; ...<br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"configurators"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;list&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.ldap.LDAPConfigurator"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">&lt;!-- Server connection params --&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"server"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"ldap://localhost"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"port"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"33389"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"user"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"uid=admin, ou=users, o=activiti"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"password"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"pass"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">&lt;!-- Query params --&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"baseDn"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"o=activiti"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"queryUserByUserId"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"(&amp;(objectClass=inetOrgPerson)(uid={0}))"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"queryUserByFullNameLike"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"(&amp;(objectClass=inetOrgPerson)(|({0}=*{1}*)({2}=*{3}*)))"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"queryGroupsForUser"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"(&amp;(objectClass=groupOfUniqueNames)(uniqueMember={0}))"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">&lt;!-- Attribute config --&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"userIdAttribute"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"uid"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"userFirstNameAttribute"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"cn"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"userLastNameAttribute"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"sn"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"groupIdAttribute"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"cn"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"groupNameAttribute"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"cn"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/list&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/property&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
        </p></div><div class="section" title="属性"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="ldap_properties"></a>属性</h2></div></div></div><p>
			下面是<code class="literal">org.activiti.ldap.LDAPConfigurator</code>可以配置的属性：
            </p><div class="table"><a name="N16E8E"></a><p class="title"><b>Table&nbsp;17.1.&nbsp;LDAP配置属性</b></p><div class="table-contents"><table summary="LDAP配置属性" border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th>属性名</th><th>描述</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>server</td><td>LDAP服务器地址。比如'ldap://localhost:33389'</td><td>String</td><td>&nbsp;</td></tr><tr><td>port</td><td>LDAP运行的端口</td><td>int</td><td>&nbsp;</td></tr><tr><td>user</td><td>连接LDAP使用的账号</td><td>String</td><td>&nbsp;</td></tr><tr><td>password</td><td>连接LDAP使用的密码</td><td>String</td><td>&nbsp;</td></tr><tr><td>initialContextFactory</td><td>连接LDAP使用的InitialContextFactory名称</td><td>String</td><td>com.sun.jndi.ldap.LdapCtxFactory</td></tr><tr><td>securityAuthentication</td><td>连接LDAP时设置的'java.naming.security.authentication'属性值</td><td>String</td><td>simple</td></tr><tr><td>customConnectionParameters</td><td>可以设置那些没有对应setter的连接参数。
							参考http://docs.oracle.com/javase/tutorial/jndi/ldap/jndi.html中的自定义属性。
							这些属性用来配置连接池，特定的安全设置，等等。
							所有提供的参数都会用来创建LDAP连接。</td><td>Map&lt;String, String&gt;</td><td>&nbsp;</td></tr><tr><td>baseDn</td><td>搜索用户和组的基“显著名称”（DN）</td><td>String</td><td>&nbsp;</td></tr><tr><td>userBaseDn</td><td>搜索用户基于的'distinguished name' (DN)。如果没有提供，会使用baseDn（参考上面）</td><td>String</td><td>&nbsp;</td></tr><tr><td>groupBaseDn</td><td>搜索群组基于的'distinguished name' (DN)。如果没有提供，会使用baseDn（参考上面）</td><td>String</td><td>&nbsp;</td></tr><tr><td>searchTimeLimit</td><td>搜索LDAP的超时时间，单位毫秒。</td><td>long</td><td>一小时</td></tr><tr><td>queryUserByUserId</td><td>
							使用用户id搜索用户的查询语句。
							比如：(&amp;(objectClass=inetOrgPerson)(uid={0}))
							这里，LDAP中所有包含'inetOrgPerson'类的
							匹配'uid'属性的值都会返回。
							如例子中所示，{0}会被用户id替换。
							如果只设置一个查询无法满足特定的LDAP设置，
							可以选择使用LDAPQueryBuilder，
							这样就会提供比单纯使用查询增加更多功能。
                            </td><td>string</td><td>&nbsp;</td></tr><tr><td>queryUserByFullNameLike</td><td>
							使用全名搜索用户的查询语句。
							比如：(&amp; (objectClass=inetOrgPerson) (|({0}=*{1}*)({2}=*{3}*)) )
							这里，LDAP中所有包含'inetOrgPerson'类的
							匹配first name和last name的值都会返回。
							注意{0}会替换为firstNameAttribute（如上所示），{1}和{3}是搜索内容，
							{2}是lastNameAttribute。
							如果只设置一个查询无法满足特定的LDAP设置，
							可以选择使用LDAPQueryBuilder，
							这样就会提供比单纯使用查询增加更多功能。
                            </td><td>string</td><td>&nbsp;</td></tr><tr><td>queryGroupsForUser</td><td>
							使用搜索指定用户的组的查询语句。
							比如：(&amp;(objectClass=groupOfUniqueNames)(uniqueMember={0}))
							这里，LDAP中所有包含'groupOfUniqueNames'类的
							提供的DN（匹配用户的DN）是'uniqueMember'的记录都会返回。
							像例子中演示的那样，{0}会替换为用户id。
							如果只设置一个查询无法满足特定的LDAP设置，
							可以选择使用LDAPQueryBuilder，
							这样就会提供比单纯使用查询增加更多功能。</td><td>string</td><td>&nbsp;</td></tr><tr><td>userIdAttribute</td><td>匹配用户id的属性名。
							这个属性用来在查找用户对象时
							关联LDAP对象与Activiti用户对象之间的关系。</td><td>string</td><td>&nbsp;</td></tr><tr><td>userFirstNameAttribute</td><td>匹配first name的属性名。
							这个属性用来在查找用户对象时
							关联LDAP对象与Activiti用户对象之间的关系。</td><td>string</td><td>&nbsp;</td></tr><tr><td>userLastNameAttribute</td><td>匹配last name的属性名。
							这个属性用来在查找用户对象时
							关联LDAP对象与Activiti用户对象之间的关系。</td><td>string</td><td>&nbsp;</td></tr><tr><td>groupIdAttribute</td><td>匹配组id的属性名。
							这个属性用来在查找组对象时
							关联LDAP对象与Activiti组对象之间的关系。</td><td>string</td><td>&nbsp;</td></tr><tr><td>groupNameAttribute</td><td>匹配组名的属性名。
							这个属性用来在查找组对象时
							关联LDAP对象与Activiti组对象之间的关系。</td><td>String</td><td>&nbsp;</td></tr><tr><td>groupTypeAttribute</td><td>匹配组名的属性类型。
							这个属性用来在查找组对象时
							关联LDAP对象与Activiti组对象之间的关系。</td><td>String</td><td>&nbsp;</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
			下列属性用在希望修改默认行为
			或修改组缓存的情况：
            </p><div class="table"><a name="N16F44"></a><p class="title"><b>Table&nbsp;17.2.&nbsp;高级属性</b></p><div class="table-contents"><table summary="高级属性" border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th>属性名</th><th>描述</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>ldapUserManagerFactory</td><td>设置LDAPUserManagerFactory的自定义实例，如果默认实现不满足需求。</td><td>LDAPUserManagerFactory的实例</td><td>&nbsp;</td></tr><tr><td>ldapGroupManagerFactory</td><td>设置LDAPGroupManagerFactory的自定义实例，如果默认实现不满足需求。</td><td>LDAPGroupManagerFactory的实例</td><td>&nbsp;</td></tr><tr><td>ldapMemberShipManagerFactory</td><td>设置LDAPMembershipManagerFactory的自定义实例，如果默认实现不满足需求。
							注意它不常用，因为正常情况下LDAP会自己管理关联关系。</td><td>LDAPMembershipManagerFactory的实例</td><td>&nbsp;</td></tr><tr><td>ldapQueryBuilder</td><td>设置自定义查询构造器，如果默认实现不满足需求。
							LDAPQueryBuilder实例用在LDAPUserManager和LDAPGroupManager中，
							执行对LDAP的查询。
							默认实现会使用配置的queryGroupsForUser和queryUserById属性。</td><td>org.activiti.ldap.LDAPQueryBuilder的实例</td><td>&nbsp;</td></tr><tr><td>groupCacheSize</td><td>组缓存的大小。
							这是一个LRU缓存，用来缓存用户的组，
							可以避免每次查询用户的组时，都要访问LDAP。

							如果值小于0，就不会创建缓存。
							默认为-1，所以不会进行缓存。
                            </td><td>int</td><td>-1</td></tr><tr><td>groupCacheExpirationTime</td><td>设置组缓存的过期时间，单位为毫秒。
							当获取特定用户的组时，并且组缓存也启用了，
							组会保存到缓存中，并使用这个属性设置的时间。
							例如，当组在00:00被获取，过期时间为30分钟，
							那么所有在00:30之后进行的查询都不会使用缓存，
							而是再次去LDAP查询。因此，所以在00:00 - 00:30
							进行的查询都会使用缓存。</td><td>long</td><td>1小时</td></tr></tbody></table></div></div><p><br class="table-break">
        </p><p>
			注意，在使用活动目录（AD）时：Activiti论坛中的人们反映对于活动目录（AD），
			'InitialDirContext'需要设置为Context.REFERRAL。可以通过上面描述的customConnectionParameters传递。
        </p></div><div class="section" title="为Explorer集成LDAP"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="lda-explorer"></a>为Explorer集成LDAP</h2></div></div></div><p>
            </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
						把上面的LDAP配置添加到<code class="literal">activiti-standalone-context.xml</code>中。
                    </p></li><li class="listitem"><p>
                        把activiti-ldap jar放到WEB-INF/lib目录下
                    </p></li><li class="listitem"><p>
                        删除<code class="literal">demoDataGenerator</code> bean，因为它会尝试插入数据（集成LDAP不允许这么做）
                    </p></li><li class="listitem"><p>
						将下面的配置添加到<code class="literal">activiti-ui.context</code>的<code class="literal">explorerApp</code> bean中：
                        </p><pre class="prettyprint"><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"adminGroups"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;list&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;value&gt;</span><span class="pln">admin</span><span class="tag">&lt;/value&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/list&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/property&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"userGroups"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;list&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;value&gt;</span><span class="pln">user</span><span class="tag">&lt;/value&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/list&gt;</span><span class="pln"><br></span><span class="tag">&lt;/property&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><p>
						请使用你自己的配置替换其中的值。需要用到的数据是组的id（通过<code class="literal">groupIdAttribute</code>配置）。
						上述配置会让'admin'组下的所有用户都成为Activiti Explorer的管理员，用户组也一样。
						所有不匹配的组都会当做“分配”组，
						这样任务就可以分配给他们。
                    </p></li></ul></div><p>
        </p></div></div><div class="chapter" title="Chapter&nbsp;18.&nbsp;高级功能"><div class="titlepage"><div><div><h2 class="title"><a name="N16FAF"></a>Chapter&nbsp;18.&nbsp;高级功能</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#advanced_parseHandlers">监听流程解析</a></span></dt><dt><span class="section"><a href="#advanced.uuid.generator">支持高并发的UUID id生成器</a></span></dt><dt><span class="section"><a href="#advanced.tenancy">多租户</a></span></dt><dt><span class="section"><a href="#advanced.custom.sql.queries">执行自定义SQL</a></span></dt><dt><span class="section"><a href="#advanced.process.engine.configurators">使用ProcessEngineConfigurator实现高级流程引擎配置</a></span></dt><dt><span class="section"><a href="#advanced.safe.bpmn.xml">启用安全的BPMN 2.0 xml</a></span></dt><dt><span class="section"><a href="#advanced.event.logging">事件日志（实验）</a></span></dt></dl></div><p>
	   下面内容将介绍使用Activiti的高级用例，它会超越BPMN 2.0流程的范畴。
	   因此，对于Activiti的明确目标和经验有利于理解这里的内容。
	</p><div class="section" title="监听流程解析"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="advanced_parseHandlers"></a>监听流程解析</h2></div></div></div><p>
		   bpmn 2.0 xml文件需要被解析为Activiti内部模型，然后才能在Activiti引擎中运行。
		   解析过程发生在发布流程或在内存中找不到对应流程的时候，
		   这时会从数据库查询对应的xml。
	   </p><p>
		   对于每个流程，<code class="literal">BpmnParser</code>类都会创建一个新的<code class="literal">BpmnParse</code>实例。
		   这个实例会作为解析过程中的容器来使用。解析过程很简单：
		   对于每个BPMN 2.0元素，引擎中都会有一个对应的<code class="literal">org.activiti.engine.parse.BpmnParseHandler</code>实例。
		   这样，解析器会保存一个BPMN 2.0元素与<code class="literal">BpmnParseHandler</code>实例的映射。
		   默认，Activiti使用<code class="literal">BpmnParseHandler</code>来处理所有支持的元素，
		   也使用它来提供执行监听器，以支持流程历史。
	   </p><p>
		   可以向Activiti引擎中添加自定义的<code class="literal">org.activiti.engine.parse.BpmnParseHandler</code>实例。
		   经常看到的用例是把执行监听器添加到对应的环节，来处理一些事件队列。
		   Activiti在内部就是这样进行历史处理的。
		   要想添加这种自定义处理器，需要为Activiti添加如下配置：
	       </p><pre class="prettyprint"><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"preBpmnParseHandlers"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;list&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.parsing.MyFirstBpmnParseHandler"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/list&gt;</span><span class="pln"><br></span><span class="tag">&lt;/property&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"postBpmnParseHandlers"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;list&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.parsing.MySecondBpmnParseHandler"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.parsing.MyThirdBpmnParseHandler"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;/list&gt;</span><span class="pln"><br></span><span class="tag">&lt;/property&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
		   配置到<code class="literal">preBpmnParseHandlers</code>的<code class="literal">BpmnParseHandler</code>实例
		   会添加在默认处理器的前面。与之类似，<code class="literal">postBpmnParseHandlers</code>会加在后面。
		   当自定义处理器内部逻辑对处理顺序有要求时就很重要了。
	   </p><p>
	       <code class="literal">org.activiti.engine.parse.BpmnParseHandler</code>是一个很简单的接口：
	       </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">interface</span><span class="pln"> </span><span class="typ">BpmnParseHandler</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="typ">Collection</span><span class="pun">&lt;</span><span class="typ">Class</span><span class="pun">&gt;?</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">BaseElement</span><span class="pun">&gt;&gt;</span><span class="pln"> getHandledTypes</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">void</span><span class="pln"> parse</span><span class="pun">(</span><span class="typ">BpmnParse</span><span class="pln"> bpmnParse</span><span class="pun">,</span><span class="pln"> </span><span class="typ">BaseElement</span><span class="pln"> element</span><span class="pun">);</span><span class="pln"><br><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
		   <code class="literal">getHandledTypes()</code>方法会翻译这个解析器处理的所有类型的集合。
		   它们都是<code class="literal">BaseElement</code>的子类，返回集合的泛型限制也说明了这一点。
		   你也可以继承<code class="literal">AbstractBpmnParseHandler</code>类并重写<code class="literal">getHandledType()</code>方法，
		   这样就只需要返回一个类型，而不是一个集合。这个类也包含了需要
		   默认解析处理器所需要的帮助方法。
		   <code class="literal">BpmnParseHandler</code>实例只有在解析器访问到这个方法返回的类型时才会被调用。
		   在下面的例子中， 当BPMN 2.0 xml包含process元素时，
		   就会执行<code class="literal">executeParse</code>方法中的逻辑（这是一个已经完成类型转换的方法，
		   它替换了<code class="literal">BpmnParseHandler</code>接口中的<code class="literal">parse</code>方法。）
	       </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">TestBPMNParseHandler</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">AbstractBpmnParseHandler</span><span class="pun">&lt;</span><span class="typ">Process</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">protected</span><span class="pln"> </span><span class="typ">Class</span><span class="pun">&lt;?</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">BaseElement</span><span class="pun">&gt;</span><span class="pln"> getHandledType</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">Process</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">;</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">protected</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> executeParse</span><span class="pun">(</span><span class="typ">BpmnParse</span><span class="pln"> bpmnParse</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Process</span><span class="pln"> element</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp;</span><span class="pun">..</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
	   </p><p>
	       <span class="bold"><strong>重要提示：</strong></span>在编写自定义解析处理器时，
		   不要使用任何解析BPMN 2.0结构的内部类。这会很难找到问题。
		   安全的方法是实现<span class="emphasis"><em>BpmnParseHandler</em></span>接口或集成内部抽象类
		   <span class="emphasis"><em>org.activiti.engine.impl.bpmn.parser.handler.AbstractBpmnParseHandler</em></span>。
	   </p><p>
	     可以（但不常用）替换默认的<code class="literal">BpmnParseHandler</code>实例
		 把解析BPMN 2.0元素解析为Activiti内部模型。
		 可以通过下面的代码来实现：
         </p><pre class="prettyprint"><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"customDefaultBpmnParseHandlers"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;list&gt;</span><span class="pln"><br>&nbsp; &nbsp; ...<br>&nbsp; </span><span class="tag">&lt;/list&gt;</span><span class="pln"><br></span><span class="tag">&lt;/property&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
		 举个简单的例子，强行把所有服务任务都设置为异步的：
         </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">CustomUserTaskBpmnParseHandler</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">ServiceTaskParseHandler</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">protected</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> executeParse</span><span class="pun">(</span><span class="typ">BpmnParse</span><span class="pln"> bpmnParse</span><span class="pun">,</span><span class="pln"> </span><span class="typ">ServiceTask</span><span class="pln"> serviceTask</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">// Do the regular stuff</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">super</span><span class="pun">.</span><span class="pln">executeParse</span><span class="pun">(</span><span class="pln">bpmnParse</span><span class="pun">,</span><span class="pln"> serviceTask</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">// Make always async</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">ActivityImpl</span><span class="pln"> activity </span><span class="pun">=</span><span class="pln"> findActivity</span><span class="pun">(</span><span class="pln">bpmnParse</span><span class="pun">,</span><span class="pln"> serviceTask</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; activity</span><span class="pun">.</span><span class="pln">setAsync</span><span class="pun">(</span><span class="kwd">true</span><span class="pun">);</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
	   </p></div><div class="section" title="支持高并发的UUID id生成器"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="advanced.uuid.generator"></a>支持高并发的UUID id生成器</h2></div></div></div><p>
		   在一些（非常）高并发的场景，默认的id生成器可能因为无法很快的获取新id区域而导致异常。
		   所有流程引擎都有一个id生成器。默认的id生成器会在数据库划取一块id范围，
		   这样其他引擎就不能使用相同范围的id。
		   在引擎奥做期间，当默认的id生成器发现已经越过id范围时，就会启动一个新事务来获得新范围。
		   在（非常）极限的情况下，这会在非常高负载的情况下导致问题。
		   对于大部分情况，默认id生成就足够了。默认的<code class="literal">org.activiti.engine.impl.db.DbIdGenerator</code>
		   也有一个<code class="literal">idBlockSize</code>属性，可以配置获取id范围的大小，
		   这样可以改变获取id的行为。
	   </p><p>
		   另一个可以选用的默认id生成器是<code class="literal">org.activiti.engine.impl.persistence.StrongUuidGenerator</code>，
		   它会在本地生成一个唯一的<a class="ulink" href="http://en.wikipedia.org/wiki/Universally_unique_identifier" target="_top">UUID</a>，
		   把它作为所有实体的标识。因为生成UUID不需要访问数据库，所以它在高并发环境下的表现比较好。
		   要注意默认id生成器的性能（无论好坏）都依赖于运行硬件。
	   </p><p>
		   UUID生成器可以像下面这样配置到activiti中：
</p><pre class="prettyprint"><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"idGenerator"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.activiti.engine.impl.persistence.StrongUuidGenerator"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/property&gt;</span></pre><p>
	   </p><p>
		   使用UUID id生成器需要以下依赖：
	       </p><pre class="prettyprint"><span class="pln">&nbsp;</span><span class="tag">&lt;dependency&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;groupId&gt;</span><span class="pln">com.fasterxml.uuid</span><span class="tag">&lt;/groupId&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;artifactId&gt;</span><span class="pln">java-uuid-generator</span><span class="tag">&lt;/artifactId&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;version&gt;</span><span class="pln">3.1.3</span><span class="tag">&lt;/version&gt;</span><span class="pln"><br></span><span class="tag">&lt;/dependency&gt;</span></pre><p>
	   </p></div><div class="section" title="多租户"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="advanced.tenancy"></a>多租户</h2></div></div></div><p>
		   多租户通常是在软件需要为多个不同组织服务时产生的概念。
		   关键是数据分片，组织不能看到其他组织的数据。
		   这种场景下，组织（或部门，或小组，或。。。）就叫做 <span class="emphasis"><em>租户</em></span>。
	   </p><p>
		   注意它和安装多个实例是从基本上不同的，这是一个activiti流程引擎实例为每个组织分别运行
		   （对应不同的数据库表）。虽然activiti是轻量级的，
		   运行流程引擎不会消耗很多资源，但是它还是增加了复杂性，并需要更多维护工作。
		   但是，对一些场景，可能也是正确的解决方案。
   </p><p>
	      activiti的多租户主要围绕着数据分片来实现。很重要的一点是，
		  <span class="bod">Activiti没有强行校验多租户的规则</span>。
		  这意味着不会校验，查询和使用数据时用户是否使用了正确的租户。
		  这应该由activiti引擎的调用者一层负责完成。
		  activiti只确认租户信息会被保存，并在查询流程数据时会被用到。
	   </p><p>
	       在向activiti流程引擎发布流程定义时，可能需要传递一个<span class="emphasis"><em>租户标识</em></span>。
		   它是一个字符串（比如，UUID，部门ID，等等），限制在256字符内，租户的唯一标识。
	       </p><pre class="prettyprint"><span class="pln">&nbsp;repositoryService</span><span class="pun">.</span><span class="pln">createDeployment</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">addClassPathResource</span><span class="pun">(...)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">tenantId</span><span class="pun">(</span><span class="str">"myTenantId"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">deploy</span><span class="pun">();</span></pre><p>
	       通过部署传递租户id有以下含义：
		   </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
	               所有包含在部署中的流程定义都会继承部署的tenantId。
	           </p></li><li class="listitem"><p>
                    所有从这些流程定义发起的流程实例，都会继承流程定义的tenantId。
               </p></li><li class="listitem"><p>
                    所有流程实例运行阶段创建的任务都会继承流程实例的tenantId。
					单独运行的task也可以包含tenantId。
               </p></li><li class="listitem"><p>
                    所有流程实例运行阶段创建的分支都会继承流程实例的tenantId。
               </p></li><li class="listitem"><p>
                    触发一个信号抛出事件（在流程本身或通过API）可以通过tenantId实现。
					信号指挥在租户环境下执行：比如，如果有多个信号捕获事件，并且名字相同，
					实际只有正确的tenantId下的事件会被调用。
               </p></li><li class="listitem"><p>
                    所有作业（定时器，异步调用）会集成tenantId，或者来自流程定义（比如定时开始事件），
					或流程实例（运行期创建的作业，比如异步调用）。这样其实潜在的可以支持
					为一些租户指定不同优先级的自定义jobExecutor。
               </p></li><li class="listitem"><p>
                    所有历史实体（历史流程实例，任务和节点）会从它们对应的运行状态集成tenantId。
               </p></li><li class="listitem"><p>
                    作为单独的一部分，model也可以设置tenantId（model用来存储Activiti modeler设计的bpmn 2.0模型）。
               </p></li></ul></div><p>
	   </p><p>
	       为了确实为流程数据使用tenantId，所有的查询API都可以通过tenantId进行查询。
		   比如（可以使用其他的实体的对应查询实现替换）：
	       </p><pre class="prettyprint"><span class="pln">runtimeService</span><span class="pun">.</span><span class="pln">createProcessInstanceQuery</span><span class="pun">()</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="bold"><strong><span class="pun">.</span><span class="pln">processInstanceTenantId</span><span class="pun">(</span><span class="str">"myTenantId"</span><span class="pun">)</span></strong></span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">processDefinitionKey</span><span class="pun">(</span><span class="str">"myProcessDefinitionKey"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">variableValueEquals</span><span class="pun">(</span><span class="str">"myVar"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"someValue"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">.</span><span class="pln">list</span><span class="pun">()</span></pre><p>
        查询API也允许对tenantId使用<span class="emphasis"><em>like</em></span>语法，
		也可以过滤未设置tenantId的实体。
	   </p><p>
        <span class="bold"><strong>重要的实现细节：</strong></span> 因为数据库的限制（特指：处理null的唯一校验）
		<span class="emphasis"><em>默认</em></span>的表示<span class="emphasis"><em>未设置租户</em></span>的tenantId的值是<span class="bold"><strong>空字符串</strong></span>。
		（流程定义key，流程定义version，tenantId）的组合应该是唯一的（有一个数据库约束校验这个规则）。
		也要注意tenantId不应设置为null，它会影响一些数据库（Oracle）的查询，它把空字符串当做null处理。
		（这也是为什么<span class="emphasis"><em>.withoutTenantId</em></span>查询会检查空字符串或null）。
		这意味着相同的流程定义（流程定义key相同）可以部署到不同的租户下，可以拥有各自的八本。
		当不使用租户时也不会影响使用。
       </p><p>
	       <span class="bold"><strong>注意上面介绍的所有内容都不会影响Activiti在集群环境下运行。</strong></span>
	   </p><p>
	       [试验项目] 可以通过调用<span class="emphasis"><em>repositoryService</em></span>的
		   <span class="emphasis"><em>changeDeploymentTenantId(String deploymentId, String newTenantId)</em></span>修改tenantId。
		   它会修改之前继承的所有tenantId。
		   当我们从非多租户环境向多租户环境下切换时，就会非常实用了。
		   参考方法的javadoc获得更多细节信息。
	   </p></div><div class="section" title="执行自定义SQL"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="advanced.custom.sql.queries"></a>执行自定义SQL</h2></div></div></div><p>
	       Activiti API允许使用高级API操作数据库。比如，在查询数据方面，查询API和Native Query API是非常强大的。
		   然而，对于某些情况，它们还是不够轻便。
		   下面的章节描述了如何使用完全自定义的SQL语句（select, insert, update和delete）
		   可以执行在Activiti的数据存储之上，但是完全又是配置在流程引擎中的
		   （比如使用事务）。
	   </p><p>
	       为了使用自定义SQL，activiti引擎使用下层框架的功能，MyBatis。
		   使用自定义SQL的第一件事，要创建MyBatis映射类。可以阅读
		   <a class="ulink" href="http://mybatis.github.io/mybatis-3/java-api.html" target="_top">MyBatis用户手册</a>了解更多信息。
		   比如，假设不需要全部的任务数据，只需要其中的一小部分。
		   可以使用Mapper实现，如下：
	       </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">interface</span><span class="pln"> </span><span class="typ">MyTestMapper</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="lit">@Select</span><span class="pun">(</span><span class="str">"SELECT ID_ as id, NAME_ as name, CREATE_TIME_ as createTime FROM ACT_RU_TASK"</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;&gt;</span><span class="pln"> selectTasks</span><span class="pun">();</span><span class="pln"><br><br></span><span class="pun">}</span></pre><p>
			这个mapper需要像下面这样设置到流程引擎配置中：
            </p><pre class="prettyprint"><span class="pun">...</span><span class="pln"><br></span><span class="pun">&lt;</span><span class="pln">property name</span><span class="pun">=</span><span class="str">"customMybatisMappers"</span><span class="pun">&gt;</span><span class="pln"><br>&nbsp; </span><span class="str">&lt;set&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="str">&lt;value&gt;</span><span class="pln">org</span><span class="pun">.</span><span class="pln">activiti</span><span class="pun">.</span><span class="pln">standalone</span><span class="pun">.</span><span class="pln">cfg</span><span class="pun">.</span><span class="typ">MyTestMapper</span><span class="pun">&lt;</span><span class="str">/value&gt;<br>&nbsp; &lt;/</span><span class="kwd">set</span><span class="pun">&gt;</span><span class="pln"><br></span><span class="pun">&lt;/</span><span class="pln">property</span><span class="pun">&gt;</span><span class="pln"><br></span><span class="pun">...</span></pre><p>
            注意，这是一个接口。MyBatis框架会在运行阶段为它创建一个实例。
			还要注意返回值是没有类型的，
			但是map的list（和对应的行列对应）。
			如果需要也可以使用MyBatis映射。
	   </p><p>
	       为了执行上面的查询，可以使用<span class="emphasis"><em>managementService.executeCustomSql</em></span>方法.
		   这个方法需要一个<span class="emphasis"><em>CustomSqlExecution</em></span>实体。
		   只是一个封装类，隐藏了引擎的内部实现所需执行的信息。
	   </p><p>
	       不幸的是，java泛型让它有点儿不易阅读。下面的两个泛型是mapper类和返回类型类。
		   然而，真实的落实是简单调用mapper方法
		   并返回结果（如果有对应的话）。
	       </p><pre class="prettyprint"><span class="typ">CustomSqlExecution</span><span class="pun">&lt;</span><span class="typ">MyTestMapper</span><span class="pun">,</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> customSqlExecution </span><span class="pun">=</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">AbstractCustomSqlExecution</span><span class="pun">&lt;</span><span class="typ">MyTestMapper</span><span class="pun">,</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;&gt;&gt;(</span><span class="typ">MyTestMapper</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;&gt;</span><span class="pln"> execute</span><span class="pun">(</span><span class="typ">MyTestMapper</span><span class="pln"> customMapper</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> customMapper</span><span class="pun">.</span><span class="pln">selectTasks</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">};</span><span class="pln"><br><br></span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;&gt;</span><span class="pln"> results </span><span class="pun">=</span><span class="pln"> managementService</span><span class="pun">.</span><span class="pln">executeCustomSql</span><span class="pun">(</span><span class="pln">customSqlExecution</span><span class="pun">);</span></pre><p>
	       上面list中的Map只包含<span class="emphasis"><em>id, name 和 create time</em></span>，不是全部的任务对象。
	   </p><p>
	       使用上面的方式可以执行任何SQL。另一个更复杂的例子：
	       </p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; </span><span class="lit">@Select</span><span class="pun">({</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"SELECT task.ID_ as taskId, variable.LONG_ as variableValue FROM ACT_RU_VARIABLE variable"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"inner join ACT_RU_TASK task on variable.TASK_ID_ = task.ID_"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">"where variable.NAME_ = #{variableName}"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">})</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;&gt;</span><span class="pln"> selectTaskWithSpecificVariable</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> variableName</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
	       使用这种方法，任务表会与变量表关联。只会获得对应名称的变量，
		   任务id和对应的数字值会被返回。
	   </p></div><div class="section" title="使用ProcessEngineConfigurator实现高级流程引擎配置"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="advanced.process.engine.configurators"></a>使用ProcessEngineConfigurator实现高级流程引擎配置</h2></div></div></div><p>
	       可以使用<span class="emphasis"><em>ProcessEngineConfigurator</em></span>实现一种高级的扩展流程引擎的配置。
		   想法是创建一个<span class="emphasis"><em>org.activiti.engine.cfg.ProcessEngineConfigurator</em></span>接口的实现，
		   注入到流程引擎配置里：
	       </p><pre class="prettyprint"><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"processEngineConfiguration"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"...SomeProcessEngineConfigurationClass"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; ...<br><br>&nbsp; &nbsp; </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"configurators"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;list&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"com.mycompany.MyConfigurator"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ...<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="tag">&lt;/list&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;/property&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; ...<br><br></span><span class="tag">&lt;/bean&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><p>
	   </p><p>
	       实现这个接口需要实现两个方法。<span class="emphasis"><em>configure</em></span>方法，
		   把<span class="emphasis"><em>ProcessEngineConfiguration</em></span>作为参数。
		   可以通过这种方法添加自定义配置，这个方法会被保证调用到，
		   <span class="bold"><strong>在流程创建之前，但在所有默认配置执行之前</strong></span>。
		   另一个发那个发是<span class="emphasis"><em>getPriority</em></span>方法，允许对configurator进行排序，
		   如果一些configurator依赖其他的时候。
	   </p><p>
            一个configurator的实例是<a class="link" href="#chapter_ldap" title="Chapter&nbsp;17.&nbsp;集成LDAP">LDAP 集成</a>，
			这个configurator用来替换默认的user和group管理器类，使用处理LDAP用户存储的类。
			所以基本上一个configurator允许很大程度上修改或增强流程引擎，
			对非常高级的场景是很有用的。另一个例子是使用自定义的版本替换流程定义缓存：
            </p><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ProcessDefinitionCacheConfigurator</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">AbstractProcessEngineConfigurator</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> configure</span><span class="pun">(</span><span class="typ">ProcessEngineConfigurationImpl</span><span class="pln"> processEngineConfiguration</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">MyCache</span><span class="pln"> myCache </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">MyCache</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; processEngineConfiguration</span><span class="pun">.</span><span class="pln">setProcessDefinitionCache</span><span class="pun">(</span><span class="pln">enterpriseProcessDefinitionCache</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br></span><span class="pun">}</span></pre><p>
	   </p><p>
            流程引擎配置器也可以通过
			<a class="ulink" href="http://docs.oracle.com/javase/7/docs/api/java/util/ServiceLoader.html" target="_top">ServiceLoader</a>自动从classpath中加载。
			就是说，放在jar中的configurator实现必须放在classpath下，
			并在jar的<span class="emphasis"><em>META-INF/services</em></span>目录下包含一个<span class="bold"><strong>org.activiti.engine.cfg.ProcessEngineConfigurator</strong></span>文件。
			文件的内容是自定义实现的全类名。
			当流程引擎启动时，日志会显示找到了哪些configurator：
            </p><pre class="prettyprint"><span class="pln">INFO &nbsp;org</span><span class="pun">.</span><span class="pln">activiti</span><span class="pun">.</span><span class="pln">engine</span><span class="pun">.</span><span class="pln">impl</span><span class="pun">.</span><span class="pln">cfg</span><span class="pun">.</span><span class="typ">ProcessEngineConfigurationImpl</span><span class="pln"> &nbsp;</span><span class="pun">-</span><span class="pln"> </span><span class="typ">Found</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="kwd">auto</span><span class="pun">-</span><span class="pln">discoverable </span><span class="typ">Process</span><span class="pln"> </span><span class="typ">Engine</span><span class="pln"> </span><span class="typ">Configurators</span><span class="pln"><br>INFO &nbsp;org</span><span class="pun">.</span><span class="pln">activiti</span><span class="pun">.</span><span class="pln">engine</span><span class="pun">.</span><span class="pln">impl</span><span class="pun">.</span><span class="pln">cfg</span><span class="pun">.</span><span class="typ">ProcessEngineConfigurationImpl</span><span class="pln"> &nbsp;</span><span class="pun">-</span><span class="pln"> </span><span class="typ">Found</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="typ">Process</span><span class="pln"> </span><span class="typ">Engine</span><span class="pln"> </span><span class="typ">Configurators</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> total</span><span class="pun">:</span><span class="pln"><br>INFO &nbsp;org</span><span class="pun">.</span><span class="pln">activiti</span><span class="pun">.</span><span class="pln">engine</span><span class="pun">.</span><span class="pln">impl</span><span class="pun">.</span><span class="pln">cfg</span><span class="pun">.</span><span class="typ">ProcessEngineConfigurationImpl</span><span class="pln"> &nbsp;</span><span class="pun">-</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">activiti</span><span class="pun">.</span><span class="typ">MyCustomConfigurator</span></pre><p>
	   </p><p>
	       注意，这种ServiceLoader的方式在某些环境下可能无法正常运行。
		   可以使用ProcessEngineConfiguration的<span class="emphasis"><em>enableConfiguratorServiceLoader</em></span>属性来禁用这个功能。
		   （默认为true）。
	   </p></div><div class="section" title="启用安全的BPMN 2.0 xml"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="advanced.safe.bpmn.xml"></a>启用安全的BPMN 2.0 xml</h2></div></div></div><p>
	     大多数情况下，BPMN 2.0流程发布到Activiti引擎是在严格的控制下的，比如开发团队。
		 然后，一些情况下，可能需要把比较随意的BPMN 2.0 xml上传到引擎。
		 这种情况，要考虑恶意用户会攻击服务器，
		 参考<a class="ulink" href="http://www.jorambarrez.be/blog/2013/02/19/uploading-a-funny-xml-can-bring-down-your-server/" target="_top">这里</a>。
	   </p><p>
	     为了避免上面链接描述的攻击，
		 可以在引擎配置中设置：<span class="emphasis"><em>enableSafeBpmnXml</em></span>：
	     </p><pre class="prettyprint"><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"enableSafeBpmnXml"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">/&gt;</span></pre><p>
	   </p><p>
	       <span class="bold"><strong>默认这个功能没有开启！</strong></span>这样做的原因是它需要使用 <a class="ulink" href="http://download.java.net/jdk7/archive/b123/docs/api/javax/xml/transform/stax/StAXSource.html" target="_top">StaxSource</a>类。
	       不幸的是，一些平台（比如，JDK 6，JBoss，等等）不能用这个类（因为老的xml解析实现）
		   所以不能启用安全BPMN 2.0 xml。
	   </p><p>
		   如果Activiti运行的平台支持这项功能，请打开这个功能。
	   </p></div><div class="section" title="事件日志（实验）"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="advanced.event.logging"></a>事件日志（实验）</h2></div></div></div><p>
		   在Activiti 5.16版本中，添加了一种（实验性）事件日志机制。这种日志机制构建在通用目的下的
		   <a class="link" href="#eventDispatcher" title="事件处理">Activiti引擎的事件机制</a>，默认是禁用的。
		   它的意图是，由引擎产生的事件会被捕获，包含所有事件数据（和其他信息）的map
		   会被创建出来，并提供给<span class="emphasis"><em>org.activiti.engine.impl.event.logger.EventFlusher</em></span>，它会把数据刷新到其他地方。
		   默认，会使用一个简单地基于数据库的事件处理器/刷新器，它会使用jackson把map转换为JSON，
		   并把它保存到数据库中的<span class="emphasis"><em>EventLogEntryEntity</em></span>实体。默认会创建这个数据库日志表
		   （名叫<span class="emphasis"><em>ACT_EVT_LOG</em></span>）。如果没有使用事件日志，可以删除这个表。
	   </p><p>
		   如果想启用数据库日志：
	       </p><pre class="prettyprint"><span class="pln">processEngineConfiguration</span><span class="pun">.</span><span class="pln">setEnableDatabaseEventLogging</span><span class="pun">(</span><span class="kwd">true</span><span class="pun">);</span></pre><p>
		   或者在运行阶段：
           </p><pre class="prettyprint"><span class="pln">databaseEventLogger </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">EventLogger</span><span class="pun">(</span><span class="pln">processEngineConfiguration</span><span class="pun">.</span><span class="pln">getClock</span><span class="pun">());</span><span class="pln"><br>runtimeService</span><span class="pun">.</span><span class="pln">addEventListener</span><span class="pun">(</span><span class="pln">databaseEventLogger</span><span class="pun">);</span></pre><p> 
		   EventLogger类可以继承。特别是，<span class="emphasis"><em>createEventFlusher()</em></span>方法
		   需要返回一个<span class="emphasis"><em>org.activiti.engine.impl.event.logger.EventFlusher</em></span>接口的实例，
		   在不想用默认的数据日志时。<span class="emphasis"><em>managementService.getEventLogEntries(startLogNr, size);</em></span> 
		   可以获取Actviti的<span class="emphasis"><em>EventLogEntryEntity</em></span>实例。
	   </p><p>
	       很容易看到，现在可以使用大数据的NoSQL存储，比如MongoDb，Elastic Search等等来存储JSON。
		   也可以看到这里使用的类（org.activiti.engine.impl.event.logger.EventLogger/EventFlusher和很多EventHandler类）
		   是可插拔的，可以切换成你自己的应用场景（比如，不在数据库中存储JSON，而是把他们放到队列或大数据存储中。）
	   </p><p>
		   注意，事件日志机制是Activiti传统历史管理器的附加品。虽然所有数据都在数据库表中，
		   但是它并没有为查询优化，所以不容易获取。真实的使用场景是审计跟踪，和把它们放到大数据存储中。
	   </p></div></div><div class="chapter" title="Chapter&nbsp;19.&nbsp;使用Activiti-Crystalball进行流程仿真（实验）"><div class="titlepage"><div><div><h2 class="title"><a name="N17141"></a>Chapter&nbsp;19.&nbsp;使用Activiti-Crystalball进行流程仿真（实验）</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#crb-introduction">介绍</a></span></dt><dd><dl><dt><span class="section"><a href="#crb-overview">简介</a></span></dt><dt><span class="section"><a href="#crb-unique">CrystalBall是独立的</a></span></dt></dl></dd><dt><span class="section"><a href="#crb-inside">CrystalBall内部</a></span></dt><dt><span class="section"><a href="#crb-history-analysis">历史分析</a></span></dt><dd><dl><dt><span class="section"><a href="#crb-collectEvents">历史的事件</a></span></dt><dt><span class="section"><a href="#crb-playback">回放</a></span></dt><dt><span class="section"><a href="#crb-debug">调试流程引擎</a></span></dt><dt><span class="section"><a href="#crb-replay">重播</a></span></dt></dl></dd></dl></div><div class="section" title="介绍"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="crb-introduction"></a>介绍</h2></div></div></div><div class="section" title="简介"><div class="titlepage"><div><div><h3 class="title"><a name="crb-overview"></a>简介</h3></div></div></div><p>
      activiti-crystalball (CrystalBall) 是Activiti业务流程管理平台的仿真引擎。
	  CrystalBall可以用用户模拟一下场景：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>决策支持 - 对于生产流程
		    （比如，我们是否应该向系统添加更多资料以达到截止日期？）</p></li><li class="listitem"><p>优化和验证 - 测试修改并验证它们的影响。</p></li><li class="listitem"><p>
		    培训 - 模拟器可以用来在使用前培训员工。
          </p></li><li class="listitem"><p>
            ... .
          </p></li></ul></div><p>
    </p></div><div class="section" title="CrystalBall是独立的"><div class="titlepage"><div><div><h3 class="title"><a name="crb-unique"></a>CrystalBall是独立的</h3></div></div></div><p>
	  不需要：
      </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>c创建单独的模拟模型和引擎。</p></li><li class="listitem"><p>为模拟创建不同的报告。</p></li><li class="listitem"><p>为模拟引擎准备很多数据。</p></li></ul></div><p>
      CrystalBall模拟器是基于activiti的。所以很容易复制数据，启动模拟器，
	  可以从历史中重播流程行为。
    </p></div></div><div class="section" title="CrystalBall内部"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="crb-inside"></a>CrystalBall内部</h2></div></div></div><p>
  CrystalBall是一个<a class="ulink" href="http://en.wikipedia.org/wiki/Discrete_event_simulation" target="_top">离散事件模拟器</a>。
  最简单的实现是org.activiti.crystalball.simulator.SimpleSimulationRun。
  <a name="crb-SimpleSimulationRun"></a></p><pre class="prettyprint"><span class="pln">&nbsp; &nbsp; init</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="typ">SimulationEvent</span><span class="pln"> </span><span class="kwd">event</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> removeSimulationEvent</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">simulationEnd</span><span class="pun">(</span><span class="kwd">event</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; executeEvent</span><span class="pun">(</span><span class="kwd">event</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="kwd">event</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> removeSimulationEvent</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; close</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span></pre><p>
  SimulationRun可以执行由不同源圣城的模拟事件（参考<a class="ulink" href="#crb-playback" target="_top">PlayBack</a>）。
</p></div><div class="section" title="历史分析"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="crb-history-analysis"></a>历史分析</h2></div></div></div><p>
	    模拟器可以使用的用例之一是分析历史。
		生产环境没有提供任何重复和调试bug的机会。
		这就是为什么基本不可能把流程引擎恢复到生产环境出现问题时
		完全一样的状态。
		问题的原因不是硬件，因为
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>时间 - 流程实例可能执行好几个月。</p></li><li class="listitem"><p>并发 - 流程实例会和其他实例一起运行，
			  问题可能只产生于并发执行的情况。
            </p></li><li class="listitem"><p>用户 - 很多用户可以参与到流程实例中。
			  它会把流程实例影响到出现问题的状态。
            </p></li></ul></div><p>
		模拟器可以更好的暴露以上的问题。模拟过程是虚拟的，不会依赖真实环境。
		Activiti流程引擎本身是虚拟的。不需要创建虚拟流程引擎，为模拟环境使用。
		并发场景也是原生的。
		用户行为都会记录日志，并可以从日志重现，或者根据需要进行预测和生成。
      </p><p>
	    分析历史的最好办法是重现一次。真实环境很难实现重现，
		但是模拟器就可以实现。
      </p><div class="section" title="历史的事件"><div class="titlepage"><div><div><h3 class="title"><a name="crb-collectEvents"></a>历史的事件</h3></div></div></div><p>
		  重现历史子重要的事情是记录影响状态的事件。
		  可以说我们的流程是由用户事件驱动的（比如，领取，完成任务。。。）
		  这种情况下，我们可以使用两种事件源：
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>流程实例 - 当前只支持原始的 <a class="ulink" href="http://gro-mar.github.io/activiti-crystalball/" target="_top">activiti-crystalball</a> 项目。</p></li><li class="listitem"><p>ActivitiEvent日志。基本上，我们可以向引擎添加想要记录日志的ActivitiEventListener。
			    事件日志可以保存下来，用于后续的分析。
				基本的实现是org.activiti.crystalball.simulator.delegate.event.impl.InMemoryRecordActivitiEventListener：
<a name="crb-RecordActivitiEventListener"></a></p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onEvent</span><span class="pun">(</span><span class="typ">ActivitiEvent</span><span class="pln"> </span><span class="kwd">event</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">Collection</span><span class="pun">&lt;</span><span class="typ">SimulationEvent</span><span class="pun">&gt;</span><span class="pln"> simulationEvents </span><span class="pun">=</span><span class="pln"> transform</span><span class="pun">(</span><span class="kwd">event</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; store</span><span class="pun">(</span><span class="pln">simulationEvents</span><span class="pun">);</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span></pre><p>
              </p></li></ul></div><p>
          事件会被保存，我们可以对历史进行重现。
        </p></div><div class="section" title="回放"><div class="titlepage"><div><div><h3 class="title"><a name="crb-playback"></a>回放</h3></div></div></div><p>
		回放的好处是可以一遍一遍播放，直到我们完全理解发生了什么。
		Crystalball模拟器基于真实数据，真实用户行为，
		这是crystalball的优势。
        </p><p>
		  理解回放工作的最好方法是一步一步解释，
		  基于JUnit测试的一个例子org.activiti.crystalball.simulator.delegate.event.PlaybackRunTest。
		  测试的模拟流程是一个最简单的例子：
<a name="crb-playbackDeploy"></a></p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="tag">&lt;process</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theSimplestProcess"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"Without task Process"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;documentation&gt;</span><span class="pln">This is a process for testing purposes</span><span class="tag">&lt;/documentation&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;startEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;sequenceFlow</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"flow1"</span><span class="pln"> </span><span class="atn">sourceRef</span><span class="pun">=</span><span class="atv">"theStart"</span><span class="pln"> </span><span class="atn">targetRef</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;endEvent</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"theEnd"</span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; </span><span class="tag">&lt;/process&gt;</span></pre><p>
          流程已经发布了，可以用于真实和模拟运行。
		  </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>记录事件 -
<a name="crb-playbackRecordEvents"></a></p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="com">// get process engine with record listener to log events</span><span class="pln"><br>&nbsp; </span><span class="typ">ProcessEngine</span><span class="pln"> processEngine </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">RecordableProcessEngineFactory</span><span class="pun">(</span><span class="pln">THE_SIMPLEST_PROCESS</span><span class="pun">,</span><span class="pln"> listener</span><span class="pun">))</span><span class="pln"><br>&nbsp; </span><span class="pun">.</span><span class="pln">getObject</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; </span><span class="com">// start process instance with variables</span><span class="pln"><br>&nbsp; </span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> variables </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">HashMap</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;();</span><span class="pln"><br>&nbsp; variables</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="pln">TEST_VARIABLE</span><span class="pun">,</span><span class="pln"> TEST_VALUE</span><span class="pun">);</span><span class="pln"><br>&nbsp; processEngine</span><span class="pun">.</span><span class="pln">getRuntimeService</span><span class="pun">().</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="pln">SIMPLEST_PROCESS</span><span class="pun">,</span><span class="pln"> BUSINESS_KEY</span><span class="pun">,</span><span class="pln">variables</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; </span><span class="com">// check process engine status - there should be one process instance in the history</span><span class="pln"><br>&nbsp; checkStatus</span><span class="pun">(</span><span class="pln">processEngine</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; </span><span class="com">// close and destroy process engine</span><span class="pln"><br>&nbsp; </span><span class="typ">EventRecorderTestUtils</span><span class="pun">.</span><span class="pln">closeProcessEngine</span><span class="pun">(</span><span class="pln">processEngine</span><span class="pun">,</span><span class="pln"> listener</span><span class="pun">);</span><span class="pln"><br>&nbsp; </span><span class="typ">ProcessEngines</span><span class="pun">.</span><span class="pln">destroy</span><span class="pun">();</span></pre><p>
              上面的代码片段会在startProcessInstanceByKey方法调用后
			  记录ActivitiEventType.ENTITY_CREATED。
              </p></li><li class="listitem"><p>开始运行模拟
<a name="crb-playbackStartSimulationRun"></a></p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">SimpleSimulationRun</span><span class="pun">.</span><span class="typ">Builder</span><span class="pln"> builder </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">SimpleSimulationRun</span><span class="pun">.</span><span class="typ">Builder</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="com">// init simulation run</span><span class="pln"><br>&nbsp; </span><span class="com">// get process engine factory - the only difference from RecordableProcessEngineFactory that log listener is not added</span><span class="pln"><br>&nbsp; </span><span class="typ">DefaultSimulationProcessEngineFactory</span><span class="pln"> simulationProcessEngineFactory </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">DefaultSimulationProcessEngineFactory</span><span class="pun">(</span><span class="pln">THE_SIMPLEST_PROCESS</span><span class="pun">);</span><span class="pln"><br>&nbsp; </span><span class="com">// configure simulation run</span><span class="pln"><br>&nbsp; builder</span><span class="pun">.</span><span class="pln">processEngine</span><span class="pun">(</span><span class="pln">simulationProcessEngineFactory</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="com">// set playback event calendar from recorded events</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">.</span><span class="pln">eventCalendar</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">PlaybackEventCalendarFactory</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">SimulationEventComparator</span><span class="pun">(),</span><span class="pln"> listener</span><span class="pun">.</span><span class="pln">getSimulationEvents</span><span class="pun">()))</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="com">// set handlers for simulation events</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="pun">.</span><span class="pln">customEventHandlerMap</span><span class="pun">(</span><span class="typ">EventRecorderTestUtils</span><span class="pun">.</span><span class="pln">getHandlers</span><span class="pun">());</span><span class="pln"><br>&nbsp; </span><span class="typ">SimpleSimulationRun</span><span class="pln"> simRun </span><span class="pun">=</span><span class="pln"> builder</span><span class="pun">.</span><span class="pln">build</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; simRun</span><span class="pun">.</span><span class="pln">execute</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">NoExecutionVariableScope</span><span class="pun">());</span><span class="pln"><br><br>&nbsp; </span><span class="com">// check the status - the same method which was used in record events method</span><span class="pln"><br>&nbsp; checkStatus</span><span class="pun">(</span><span class="pln">simulationProcessEngineFactory</span><span class="pun">.</span><span class="pln">getObject</span><span class="pun">());</span><span class="pln"><br><br>&nbsp; </span><span class="com">// close and destroy process engine</span><span class="pln"><br>&nbsp; simRun</span><span class="pun">.</span><span class="pln">getProcessEngine</span><span class="pun">().</span><span class="pln">close</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="typ">ProcessEngines</span><span class="pun">.</span><span class="pln">destroy</span><span class="pun">();</span></pre><p>
              </p></li></ul></div><p>
		  更高级的回放例子在org.activiti.crystalball.simulator.delegate.event.PlaybackProcessStartTest。
        </p></div><div class="section" title="调试流程引擎"><div class="titlepage"><div><div><h3 class="title"><a name="crb-debug"></a>调试流程引擎</h3></div></div></div><p>
		  回放限制我们执行所有模拟事件（比如，开始流程，完成任务）一次性。
		  调试器允许我们把自行拆分成更小的步骤，在步骤之间观察流程引擎的状态。
        </p><p>
          SimpleSimulationRun实现了SimulationDebugger接口。SimulationDebugger可以一步一步执行模拟事件，
		  可以模型特定时间的执行。
<a name="crb-debuggerInterface"></a></p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="com">/**<br>&nbsp; * Allows to run simulation in debug mode<br>&nbsp; */</span><span class="pln"><br>&nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">interface</span><span class="pln"> </span><span class="typ">SimulationDebugger</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; </span><span class="com">/**<br>&nbsp; * initialize simulation run<br>&nbsp; * @param execution - variable scope to transfer variables from and to simulation run<br>&nbsp; */</span><span class="pln"><br>&nbsp; </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="typ">VariableScope</span><span class="pln"> execution</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; </span><span class="com">/**<br>&nbsp; * step one simulation event forward<br>&nbsp; */</span><span class="pln"><br>&nbsp; </span><span class="kwd">void</span><span class="pln"> step</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; </span><span class="com">/**<br>&nbsp; * continue in the simulation run<br>&nbsp; */</span><span class="pln"><br>&nbsp; </span><span class="kwd">void</span><span class="pln"> runContinue</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; </span><span class="com">/**<br>&nbsp; * execute simulation run till simulationTime<br>&nbsp; */</span><span class="pln"><br>&nbsp; </span><span class="kwd">void</span><span class="pln"> runTo</span><span class="pun">(</span><span class="kwd">long</span><span class="pln"> simulationTime</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; </span><span class="com">/**<br>&nbsp; * execute simulation run till simulation event of the specific type<br>&nbsp; */</span><span class="pln"><br>&nbsp; </span><span class="kwd">void</span><span class="pln"> runTo</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> simulationEventType</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; </span><span class="com">/**<br>&nbsp; * close simulation run<br>&nbsp; */</span><span class="pln"><br>&nbsp; </span><span class="kwd">void</span><span class="pln"> close</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="pun">}</span></pre><p>
          可以执行SimpleSimulationRunTest来实际观察流程引擎调试器的运行。
        </p></div><div class="section" title="重播"><div class="titlepage"><div><div><h3 class="title"><a name="crb-replay"></a>重播</h3></div></div></div><p>
		  回放需要创建另一个流程引擎实例。回放不会影响真实环境，
		  换句话，它需要模拟环境配置。重播工作在真实的流程引擎之上。
		  重播在运行的流程引擎中执行模拟事件。结论是重播是实时运行的。
		  实时意味着会被立即执行。
        </p><p>
		  下面的例子演示了如何重播一个流程实例。
		  相同的技术可以用于回放一个流程实例。（ReplyRunTest）
		  测试的第一部分初始化流程引擎，启动一个流程实例，
		  完成流程实例的任务。
<a name="crb-replayTest-init"></a></p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="typ">ProcessEngine</span><span class="pln"> processEngine </span><span class="pun">=</span><span class="pln"> initProcessEngine</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; </span><span class="typ">TaskService</span><span class="pln"> taskService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getTaskService</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="typ">RuntimeService</span><span class="pln"> runtimeService </span><span class="pun">=</span><span class="pln"> processEngine</span><span class="pun">.</span><span class="pln">getRuntimeService</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; </span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> variables </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">HashMap</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">&gt;();</span><span class="pln"><br>&nbsp; variables</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="pln">TEST_VARIABLE</span><span class="pun">,</span><span class="pln"> TEST_VALUE</span><span class="pun">);</span><span class="pln"><br>&nbsp; </span><span class="typ">ProcessInstance</span><span class="pln"> processInstance </span><span class="pun">=</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">startProcessInstanceByKey</span><span class="pun">(</span><span class="pln">USERTASK_PROCESS</span><span class="pun">,</span><span class="pln"> BUSINESS_KEY</span><span class="pun">,</span><span class="pln"><br>&nbsp; variables</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; </span><span class="typ">Task</span><span class="pln"> task </span><span class="pun">=</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">taskDefinitionKey</span><span class="pun">(</span><span class="str">"userTask"</span><span class="pun">).</span><span class="pln">singleResult</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="typ">TimeUnit</span><span class="pun">.</span><span class="pln">MILLISECONDS</span><span class="pun">.</span><span class="pln">sleep</span><span class="pun">(</span><span class="lit">50</span><span class="pun">);</span><span class="pln"><br>&nbsp; taskService</span><span class="pun">.</span><span class="pln">complete</span><span class="pun">(</span><span class="pln">task</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">());</span></pre><p>
          使用的流程引擎是基础的InMemoryStandaloneProcessEngine，配置了
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
              InMemoryRecordActivitiEventListener
			  （已在回放中使用过）记录Activiti事件，并转换为模拟事件。
              </p></li><li class="listitem"><p>
              UserTaskExecutionListener - 当创建新用户任务时，新任务会重播流程实例，
			  把任务完成事件放到事件日历中。
              </p></li></ul></div><p>
		  测试的下一个部分，在原始流程相同的引擎引擎上启动模拟调试器。
		  重播事件处理器使用StartReplayProcessEventHandler替换StartProcessEventHandler。
		  StartReplayProcessEventHandler获取流程实例id来重播，在流程实例启动的初始位置处理。
		  StartProcessEventHandler在开始阶段，会创建一个新流程实例，包含一个变量。
		  变量名为_replay.processInstanceId。变量用来保存重播的流程实例id。
		  与SimpleSimulationRun不同，ReplaySimulationRun不会：
          </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>创建和关闭流程引擎
			    实例。</p></li><li class="listitem"><p>修改模拟时间。（无法修改实际时间）</p></li></ul></div><p>
<a name="crb-replayTest-simDebug"></a></p><pre class="prettyprint"><span class="pln">&nbsp; </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">SimulationDebugger</span><span class="pln"> simRun </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ReplaySimulationRun</span><span class="pun">(</span><span class="pln">processEngine</span><span class="pun">,</span><span class="pln"><br>&nbsp; getReplayHandlers</span><span class="pun">(</span><span class="pln">processInstance</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">()));</span></pre><p>
          现在可以开始重播流程实例了。刚开始，这里没有运行的流程实例。
		  只有一个已完成的，在历史中的流程实例。在初始化后，会在事件日历中添加一个模拟事件
		  - 用来启动流程实例，重播已经完成的流程实例。
<a name="crb-replayTest-simStart"></a></p><pre class="prettyprint"><span class="pln">&nbsp; simRun</span><span class="pun">.</span><span class="pln">init</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; </span><span class="com">// original process is finished - there should not be any running process instance/task</span><span class="pln"><br>&nbsp; assertEquals</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">createProcessInstanceQuery</span><span class="pun">().</span><span class="pln">processDefinitionKey</span><span class="pun">(</span><span class="pln">USERTASK_PROCESS</span><span class="pun">).</span><span class="pln">count</span><span class="pun">());</span><span class="pln"><br>&nbsp; assertEquals</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">taskDefinitionKey</span><span class="pun">(</span><span class="str">"userTask"</span><span class="pun">).</span><span class="pln">count</span><span class="pun">());</span><span class="pln"><br><br>&nbsp; simRun</span><span class="pun">.</span><span class="pln">step</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; </span><span class="com">// replay process was started</span><span class="pln"><br>&nbsp; assertEquals</span><span class="pun">(</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">createProcessInstanceQuery</span><span class="pun">().</span><span class="pln">processDefinitionKey</span><span class="pun">(</span><span class="pln">USERTASK_PROCESS</span><span class="pun">).</span><span class="pln">count</span><span class="pun">());</span><span class="pln"><br>&nbsp; </span><span class="com">// there should be one task</span><span class="pln"><br>&nbsp; assertEquals</span><span class="pun">(</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">taskDefinitionKey</span><span class="pun">(</span><span class="str">"userTask"</span><span class="pun">).</span><span class="pln">count</span><span class="pun">());</span></pre><p>
          任务创建时，UserTaskExecutionListener会创建一个新模拟事件来结束用户任务。
<a name="crb-replayTest-simStep"></a></p><pre class="prettyprint"><span class="pln">&nbsp; simRun</span><span class="pun">.</span><span class="pln">step</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; </span><span class="com">// userTask was completed - replay process was finished</span><span class="pln"><br>&nbsp; assertEquals</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> runtimeService</span><span class="pun">.</span><span class="pln">createProcessInstanceQuery</span><span class="pun">().</span><span class="pln">processDefinitionKey</span><span class="pun">(</span><span class="pln">USERTASK_PROCESS</span><span class="pun">).</span><span class="pln">count</span><span class="pun">());</span><span class="pln"><br>&nbsp; assertEquals</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> taskService</span><span class="pun">.</span><span class="pln">createTaskQuery</span><span class="pun">().</span><span class="pln">taskDefinitionKey</span><span class="pun">(</span><span class="str">"userTask"</span><span class="pun">).</span><span class="pln">count</span><span class="pun">());</span><span class="pln"><br></span></pre><p>
          模拟结束了，我们可以继续启动另一个流程实例，或者其他事件。
		  现在我们可以关闭simRun和流程引擎。
<a name="crb-replayTest-simClose"></a></p><pre class="prettyprint"><span class="pln">&nbsp; simRun</span><span class="pun">.</span><span class="pln">close</span><span class="pun">();</span><span class="pln"><br>&nbsp; processEngine</span><span class="pun">.</span><span class="pln">close</span><span class="pun">();</span><span class="pln"><br>&nbsp; </span><span class="typ">ProcessEngines</span><span class="pun">.</span><span class="pln">destroy</span><span class="pun">();</span></pre><p>
        </p></div></div></div></div></body></html>